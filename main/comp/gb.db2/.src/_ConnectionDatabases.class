' Gambas class file

Export

Public _Driver As _DatabaseDriver

Property Read Count As Integer
Property Read List As String[]

Private $aDatabases As New String[]
Private $cDatabases As New Collection

Public Sub _get(Name As String) As Database

  Dim hDatabase As Database
  
  Try hDatabase = $cDatabases[Name]
  If Error Then 
    hDatabase = New Database
    hDatabase._Fill(_Driver, Name)
    $cDatabases[Name] = hDatabase
  Endif

  Return hDatabase
  
End

Public Sub _next() As Database
  
  Dim hDatabase As Database
  
  If IsNull(Enum.Index) Then Enum.Index = 0
  Try hDatabase = _get($aDatabases[Enum.Index])
  If hDatabase Then
    Inc Enum.Index
    Return hDatabase
  Else
    Enum.Stop
  Endif
  
End

Public Sub Exist(Name As String) As Boolean
  
  Return $cDatabases.Exist(Name)

End

Private Function Count_Read() As Integer

  Return $cDatabases.Count

End

Public Sub Add(Name As String)
  
  Main.CheckNameWith(Name, "database", ".")
  _Driver.CreateDatabase(Name)
  Refresh()
  
End

Public Sub Remove(Name As String)
  
  _Driver.DropDatabase(Name)
  Refresh()
  
End

Public Sub Refresh()

  Dim sDatabase As String
  
  $cDatabases.Clear
  $aDatabases = _Driver.GetDatabases()
  $aDatabases.ReadOnly = True
  For Each sDatabase In $aDatabases
    $cDatabases[sDatabase] = True
  Next
  
End

Private Function List_Read() As String[]

  Return $aDatabases

End
