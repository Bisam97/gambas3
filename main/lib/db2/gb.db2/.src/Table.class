' Gambas class file

Export

Property Read Name As String Use $sName
Property Read System As Boolean Use $bSystem
Property PrimaryKey As String[]
Property Type As String
Property Read Connection As Connection
Property Read Fields As _TableFields
Property Read Indexes As _TableIndexes

Private $hDriver As _DatabaseDriver
Private $hFields As _TableFields
Private $hIndexes As _TableIndexes

Private $bCreate As Boolean
Private $sType As String
Private $aPrimaryKey As New String[]

Public Sub _Fill(hDriver As _DatabaseDriver, sName As String)
  
  $hDriver = hDriver
  $sName = sName
  $bSystem = hDriver.IsSystemTable(sName)
  
End

Public Sub _Create(hDriver As _DatabaseDriver, sName As String)
  
  $hDriver = hDriver
  $sName = sName
  $aPrimaryKey = New String[]
  $bCreate = True
  
End

Public Sub Update()
  
  Dim aFields As Field[]
  Dim hField As Field
  
  If Not $bCreate Then Return
  
  If Me.Fields.Count = 0 Then Error.Raise("A table must have at least one field")
  
  aFields = New Field[]
  For Each hField In Me.Fields
    aFields.Add(hField)
  Next
  
  $hDriver.CreateTable($sName, aFields, $sType, $aPrimaryKey)
  
End

Private Function PrimaryKey_Read() As String[]

  If Not $bCreate Then Return $hDriver.GetTablePrimaryKey($sName)
  
  $aPrimaryKey.ReadOnly = True
  Return $aPrimaryKey
  
End

Private Sub PrimaryKey_Write(Value As String[])

  If Not $bCreate Then Error.Raise("Read-only property")
  $aPrimaryKey = Value.Copy()

End

Private Function Type_Read() As String

  If Not $bCreate Then Return $hDriver.GetTableType($sName)
  Return $sType

End

Private Sub Type_Write(Value As String)

  If Not $bCreate Then Error.Raise("Read-only property")
  $sType = Value

End

Private Function Connection_Read() As Connection

  Return Object.Parent($hDriver)

End

Private Function Fields_Read() As _TableFields

  If Not $hFields Then 
    $hFields = New _TableFields As "TableFields"
    $hFields._Fill($hDriver, $sName, $bCreate)
  Endif 
  
  Return $hFields

End

Private Function Indexes_Read() As _TableIndexes

  If Not $hIndexes Then 
    $hIndexes = New _TableIndexes As "TableIndexes"
    $hIndexes._Fill($hDriver, $sName)
  Endif 
  
  Return $hIndexes

End
