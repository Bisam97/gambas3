' Gambas class file

Export

Event _Fake

Property Read Count As Integer
Property Read List As String[]

Private $hDriver As _DatabaseDriver
Private $sTable As String
Private $aIndexes As String[]
Private $cIndexes As New Collection

Public Sub _Fill(hDriver As _DatabaseDriver, sTable As String)
  
  $hDriver = hDriver
  $sTable = sTable
  Refresh()
  
End

Public Sub Refresh()
  
  Dim sIndex As String
  
  $cIndexes.Clear
  $aIndexes = $hDriver.GetTableIndexes($sTable)
  $aIndexes.ReadOnly = True
  For Each sIndex In $aIndexes
    $cIndexes[sIndex] = True
  Next

End

Public Sub _get(Name As String) As Index

  Dim hIndex As Index
  
  Try hIndex = $cIndexes[Name]
  If Error Then 
    hIndex = New Index As "Index"
    hIndex._Fill($hDriver, $sTable, Name)
    $cIndexes[Name] = hIndex
  Endif

  Return hIndex
  
End

Public Sub _next() As Index
  
  Dim hIndex As Index
  
  If IsNull(Enum.Index) Then Enum.Index = 0
  If Enum.Index < $aIndexes.Count Then
    hIndex = _get($aIndexes[Enum.Index])
    Inc Enum.Index
  Else
    Enum.Stop
  Endif
  Return hIndex
  
End

Public Sub Exist(Name As String) As Boolean
  
  Return $cIndexes.Exist(Name)

End

Private Function Count_Read() As Integer

  Return $cIndexes.Count

End

Public Sub Add(Name As String, Fields As String[], Optional Unique As Boolean)

  Dim hTable As Table = Object.Parent(Me)
  
  Main.CheckNameWith(Name, "index")
  If Me.Exist(Name) Then Error.Raise("Index already exists")
  
  $hDriver.CreateIndex(hTable.Name, Name, Fields, Unique)
  Refresh()
  
End

Public Sub Remove(Name As String)
  
  Dim hTable As Table = Object.Parent(Me)
  $hDriver.DropIndex(hTable.Name, Name) 
  Refresh()
  
End

Private Function List_Read() As String[]

  Return $aIndexes

End
