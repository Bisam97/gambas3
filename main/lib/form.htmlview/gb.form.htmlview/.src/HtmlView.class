' Gambas class file

Export

Inherits UserControl

Public Const _Properties As String = "*,Border=True"

Event Title(Title As String)
Event Link(Url As String)

Property Base As String
Property Html As String
Property Border As Boolean

Private $hDoc As HtmlDocument
Private $hView As ScrollArea

Private $bCssLoaded As Boolean

Private $iLastX As Integer
Private $iLastY As Integer
Private $sBase As String

Static Private $cImage As New Collection

Public Sub _new()
  
  $hView = New ScrollArea(Me) As "View"
  $hView.Tracking = True
  
  $hDoc = New HtmlDocument As "HtmlDocument"
  $hDoc.SetMedia(Desktop.Width, Desktop.Height, Desktop.Resolution)
  View_Font
  
End

Public Sub View_Font()
  
  $hDoc.SetDefaultFont($hView.Font)
  
End

Public Sub View_Arrange()

  Dim W As Integer
  Dim H As Integer
  
  W = $hView.W - Style.ScrollbarSize
  H = $hView.H - Style.ScrollbarSize
  If $hView.Border Then 
     W -= 2
     H -= 2
  Endif
  $hDoc.Render(W, H)
  $hView.ResizeContents($hDoc.W, $hDoc.H)
  
End

Public Sub View_Draw()

  Paint.Translate(-$hView.ScrollX, -$hView.ScrollY)
  $hDoc.Draw($hView.ScrollX, $hView.ScrollY, $hView.ClientW, $hView.ClientH)
  
End

Public Sub View_MouseMove()
  
  $iLastX = Mouse.X
  $iLastY = Mouse.Y
  $hDoc.OnMouseMove($iLastX + $hView.ScrollX, $iLastY + $hView.ScrollY)
  
End

Public Sub View_MouseDown()
  
  $iLastX = Mouse.X
  $iLastY = Mouse.Y
  $hDoc.OnMouseDown($iLastX + $hView.ScrollX, $iLastY + $hView.ScrollY)
  
End

Public Sub View_MouseUp()
  
  $iLastX = Mouse.X
  $iLastY = Mouse.Y
  $hDoc.OnMouseUp($iLastX + $hView.ScrollX, $iLastY + $hView.ScrollY)
  
End


Public Sub View_Scroll()
  
  $hDoc.OnMouseMove($iLastX + $hView.ScrollX, $iLastY + $hView.ScrollY)
  
End

Private Function Html_Read() As String

  Return $hDoc.Html

End

Private Sub Html_Write(Value As String)

  If Not $bCssLoaded Then LoadCss()
  $hDoc.Html = Value

End

Public Sub LoadCss(Optional Css As String)

  Dim sMaster As String
  
  sMaster = File.Load("master.css")
  sMaster = Replace(sMaster, "$(monospace)", "Liberation Mono")
  $hDoc.LoadCss(sMaster & Css)
  $bCssLoaded = True
  
End

Public Sub _SetTitle(sTitle As String)
  
  Raise Title(sTitle)
  
End

Public Sub _RefreshView(X As Integer, Y As Integer, W As Integer, H As Integer)
  
  $hView.RefreshRect(X, Y, W, H)
  
End

Public Sub _SetCursor(sCursor As String)
  
  For Each sCursor In Split(sCursor)
    If sCursor = "auto" Then
      $hView.Mouse = Cursor.Default
      Break 
    Else If sCursor Like "url(*" Then
      $hView.Mouse = Cursor.Default
      Break 
    Else
      Try $hView.Mouse = Object.GetProperty(Cursor, Replace(sCursor, "-", ""))
      If Not Error Then Break
    Endif 
  Next
  
End

Private Function Base_Read() As String

  Return $sBase

End

Private Sub Base_Write(Value As String)

  $sBase = Value
  $hDoc.Reload()

End

Public Sub HtmlDocument_Link(sLink As String)
  
  Raise Link(sLink)
  
End

Public Sub HtmlDocument_Title(sTitle As String)
  
  Raise Title(sTitle)
  
End

Public Sub _LoadImage(sUrl As String, sBase As String) As Image
  
  Dim hImage As Image
  
  hImage = $cImage[sUrl]
  If Not hImage Then
    If sUrl = "desert.jpg" Then hImage = Image.Load("desert.jpg")
    If hImage Then $cImage[sUrl] = hImage
  Endif
  
  Return hImage
  
End

Private Function Border_Read() As Boolean

  Return $hView.Border

End

Private Sub Border_Write(Value As Boolean)

  $hView.Border = Value

End
