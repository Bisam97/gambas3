' Gambas class file

Fast Unsafe

Public Text As String
Public Length As Integer

Private Attr As New Long[]

Public NewLine As Boolean

Private $bCompressed As Boolean

Private Sub Uncompress()

  Dim I As Integer
  Dim iAttr As Long
  Dim iCount As Integer
  Dim aAttr As New Long[]
  Dim aTemp As Long[]

  For I = 0 To Attr.Max
    iAttr = Attr[I]
    iCount = (Lsr(iAttr, 9) And 127) + 1
    iAttr = iAttr And &HFFFFFFFFFFFF01FF
    aTemp = New Long[iCount]
    aTemp.Fill(iAttr)
    aAttr.Insert(aTemp)
  Next
  
  'If aAttr.Count > Length Then Stop
  
  Attr = aAttr
  $bCompressed = False

End

Private Sub Compress(bFull As Boolean)
  
  Dim I As Integer
  Dim iAttr As Long
  Dim iOldAttr As Long
  Dim iCount As Integer
  Dim aAttr As New Long[]
  
  For I = 0 To Min(Length - 1, Attr.Max)
    
    iAttr = Attr[I]
    If iAttr = iOldAttr And If iCount < 128 Then
      Inc iCount
      Continue
    Endif
    
    If iCount Then 
      aAttr.Add(iOldAttr Or Lsl(iCount - 1, 9))
    Endif
    iCount = 1
    iOldAttr = iAttr
    
  Next
  
  If iCount Then aAttr.Add(iOldAttr Or Lsl(iCount - 1, 9))
  
  If bFull And If Attr.Count < Length Then
    iCount = Length - Attr.Count
    aAttr.Add(Lsl(iCount - 1, 9))
  Endif
  
  $bCompressed = True
  
  Attr = aAttr
  
End


' Public Sub GetAttr(hAttr As TerminalAttr, X As Integer)
'   
'   Dim iAttr As Integer
'   
'   Try iAttr = Attr[X]
'   
'   If BTst(iAttr, FLAG_BG) Then
'     hAttr.Background = Lsr(iAttr, 16) And 255
'   Else
'     hAttr.Background = Color.Default
'   Endif
' 
'   If BTst(iAttr, FLAG_FG) Then
'     hAttr.Foreground = Lsr(iAttr, 24) And 255
'   Else
'     hAttr.Foreground = Color.Default
'   Endif
'   
'   hAttr.Bold = BTst(iAttr, FLAG_BOLD)
'   hAttr.Dim = BTst(iAttr, FLAG_DIM)
'   hAttr.Reverse = BTst(iAttr, FLAG_REV)
'   hAttr.Underscore = BTst(iAttr, FLAG_UND)
'   hAttr.Blink = BTst(iAttr, FLAG_BLK)
'   
' End
' 
Public Sub SetAttr(hAttr As TerminalAttr, X As Integer, L As Integer, bInsert As Boolean)
  
  Dim iAttr As Long
  Dim aAttr As Long[]
  Dim aTemp As Long[]
  
  iAttr = hAttr._ToValue()
  
  If $bCompressed Then Uncompress()
  
  aAttr = Attr
  
  If iAttr = 0 And If X >= aAttr.Count Then
    'aAttr.Resize(X)
  Else
    If bInsert Then
      If aAttr.Count < X Then aAttr.Resize(X)
      aTemp = New Long[L]
      aTemp.Fill(iAttr)
      aAttr.Insert(aTemp, X)
    Else
      If aAttr.Count < X + L Then aAttr.Resize(X + L)
      aAttr.Fill(iAttr, X, L)
    Endif
  Endif
  
End

Public Sub GetAttr() As Long[]
  
  If Not $bCompressed Then Compress(False)
  Return Attr
  
End

Public Sub GetFullAttr() As Long[]
  
  If $bCompressed Then Uncompress()
  Compress(True)
  Return Attr
  
End

Public Sub InitAttr(aInit As Long[])

  Dim L As Integer
  Dim I As Integer
  Dim iAttr As Long
  Dim iCount As Integer
  Dim C As Integer
  Dim aAttr As Long[]
  Dim aTemp As Long[]
  
  L = Length
  aAttr = New Long[]

  For I = 0 To aInit.Max
    
    If L = 0 Then Break
    
    iAttr = aInit[0]
    iCount = (Lsr(iAttr, 9) And 127) + 1
    C = Min(L, iCount)
    iAttr = iAttr And &HFFFFFFFFFFFF01FF
    aTemp = New Long[C]
    aTemp.Fill(iAttr)
    aAttr.Insert(aTemp)
    
    L -= C
    If C = iCount Then
      aInit.Remove(0)
    Else
      iCount -= C
      aInit[0] = iAttr Or Lsl(iCount - 1, 9)
    Endif
    
  Next
  
  For I = aAttr.Max DownTo 0
    If aAttr[I] Then Break
  Next

  If I < aAttr.Max Then aAttr.Remove(I + 1, -1)
  
  Attr = aAttr
  $bCompressed = False
  
End


Public Sub Clear()
  
  Text = ""
  Length = 0
  NewLine = False
  Attr.Clear
  $bCompressed = False
  
End

' Public Sub _Dump()
'   
'   Dim I As Integer
'   Dim hAttr As New TerminalAttr
'   Dim iLen As Integer
'   
'   Compress(False)
'   Print "<"; Length; "> ";
'   For I = 0 To Attr.Max
'     iLen = hAttr._FillFrom(Attr[I])
'     Print Hex(hAttr._ToValue(), 16);; "["; iLen; "]";;
'   Next
'   Print
'   
' End

