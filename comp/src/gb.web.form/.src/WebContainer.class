' Gambas class file

Export

Inherits WebControl

Public Const _IsContainer As Boolean = True
Public Const _Group As String = "Container"
Public Const _Properties As String = "*,Arrangement{Arrange.*},Margin,Spacing,Border"
Public Const _DefaultArrangement As String = "F"

Property Arrangement As Integer
Property Margin As Boolean
Property Spacing As Boolean
Property Border As Boolean

Public _Container As WebContainer

Private $aChildren As New Integer[]
Private $iArrangement As Integer
Private $bMargin As Boolean
Private $bSpacing As Boolean
Private $bBorder As Boolean

Public Sub _Add(hChild As WebControl)
  
  $aChildren.Add(hChild.Id)
  
End

Public Sub _Remove(hChild As WebControl)
  
  $aChildren.Remove($aChildren.Find(hChild.Id))
  
End

Public Sub _IsFirstVisibleChild(hChild As WebControl) As Boolean

  Dim I As Integer
  
  For I = 0 To $aChildren.Max
    If $aChildren[I] = hChild.Id Then Return True
    If WebControl.FromId($aChildren[I]).Visible Then Return
  Next
  
End

Public Sub _InitProperties()
  
  Dim I As Integer
  
  Super._InitProperties()
  
  For I = 0 To $aChildren.Max
    WebControl.FromId($aChildren[I])._InitProperties()
  Next
  
End

Public Sub _Render()
  
  Dim I As Integer
  
  For I = 0 To $aChildren.Max
    With WebControl.FromId($aChildren[I])
      ._BeforeRender()
      ._Render()
      ._AfterRender()
    End With
  Next
  
End

Public Sub _RenderStyleSheet()
  
  'Dim I As Integer
  
  Me._StartStyleSheet
  
  Super._RenderStyleSheet()
  
  If Not _Container Then
  
    If $iArrangement Then
    
      Me._AddStyleSheet("display:flex;")
      Select Case $iArrangement
        Case Arrange.Horizontal
          Me._AddStyleSheet("flex-flow:row;")
        Case Arrange.Vertical
          Me._AddStyleSheet("flex-flow:column;")
        Case Arrange.Column
          Me._AddStyleSheet("flex-flow:column wrap;")
          'If $bSpacing And If $aChildren.Count Then Me._AddStyleSheet("margin-right:-0.5em;margin-bottom:-0.5em;")
        Case Arrange.Row
          Me._AddStyleSheet("flex-flow:row wrap;")
          'If $bSpacing And If $aChildren.Count Then Me._AddStyleSheet("margin-right:-0.5em;margin-bottom:-0.5em;")
      End Select
      
    Endif
    
    If $bMargin Then Me._AddStyleSheet("padding:0.5em;")
    If $bBorder Then Me._AddStyleSheet("border:solid #C0C0C0 1px;")
    
  Endif
  
  Me._EndStyleSheet
  
  ' For I = 0 To $aChildren.Max
  '   With WebControl.FromId($aChildren[I])
  '     ._RenderStyleSheet()
  '   End With
  ' Next
  
End

Private Function Arrangement_Read() As Integer

  Return $iArrangement

End

Private Sub Arrangement_Write(Value As Integer)

  $iArrangement = Value
  Me._SetProperty("Arrangement", Value)
  UpdateContainer()

End

Private Function Margin_Read() As Boolean

  Return $bMargin

End

Private Sub Margin_Write(Value As Boolean)

  $bMargin = Value
  Me._SetProperty("Margin", Value)
  UpdateContainer()

End

Private Function Spacing_Read() As Boolean

  Return $bSpacing

End

Private Sub Spacing_Write(Value As Boolean)

  $bSpacing = Value
  Me._SetProperty("Spacing", Value)
  UpdateContainer()

End

Private Function Border_Read() As Boolean

  Return $bBorder

End

Private Sub Border_Write(Value As Boolean)

  $bBorder = Value
  Me._SetProperty("Border", Value)

End

Public Sub _RefreshReply() As Boolean
  
  Dim I As Integer
  
  If Super._RefreshReply() Then Return
  
  For I = 0 To $aChildren.Max
    WebControl.FromId($aChildren[I])._RefreshReply()
  Next
  
End

Public Sub _SetContainer(hCont As WebContainer)
  
  _Container = hCont
  UpdateContainer()
  
End

Private Sub UpdateContainer()

  If Not _Container Then Return
  
  With _Container
    .Arrangement = $iArrangement
    .Spacing = $bSpacing
    .Margin = $bMargin
  End With
  
End
