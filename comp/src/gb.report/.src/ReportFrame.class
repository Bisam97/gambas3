' Gambas class file

Export
Create Private
Inherits ReportControl

Public Const _Properties As String = "*,Border"

Private $fLeftBorderWidth As Float
Private $fRightBorderWidth As Float
Private $fTopBorderWidth As Float
Private $fBottomBorderWidth As Float

Private $hBorder As New ReportBorder

Private $hBrush As ReportBrush

Property Border As ReportBorder

Property Brush As ReportBrush
Property Read _BorderWidth As Float

Private Function Border_Read() As ReportBorder
  
  Return $hBorder
  
End

Private Sub Border_Write(Value As ReportBorder)
  
  $hBorder = Value
  
End

Public Sub _PaintBefore(Page As Integer, X As Float, Y As Float, hControl As TControl, VirtualId As Integer)
  
  Dim X1, Y1, X2, Y2 As Float
  Dim hImage As Picture
  Dim fradius As Float
  
 
  
  X1 = (x + hControl.RealLeft) 
  Y1 = (y + hControl.RealTop) 
  X2 = (x + hControl.RealLeft + hControl.RealWidth) 
  Y2 = (y + hControl.RealTop + hControl.RealHeight) 
  
  If Report.Debug Then
    
    Paint.Brush = Paint.Color(Color.Green)
    'Paint.Dash = MTools.GetBorder(Line.Dot)
    Paint.Rectangle(X1, Y1, X2 - X1, Y2 - Y1)
    Paint.Stroke
    
  Else 
    
    If Me.Brush = Null Then Return
    paint.Brush = Me.Brush._PaintBrush(X1, Y1, X2, Y2)
    
    Paint.Rectangle(X1, Y1, X2 - X1, Y2 - Y1)
    Paint.Fill
    
  Endif 
  
End

Public Sub _PaintFrame(Page As Integer, X As Float, Y As Float, hControl As TControl, VirtualId As Integer)

  _PaintBefore(Page, X, Y, hControl, VirtualId)
  Me._Paint(Page, X, Y, hControl, VirtualId)
  _PaintAfter(Page, X, Y, hControl, VirtualId)

End

Public Sub _PaintAfter(Page As Integer, X As Float, Y As Float, hControl As TControl, VirtualId As Integer)
  
  Dim X1, Y1, X2, Y2 As Integer
  'Dim fWidth As Float
  
  Dim fTopWidth, fBottomWidth, fLeftWidth, fRighWidth As Float
  fLeftWidth = MTools.UnitsToPixels($fLeftBorderWidth)
  fRighWidth = MTools.UnitsToPixels($fRightBorderWidth)
  fTopWidth = MTools.UnitsToPixels($fTopBorderWidth)
  fBottomWidth = MTools.UnitsToPixels($fBottomBorderWidth)

  
  'If $hBorder.Style <> Line.None Then 
      
      'fWidth = MTools.UnitsToPixels($fBorderWidth)
      
      X1 = (x + hControl.RealLeft) 
      Y1 = (y + hControl.RealTop) 
      X2 = (x + hControl.RealLeft + hControl.RealWidth) 
      Y2 = (y + hControl.RealTop + hControl.RealHeight) 
  
    
    
    'Paint.Brush = Paint.Color($hBorder.Brush._iValue)
    
    If fTopWidth > 0 Then 
      paint.Brush = $hBorder.Top.Brush._PaintBrush(X1, Y1, X2, Y2)
      paint.Rectangle(X1, Y1, X2 - X1, fTopWidth)
      paint.Fill
    Endif
    If fRighWidth > 0 Then 
      paint.Brush = $hBorder.Right.Brush._PaintBrush(X1, Y1, X2, Y2)
      paint.Rectangle(X2 - fRighWidth, Y1, fRighWidth, Y2 - Y1)
      paint.Fill
    Endif
    If fBottomWidth > 0 Then 
      paint.Brush = $hBorder.Bottom.Brush._PaintBrush(X1, Y1, X2, Y2)
      paint.Rectangle(X1, Y2 - fBottomWidth, X2 - X1, fBottomWidth)
      paint.Fill
    Endif
    If fLeftWidth > 0 Then 
      paint.Brush = $hBorder.Left.Brush._PaintBrush(X1, Y1, X2, Y2)
      paint.Rectangle(X1, Y1, fLeftWidth, Y2 - Y1)
      paint.Fill
    Endif
    
    
    
  'Endif
  
End

Private Function Brush_Read() As ReportBrush
  
  Return $hBrush
  
End

Private Sub Brush_Write(Value As ReportBrush)
  
  $hBrush = Value
  
End

Public Sub _SetUnifiedValues()

  Dim hSizeParse As TSizeParse
  
  Super._SetUnifiedValues()
  
  hSizeParse = New TSizeParse($hBorder.Left.Width)
  $fLeftBorderWidth = hSizeParse.GetValue()
  hSizeParse = New TSizeParse($hBorder.Right.Width)
  $fRightBorderWidth = hSizeParse.GetValue()
  hSizeParse = New TSizeParse($hBorder.Top.Width)
  $fTopBorderWidth = hSizeParse.GetValue()
  hSizeParse = New TSizeParse($hBorder.Bottom.Width)
  $fBottomBorderWidth = hSizeParse.GetValue()
End

Public Sub _GetSizeHints(AvailableW As Integer, AvailableH As Integer, TotalWidth As Integer, TotalHeight As Integer) As TSizeHint

  Dim hMyHints As New TSizeHint
  
  hMyHints.Height = Me._Height
  hMyHints.Width = Me._Width
  Return hMyHints
  
End

Private Function _BorderWidth_Read() As Float
  
  'Return $fBorderWidth
  
End
