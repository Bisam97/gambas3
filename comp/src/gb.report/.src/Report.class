' Gambas class file

Create Static
Export
Inherits ReportVBox

'Public Constants
Public Const Portrait As Integer = 0
Public Const Landscape As Integer = 1
Public {Debug} As Boolean = False

Private iCurPage As Integer = 0
Private $iCount As Integer = -1
Private $iResolution As Integer = 72
Private $bLayoutIsDirty As Boolean = True
Private $fZoom As Float = 1.0
Private $iOrientation As Integer = Portrait
Private $sSize As String = "A4"
Private $hReportTControl As New TControl
Private hData As Object

Property Read count As Integer
Property Height As String
Property Width As String
Property Resolution As Integer
Property Zoom As Float
Property Orientation As Integer
Property Size As String






'EVENT Data()

Public Sub _New()
  object.Attach(Me, Me, "Report")
  
  'ME.Width = 600
  'ME.Height = 600
  $hReportTControl.RelPage = 0
  ReportControl._ObjectFromId[Me.id] = Me
  
End

Public Sub Layout()
  Dim hprinter As New Printer
  
  If Not $bLayoutIsDirty Then Return 
  MRTools.ReportResolution = $iResolution
  MRTools.ResolutionAffichage = hprinter.Resolution / $iResolution
  MRTools.ReportZoom = $fZoom
  SetReportSize()
  $hReportTControl.ctrl = Me
  $iCount = $hReportTControl._SetGeometry(0, 0, Me.Width, Me.Height) + 1
  MRTools.PageCount = $iCount
  $bLayoutIsDirty = False
  
End


Public Sub Draw(Page As Integer)
   
   If $bLayoutIsDirty Then Layout()
   
    If page < 1 Or page > $iCount Then 
      Error.Raise("This page does not exist")
    Endif
    Dec page
    Me._DrawBefore(Page, 0, 0, $hReportTControl, -1)
    Me._Draw(Page, 0, 0, $hReportTControl, -1)
    Me._DrawAfter(Page, 0, 0, $hReportTControl, -1)
    
End

Private Sub FillPages(ctrl As ReportContainer)

  Dim hChild As Object
  Dim relHeight As Integer
  For Each hChild In ctrl.Children
    hChild._Draw(ctrl._Left, ctrl._Top)
    If hChild Is ReportContainer Then FillPages(hChild)
  Next 

End


Private Function count_Read() As Integer
  
  If $bLayoutIsDirty Then Layout() '$iCount = -1
  
  Return $iCount

End

Private Function Height_Read() As String

  Return Super.Height

End

Private Sub Height_Write(Value As String)
  If Super.Height <> Value Then 
    Super.Height = Value
    $bLayoutIsDirty = True
  Endif

End

Private Function Width_Read() As String

  Return Super.Width

End

Private Sub Width_Write(Value As String)
If Super.Width <> Value Then
  Super.Width = Value
  $bLayoutIsDirty = True
Endif

End


Private Function Resolution_Read() As Integer

  Return $iResolution

End

Private Sub Resolution_Write(Value As Integer)
  If $iResolution <> Value Then
    $iResolution = Value
    $bLayoutIsDirty = True
  Endif

End

Private Function Zoom_Read() As Float

  Return $fZoom

End

Private Sub Zoom_Write(Value As Float)

  $fZoom = Value
  MRTools.ReportZoom = $fZoom
End

Public Sub Mosaic(Range As String, Spacing As String)

  Dim $fTempZ As Float
  $fTempZ = $fZoom
  
  
  
End

' PUBLIC SUB _Data()
'   
'   RAISE Data
'   
' END

' PRIVATE FUNCTION Units_Read() AS Integer
' 
'   RETURN $iUnits
' 
' END
' 
' PRIVATE SUB Units_Write(Value AS Integer)
' 
'   $iUnits = Value
' 
' END

Private Function Size_Read() As String

  Return $sSize

End

Private Sub Size_Write(Value As String)

  $sSize = Value

End

Private Sub SetReportSize()
  Dim w As Float
  Dim h As Float
  If $sSize = "Custom" Then Return 
  Select Case $sSize
    Case "A4"
      w = 21
      h = 29.7
    Case "A3"
      w = 29.7
      h = 42
      
    Case "A5"
    
    Case "A6"
    Case "Letter"
    Case Else 
  End Select
  
  If Me.Orientation = Portrait Then 
    Me.Width = w & " cm"
    Me.Height = h & " cm"
  Else 
    Me.Width = h & " cm"
    Me.Height = w & " cm"
  
  Endif
  
End


Private Function Orientation_Read() As Integer

  Return $iOrientation

End

Private Sub Orientation_Write(Value As Integer)

  $iOrientation = Value

End

Public Sub Clear()
  
  Super._Free
  iCurPage = 0
  $iCount = -1
  $iResolution = 72
  $bLayoutIsDirty = True
  $fZoom = 1.0
  $iOrientation = Portrait
  $sSize = "A4"
End

Public Function Preview()
  
  frmPreview.Run(Me)
  
End
