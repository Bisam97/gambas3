' Gambas class file

Export
Inherits ReportFrame

Public Const _Properties As String = "*,Stretch,Image{Image}"
Public Const _Similar As String = "ReportTextLabel"
Public Const _DefaultEvent As String = "Data"

Private $hPic As Image
Private $bStretch As Boolean

Property Image As Image
Property Stretch As Boolean
Public Data As Image
Event Data(Index As Integer)

Public Sub _GetSizeHints(AvailableW As Float, AvailableH As Float, TotalWidth As Float, TotalHeight As Float) As TSizeHint

  Dim hMyHints As New TSizeHint

  Dim Scale As Float
  Dim hPic As Image

  hMyHints = Super.GetSizeHints(AvailableW, AvailableH, TotalWidth, TotalHeight)

  If Me.Autoresize Then
    If $hpic Then
      hpic = $hpic
    Else
      Raise Data(Me.Parent._GetIndex())
      hpic = Data
    Endif

    If hpic Then
      hMyHints.Width = Max(hMyHints.Width, Me.Padding._Left + Units.UnitToCm(hpic.Width, "px") + Me.Padding._Right)
      hMyHints.Height = Max(hMyHints.Width, Me.Padding._Top + Units.UnitToCm(hpic.Height, "px") + Me.Padding._Bottom)
    Endif

  Endif

  Return hMyHints

End

Public Sub _Paint(Page As Integer, X As Float, Y As Float, hControl As TControl, VirtualId As Integer)

  Dim ix, iy As Float
  Dim hBrush As PaintBrush
  Dim hPic As Image
  'Dim w, h As Float
  ix = x + hControl.RealLeft + MTools.UnitsToPixels(Me.Padding._Left)
  iy = y + hControl.RealTop + MTools.UnitsToPixels(Me.Padding._Top)

  If Not $hpic Then
    Raise Data(Me.Parent._GetIndex())
    hpic = Data
    If Not hPic Then Return
  Else
    hPic = $hpic
  Endif

  '$hPic = $hPic.Stretch(hControl.RealWidth, hControl.RealHeight)

  hBrush = Paint.Image(hpic)
  hBrush.Translate(ix, iy - 1)
  If Me.Stretch Then
    hBrush.Scale(hControl.RealWidth / hPic.Width, hControl.RealHeight / hPic.Height)
    Paint.Brush = hBrush
    Paint.Rectangle(ix, iy, hControl.RealWidth, hControl.RealHeight)
  Else
    Paint.Brush = hBrush
    Paint.Rectangle(ix, iy, hPic.Width, hPic.Height - 1)
  Endif
  Paint.Fill

  'Draw.Picture($hPic, (x + hControl.RealLeft + MRTools.UnitsToPixels(Me.Padding)) * MRTools.ReportZoom, (y + hControl.RealTop + MRTools.UnitsToPixels(Me.Padding)) * MRTools.ReportZoom, hControl.RealWidth * MRTools.ReportZoom, hControl.RealHeight * MRTools.ReportZoom)

End

Private Function Image_Read() As Image

  Return $hPic

End

Private Sub Image_Write(Value As Image)

  $hPic = Value
  If Left(Me.Width, 1) = "0" Then Me.Width = $hpic.Width & " px"
  If Left(Me.Height, 1) = "0" Then Me.Height = $hpic.Height & " px"

End

Private Function Stretch_Read() As Boolean

  Return $bStretch

End

Private Sub Stretch_Write(Value As Boolean)

  $bStretch = Value

End
