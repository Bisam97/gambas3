' Gambas test file

''' Every test in this class failes, but is reverted to be reported as good

Public Plan As Integer = 11

Public Sub Setup()

    Assert.Note("------------------ Intentional Failures ------------------")

End

Public Sub Teardown()

    Assert.Note("------------------ End Intentional Failures ------------------")
    Assert.Note("11 Tests, 11 Failures, then everything is ok.")

End

Public Sub TestStringFailure()

    Assert.ReverseNext()
    Assert.StringEquals("Lisa", "Paul", "Intentional String failure. Ok if not ok.")

End

Public Sub TestLongFailure()

    Assert.ReverseNext()
    Assert.Equals(2, 3, "Intentional Long failure. Ok if not ok.")

End

Public Sub TestLongTypeMismatchFailure()

    Dim s As String = "3.0"
    
    Assert.ReverseNext()
    Assert.Equals(s, 3, "Intentional Long type mismatch failure. Ok if not ok.")

End

Public Sub TestEqualsFailure()

    Dim oOne, oTwo As Object

    Assert.Note("Equals failures")
    Assert.ReverseNext()
    Assert.Equals(2, 3)
    
    Assert.ReverseNext()
    Assert.Equals("3", 2.0)
    
    Assert.ReverseNext()
    Assert.Equals("2", 2.1)
    
    oOne = New Test
    oTwo = New Test
    Assert.ReverseNext()
    Assert.Equals(oOne, oTwo)

End

Public Sub TestError()

    Dim a As Long

    Try a = 3 / 0
    Assert.ReverseNext()
    Assert.ErrorCode(5, "Wanted error 5. Ok if not ok.")

    ' No Error, AssertError has to report a failure
    Assert.ReverseNext()
    Assert.Error("No Error but error expected. Ok if not ok.")

End



'
