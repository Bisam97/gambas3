' Gambas test file

''' Tests all Asserts

Public Sub TestAssert()

    Assert.Ok(True, "Testing True")

End

Public Sub TestAssertEmpty()

    Assert.Null("", "Empty with \"\"")
    Assert.Null(Null, "Empty with Null")

End

Public Sub TestAssertEqualsFloat()

    Dim f As Float

    f = 0.55555555555555
    Assert.Approximate(f, 0.55555555555555, 0, "Check with equal floats")

End

Public Sub TestAssertEqualsLong()

    Dim l As Long

    l = 555555555555555555

    Assert.Equals(555555555555555555, l, "Check with two long")

End

Public Sub TestAssertEqualsDate()

    Dim d As Date
    Dim sdate As String
    Dim d2 As Date

    d = Now()
    sdate = CString(d)
    d2 = CDate(sdate)

    Assert.Equals(d, d2, "Check with equal dates")

End

Public Sub TestAssertEqualsObject()

    Dim s As New TestCase("1", Me)
    Dim s2 As Object

    s2 = s

    Assert.Equals(s2, s, "Equal Objects")

End

Public Sub TestAssertEqualsString()

    Dim s1, s2 As String

    s1 = "blaahhh"
    s2 = "blaahhh"

    Assert.StringEquals(s1, s2, "Equal Strings")

End

Public Sub TestAssertNotNull()

    Assert.NotNull("" & Null & 1, "String is not Null")
    Assert.NotNull(Me, "Object is not Null")

End

Public Sub TestAssertError()

    Dim r As Float

    Try r = 2 / 0
    Assert.Error("Test error")

End

Public Sub TestAssertErrorCode()

    Dim r As Float

    Try r = 2 / 0
    Assert.ErrorCode(26, "Test error with code")

End

Public Sub TestTodoErrorCode()

    Dim r As Float

    Try r = 2 / 1
    Assert.Todo("See automatic diagnostics 1/2")
    Assert.ErrorCode(26, "Division by zero?")

    Try r = 2 / 0
    Assert.Todo("See automatic diagnostics 2/2")
    Assert.ErrorCode(25, "Division by zero?")

End

Public Sub TestNote()

    Test.Note("The next note is Null and that's alright:")
    Test.Note(Null)
    Test.SkipAll("This doesn't actually assert anything")

End

Public Sub TestLike()

    Assert.Like("Gambas", "G*", "Gambas like G*")
    Assert.Like("Gambas", "?[Aa]*", "Gambas Like \"?[Aa]*\"")

End