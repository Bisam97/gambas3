' Gambas class file

Private $hWatcher As Watcher
Private $hWatcherParent As Watcher
Private $bLock As Boolean
Private $bHidden As Boolean
Private $bVertical As Boolean
Private $bAutoResize As Boolean

Public Sub _new()
  
  'dwgHandle.Width = 6
  '$hWatcher = New Watcher(panToolBar) As "panToolBar"
  $hWatcherParent = New Watcher(Me.Parent.Parent) As "Container"
  $bAutoResize = True
  
End


Public Sub IsVertical() As Boolean
  
  Return $bVertical
  
End

Public Sub SetVertical(bVertical As Boolean)
  
  $bVertical = bVertical
  Update
  
End



Public Function GetContainer() As Container
  
  Return panToolBar
  
End

Private Function GetToolBarWidth() As Integer
  
  Dim hCtrl As Control
  Dim W As Integer
  
  If $bVertical Then 
  
    For Each hCtrl In panToolBar.Children
      If hCtrl.Visible Then 
        If hCtrl.Expand Then Return GetFreeWidth() - dwgHandle.Height
        W += hCtrl.H
      Endif
    Next
    
  Else 
  
    For Each hCtrl In panToolBar.Children
      If hCtrl.Visible Then 
        If hCtrl.Expand Then Return GetFreeWidth() - dwgHandle.Width
        W += hCtrl.W
      Endif
    Next
    
  Endif
  
  Return W + panToolBar.Padding * 2 
  
End

Private Sub GetToolBarHeight() As Integer
  
  Dim hCtrl As Control
  Dim H As Integer

  If $bVertical Then
  
    For Each hCtrl In panToolBar.Children
      H = Max(H, hCtrl.W)
    Next
    
  Else
  
    For Each hCtrl In panToolBar.Children
      H = Max(H, hCtrl.H)
    Next
    
  Endif
  
  Return H + panToolBar.Padding * 2   
  
End



Private Function GetFreeWidth() As Integer
  
  'DEBUG ME.Parent.Parent.ClientW;; ME.Parent.Parent.W
  If $bVertical Then
    Return Me.Parent.Parent.ClientH
  Else 
    Return Me.Parent.Parent.ClientW
  Endif
  
End


' PUBLIC SUB Form_Resize()
' 
'   'DEBUG ME.Width
' 
'   IF NOT ME.Parent.Design THEN
'     Object.Lock(ME)
'     panToolBar.Arrangement = Arrange.LeftRight
'     panToolBar.Padding = 2
'     panToolBar.AutoResize = TRUE
'     panToolBar.Move(If(System.RightToLeft, 0, 6), 0, Min(ME.ClientW - 6, GetToolBarWidth()))
'     'panToolBar.Width = GetToolBarWidth()
'     ME.Parent.Resize(Max(8, panToolBar.Width) + 6, Max(8, panToolBar.Height))
'     Object.Unlock(ME)
'   ELSE
'     panToolBar.Arrangement = Arrange.None
'     panToolBar.Move(If(System.RightToLeft, 0, 6), 0, ME.ClientW, ME.ClientH)
'   ENDIF
'   
'   dwgHandle.Move(If(System.RightToLeft, ME.ClientW - 5, 2), 2, 3, ME.ClientH - 4)
' 
' END

Public Sub dwgHandle_Draw()

  Draw.FillX = 0
  Draw.FillY = 0
  If $bVertical Then
    Draw.Style.Handle(0, 0, dwgHandle.W, 8, $bVertical, Not Me.Enabled)
  Else
    Draw.Style.Handle(0, 0, 8, dwgHandle.H, $bVertical, Not Me.Enabled)
  Endif
  
End

Private Sub SetArrangement()
  
  Dim hToolbar As ToolBar = Me.Parent
  
  If hToolbar.Design Then Return
  hToolbar.Arrangement = If($bVertical, Arrange.Column, Arrange.Row)
  hToolBar.Padding = 1
  
End


Private Sub Update()

  Dim W As Integer
  Dim XH, XP As Integer 

'   IF $bIgnoreNextUpdate THEN
'     $bIgnoreNextUpdate = bSetIgnore
'     RETURN
'   ENDIF 
' 
'   $bIgnoreNextUpdate = bSetIgnore

  If $bLock Then Return
  $bLock = True
  
  '$bVertical = ME.H > ME.W
  SetArrangement

  If System.RightToLeft Then 
    If Not $bVertical Then
      XH = Me.W - 8
    Else 
      XH = Me.H - 8
    Endif
    XP = 0
  Else 
    XH = 0
    XP = 8
  Endif 
  
  If Not $bVertical Then
  
    If Me.Parent.Design Then
    
      'DEBUG
      dwgHandle.Move(XH, 0, 4, Me.H)
      panToolBar.Move(XP, 0, Me.W - 4, Me.H)
    
    Else If $bHidden Then
    
      panToolBar.Hide
      dwgHandle.Move(0, 0, 8, GetToolBarHeight())
      Me.Parent.Resize(8, dwgHandle.H)
    
    Else
    
      panToolBar.Show
      
      If $bAutoResize Then
        W = Max(8, Min(GetToolBarWidth() + dwgHandle.W, GetFreeWidth()))
      Else 
        W = Max(8, GetToolBarWidth() + dwgHandle.W)
      Endif
      
      panToolBar.Move(XP, 0, W - 8)
      dwgHandle.Move(XH, 0, 8, panToolBar.H)
    
      If $bAutoResize Then
        Me.Parent.Resize(W, Max(GetToolBarHeight(), panToolBar.H))
      Else 
        Me.Parent.Resize(W, GetToolBarHeight())
      Endif
      
    Endif
    
  Else 
  
    If Me.Parent.Design Then
    
      'DEBUG
      dwgHandle.Move(0, XH, Me.W, 8)
      panToolBar.Move(0, XP, Me.W, Me.H - 8)
    
    Else If $bHidden Then
    
      panToolBar.Hide
      dwgHandle.Move(0, 0, GetToolBarHeight(), 8)
      Me.Parent.Resize(dwgHandle.W, 8)
    
    Else
    
      panToolBar.Show

      If $bAutoResize Then
        W = Max(Min(GetToolBarWidth() + dwgHandle.H, GetFreeWidth()), 8)
      Else 
        W = Max(GetToolBarWidth() + dwgHandle.H, 8)
      Endif

      panToolBar.Move(0, XP, panToolBar.W, W - 8)
      'DEBUG "ME.H = "; ME.H; " ME.Parent.H = "; ME.Parent.H; "  ME.Parent.Parent.H = "; ME.Parent.Parent.H; "  panToolBar.H = "; panToolBar.H
      dwgHandle.Move(0, XH, panToolBar.W, 8)
    
      If $bAutoResize Then
        Me.Parent.Resize(Max(GetToolBarHeight(), panToolBar.W), W)
      Else 
        Me.Parent.Resize(GetToolBarHeight(), W)
      Endif
      
    Endif
    
  Endif
  
  $bLock = False

End

Public Sub Form_Resize()
  
  Update
  
End

 
' PUBLIC SUB Container_Arrange()
'   
'   DEBUG
'   Form_Resize
'   
' END

Public Sub Container_Resize()
  
  'IF ME.Parent.Design THEN RETURN
  Update
  
End


Public Sub panToolBar_Arrange()

  'IF ME.Parent.Design THEN RETURN
  Update


End

Public Function IsHidden() As Boolean
  
  Return $bHidden
  
End

Public Sub SetHidden(bHidden As Boolean)
  
  If bHidden = $bHidden Then Return
  $bHidden = bHidden
  Update
  Action.Raise(Me.Parent)
  
End

' PUBLIC SUB dwgHandle_DblClick()
' <
'   SetHidden(NOT $bHidden)
' 
' END

Public Sub dwgHandle_Enter()

  'dwgHandle.Background = Color.TextBackground

End

Public Sub dwgHandle_Leave()

  'dwgHandle.Background = Color.Background

End

Public Sub dwgHandle_MouseUp()

  'SetHidden(NOT $bHidden)

End

Public Sub IsAutoResize() As Boolean
  
  Return $bAutoResize
  
End

Public Sub SetAutoResize(bAutoResize As Boolean)
  
  $bAutoResize = bAutoResize
  Update
  
End
