' Gambas class file

Private $aAction As CAction[]
Private $hEditor As FShortcutEditor

Public Sub Run() As Boolean
  
  Return Not Me.ShowModal() 
  
End

Public Sub Form_Open()

  Dim iInd As Integer
  Dim hAction As CAction

  '$hSettings = New Settings("gb.form.mdi")
  Settings.ReadWindow(Me, "gb.form.mdi/FShortcut")

  $aAction = New CAction[]
  For Each hAction In MAction.Actions
    If hAction.HasShortcut Then $aAction.Add(hAction)
  Next
  $aAction.Sort

  tvwShortcut.Rows.Count = $aAction.Count
  tvwShortcut.Columns.Count = 2
  tvwShortcut.Columns[0].Text = ("Action")
  tvwShortcut.Columns[1].Text = ("Shortcut")
  
  For iInd = 0 To $aAction.Max
  
    hAction = $aAction[iInd]
  
    tvwShortcut[iInd, 0].Text = hAction.Display
    tvwShortcut[iInd, 0].Padding = 4
    tvwShortcut[iInd, 0].Picture = hAction.Icon
    tvwShortcut[iInd, 1].Text = hAction.Shortcut
    tvwShortcut[iInd, 1].Padding = 4

  Next
  
  tvwShortcut.Columns[0].Width = tvwShortcut.Width - Desktop.Scale * 24
  tvwShortcut.Rows.Height = -1

  $hEditor = New FShortcutEditor(Me)
  $hEditor.Hide
  $hEditor.Ignore = True

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnOK_Click()

  tvwShortcut.Save
  SaveShortcut
  Me.Close(True)

End

Public Sub tvwShortcut_Change()

  Dim hAction As CAction 
  
  If btnFind.Value Then Return
  If tvwShortcut.Row < 0 Then Return

  hAction = $aAction[tvwShortcut.Row]
  'If tvwShortcut.Editor And If $hEditor.Define(hAction) Then Return

  Object.Lock(tvwShortcut)
  tvwShortcut.Column = 1
  Object.Unlock(tvwShortcut)
  
  tvwShortcut.EditWith($hEditor)
  
End

Private Sub SaveShortcut()
  
  Dim hAction As CAction
  Dim sKey As String
  
  For Each hAction In MAction.Actions
    hAction.Save
  Next
  Settings.Save
  
End

Public Sub Form_Close()

  Settings.WriteWindow(Me, "gb.form.mdi/FShortcut")
  
End

Public Sub tvwShortcut_Save(Row As Integer, Column As Integer, Value As String)

  If $hEditor.BadShortcut Then Return
  
  tvwShortcut[Row, 1].Text = Value
  $aAction[Row].Shortcut = Value

End

Public Sub btnFind_Click()

  If btnFind.Value Then
    tvwShortcut.Cancel
    btnFind.SetFocus
  Else
    tvwShortcut_Change
  Endif

End

Public Sub btnFind_KeyPress()

  Dim sShortcut As String
  Dim iRow As Integer

  If btnFind.Value Then
    sShortcut = MAction.FindShortcut()
    If sShortcut Then
      For iRow = 0 To tvwShortcut.Rows.Count - 1
        If tvwShortcut[iRow, 1].Text = sShortcut Then
          tvwShortcut.Row = iRow
          Break
        Endif
      Next
    Endif
    Stop Event
  Endif

End

Public Sub btnFind_LostFocus()

  btnFind.Value = False

End

Public Sub btnDefault_Click()

  Dim hAction As CAction
  Dim iRow As Integer

  If Message.Warning(("You are going back to the default shortcuts."), ("Go back"), ("Cancel")) = 2 Then Return
  
  tvwShortcut.Cancel
  For iRow = 0 To tvwShortcut.Rows.Count - 1
    hAction = $aAction[iRow]
    hAction.Shortcut = hAction.DefaultShortcut
    tvwShortcut[iRow, 1].Text = hAction.Shortcut
  Next

  SaveShortcut

End

Public Sub HandleKey() As Boolean
  
  Dim iRow As Integer = tvwShortcut.Row
  
  Select Case Key.Code
    Case Key.Up
      Dec iRow
    Case Key.Down
      Inc iRow
    Case Key.Home
      iRow = 0
    Case Key.End
      iRow = tvwShortcut.Rows.Count - 1
    Case Key.PageUp
      iRow -= Max(1, tvwShortcut.ClientH \ tvwShortcut.Rows.H - 1)
    Case Key.PageDown
      iRow += Max(1, tvwShortcut.ClientH \ tvwShortcut.Rows.H - 1)
    Default
      Return False
  End Select
  
  If iRow >= 0 And If iRow < tvwShortcut.Rows.Count Then
    tvwShortcut.Row = iRow
    timAfter.Trigger
  Endif
  
  Return True
  
End

Public Sub timAfter_Timer()

  tvwShortcut_Change

End

' Public Sub tvwShortcut_MouseDown()
' 
'   tvwShortcut_Select
' 
' End
' 
' Public Sub tvwShortcut_MouseUp()
' 
'   tvwShortcut_Select
' 
' End
