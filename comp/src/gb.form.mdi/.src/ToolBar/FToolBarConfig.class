' Gambas class file

Private $hToolbar As ToolBar
Private $hForm As FToolBar
Private $aDefault As String[]
Private $hInside As DrawingArea

Public Sub Run(hToolbar As ToolBar) 

  Me.Load
  SetCurrentToolbar(hToolbar)
  Me.Show
  
End

Private Sub SetCurrentToolbar(hToolbar As ToolBar)

  'Debug hToolbar;; "-";; $hToolbar
  
  If hToolbar = $hToolbar Then Return
  
  If $hToolbar Then
    $hForm.SetConfigureMode(False)
    $hToolbar = Null
    $hForm = Null
  Endif
  
  If Not hToolbar Then Return
  
  $hToolbar = hToolbar
  $hForm = $hToolbar._Container.Parent

  If $hToolbar.Text Then
    Me.Title = Subst(("'&1' toolbar configuration"), $hToolbar.Text)
  Else
    Me.Title = ("Toolbar configuration")
  Endif
  
  Select Case $hForm.GetIconSize()
    Case FToolBar.ICON_LARGE
      radLarge.Value = True
    Case FToolBar.ICON_MEDIUM
      radMedium.Value = True
    Case Else
      radSmall.Value = True
  End Select
  
  InitAction
  $hForm.SetConfigureMode(True)

End


Public Sub btnClose_Click()

  Me.Close

End

Public Sub AddAction(sAction As String)
  
  Dim hItem As Control

  'Debug sAction

  If Left(sAction) = "." Then sAction = Mid$(sAction, 2)
  
  For Each hItem In svwAction.Children
    If hItem.Tag = sAction Then
      hItem.Show
      Return
    Endif
  Next
  
  hItem = New DrawingArea(svwAction) As "Item"
  hItem.Tag = sAction
  hItem.Resize(Desktop.Scale * 32, Desktop.Scale * 5)
  
End


Private Sub InitAction()
  
  Dim hCtrl As Control
  Dim hItem As DrawingArea
  Dim sAction As String
  
  'For Each hCtrl In svwAction.Children
  '  hCtrl.Delete
  'Next
  svwAction.Children.Clear
  svwAction.Arrangement = Arrange.None
  
  AddAction("|")
  
  'Print $hToolbar.Children.Count;; $hToolbar._Container.Children.Count
  For Each sAction In MAction.Toolbars[$hForm.ToolbarKey].List
  
    If Not MAction.Actions.Exist(sAction) Then Continue
    hCtrl = $hForm.FindControl(sAction, True)
    If Not hCtrl Then Continue
    
    AddAction(sAction)
    
  Next
  
  svwAction.Arrangement = Arrange.Column
  
End


Public Sub Item_Enter()
  
  $hInside = Last
  $hInside.Refresh
  
End

Public Sub Item_Leave()
  
  $hInside = Null
  Last.Refresh
  
End

Private Sub DrawItem(hAction As CAction)
  
  'Dim hAction As CAction
  Dim hIcon As Picture
  Dim sText As String
  Dim W As Integer
  
  'If hItem.Tag Then hAction = MAction.Actions[hItem.Tag]
  
  'If $hInside = hItem Then 
  Draw.Style.Button(0, 0, Draw.W, Draw.H, False)
  If hAction Then
    If hAction.Icon Then 
      Draw.Picture(hAction.Icon, 4, (Draw.H - hAction.Icon.H) / 2)
      W = hAction.Icon.W
    Else
      W = Stock.GetSize("small")
    Endif
    If Draw.W > (Draw.H * 2) Then Draw.Text(hAction.Display, W + 8, 0, Draw.W - W - 12, Draw.H, Align.Normal)
  Else
    W = Stock.GetSize("small")
    Draw.Rect(4 + W \ 2 - 2, (Draw.H - W) \ 2, 4, W)
    If Draw.W > (Draw.H * 2) Then Draw.Text(("Separator"), W + 8, 0, Draw.W - W - 12, Draw.H, Align.Normal)
    'Draw.Style.Separator(8, (hItem.H - W) / 2, W - 4, W, False)
  Endif
  
End


Public Sub Item_Draw()
  
  DrawItem(MAction.Actions[Last.Tag])
  
End

Private Sub GetItemScreenshot(hAction As CAction) As Picture
  
  Dim hPict As Picture
  Dim hItem As Control
  ' Dim hObject As Object
  ' Dim bVisible As Boolean
  ' Dim hParent As Control
  ' Dim hWindow As Window
  ' Dim X, Y As Integer
  
  ' hWindow = New Window
  ' hWindow.Border = False
  ' hWindow.Move(Mouse.ScreenX - 4, Mouse.ScreenY - 4, hItem.W, hItem.H)
  ' 
  ' bVisible = hItem.Visible
  ' hParent = hItem.Parent
  ' X = hItem.X
  ' Y = hItem.Y
  ' hObject = hItem
  ' Try hObject.Border = True
  ' hItem.Reparent(hWindow, 0, 0)
  ' hItem.Show
  ' hWindow.Show
  ' Wait
  ' hPict = hItem.Screenshot()
  ' hWindow.Close
  ' hItem.Reparent(hParent, X, Y)
  ' hItem.Visible = bVisible
  
  ' bVisible = hItem.Visible
  ' X = hItem.X
  ' Y = hItem.Y
  ' hParent = hItem.Parent
  ' 
  ' hItem.Ignore = True
  ' hItem.Reparent($hForm, 0, 0)
  ' hItem.Raise
  ' hItem.Background = Color.Background
  ' hItem.Show
  ' Wait
  ' hPict = hItem.Screenshot()
  ' 
  ' hItem.Reparent(hParent, X, Y)
  ' hItem.Visible = bVisible
  ' hItem.Ignore = False
  ' hItem.Background = Color.Default
  
  hItem = $hForm.FindControl(hAction.Key)
  hPict = New Picture(hItem.W, hItem.H)
  Draw.Begin(hPict)
  Draw.FillRect(0, 0, Draw.W, Draw.H, Color.Background)
  DrawItem(hAction)
  Draw.End
  
  Return hPict
  
End


Public Sub DragAction(hCtrl As Control, sAction As String)
  
  Dim hAction As CAction 
  Dim bOutside As Boolean
  Dim hDest As Control
  Dim bAnim As Boolean
  Dim hItem As Control

  If Not sAction Then Return

  bOutside = hCtrl.Parent = svwAction
  ' If bOutside Then
  '   If sAction <> "|" Then hCtrl.Hide
  ' Else
  '   hCtrl.Hide
  ' Endif

  If sAction Then hAction = MAction.Actions[sAction]
  
  'hItem = $hForm.FindControl(sAction)
  
  $hForm.DragStart(bOutside)
  
  'If hItem Then
  '  Drag.Icon = GetItemScreenshot(hItem)
  If hAction Then
    Drag.Icon = GetItemScreenshot(hAction)
  Else
    Drag.Icon = Null
  Endif

  'Debug "START DRAG";; sAction
  hDest = Drag(hCtrl, sAction, MAction.MIME)
  'Debug "END DRAG"
  
  If hDest Then
  
    If bOutside Then
    
      If hDest = panAction Then
      Else
        If hCtrl.Tag <> "|" Then 
          hCtrl.Hide
        Endif
      Endif
    
    Else
    
      If hDest = panAction Then
        If hCtrl.Action Then
          $hForm.HideControl(hCtrl)
        Else
          hCtrl.Delete
        Endif
        bAnim = True
      Else
        If Not hCtrl.Action Then
          hCtrl.Delete
        Endif
      Endif
    
    Endif
    
  Else
  
    If Not bOutside Then
      hCtrl.Show
    Else
      bAnim = True
    Endif
    
  Endif
  
  $hForm.DragEnd(bAnim)
  
End

Public Sub Item_MouseDrag()
  
  Dim hItem As DrawingArea = Last
  
  '$hInside = Null
  'hItem.Refresh
  DragAction(hItem, hItem.Tag)
  
End

Public Sub Form_Close()

  SetCurrentToolbar(Null)
  Settings.Write(Me, "/gb.form.mdi/FToolbarConfig")

End


Public Sub Form_Open()

  Me.Center
  Settings.Read(Me, "/gb.form.mdi/FToolbarConfig")

End


Public Sub panAction_Drag()

  If Drag.Format <> MAction.MIME Or If Drag.Source.Parent = svwAction Then
    Stop Event
    Return
  Endif
  
  Drag.Show(panAction)

End

Public Sub panAction_Drop()

  Dim sAction As String = Drag.Paste(MAction.MIME)
  
  If sAction <> "|" Then AddAction(sAction)

End


Public Sub btnReset_Click()

  If Message.Question(("Do you really want to reset the toolbar?"), ("Reset"), ("Cancel")) = 1 Then
    $hForm.SaveConfig(True)
    InitAction
  Endif

End

Public Sub btnUndo_Click()

  $hForm.LoadConfig
  InitAction

End

' Public Sub cmbSize_Click()
' 
'   $hForm.SetIconSize(cmbSize.Index)
' 
' End


Public Sub radSize_Click()

  Dim iSize As Integer
  
  If Not Last.Value Then Return
  
  If Last = radLarge Then
    iSize = FToolBar.ICON_LARGE
  Else If Last = radMedium Then
    iSize = FToolBar.ICON_MEDIUM
  Else
    iSize = FToolBar.ICON_SMALL
  Endif
  
  $hForm.SetIconSize(iSize)

End

Public Sub OpenMenu(hToolbar As ToolBar)
  
  If $hForm Then Return
  If Not hToolbar.Key Then Return
  
  SetCurrentToolbar(hToolbar)

  'mnuConfigure.Text = Me.Title & "..." 'Subst(("Configure '&1' toolbar..."), hToolbar.Key)

  mnuSmallSize.Checked = False
  mnuMediumSize.Checked = False
  mnuLargeSize.Checked = False

  Select Case $hForm.GetIconSize()
    Case FToolBar.ICON_LARGE
      mnuLargeSize.Checked = True
    Case FToolBar.ICON_MEDIUM
      mnuMediumSize.Checked = True
    Case Else
      mnuSmallSize.Checked = True
  End Select
  
  mnuToolbar.Popup
  
  If Not Me.Visible Then SetCurrentToolbar(Null)
  
End

Public Sub mnuSmallSize_Click()
  
  $hForm.SetIconSize(FToolBar.ICON_SMALL)
  
End

Public Sub mnuMediumSize_Click()
  
  $hForm.SetIconSize(FToolBar.ICON_MEDIUM)
  
End

Public Sub mnuLargeSize_Click()
  
  $hForm.SetIconSize(FToolBar.ICON_LARGE)
  
End

Public Sub mnuConfigure_Click()
  
  Me.Show
  
End
