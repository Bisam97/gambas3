' Gambas class file

Static Public Const Name As String = ""

Static Public Const BRACES_OPEN As String = "([{\""
Static Public Const BRACES_CLOSE As String = ")]}\""
Static Public Const STRING_DELIM As String = "\""
Static Public Const BETWEEN_BRACES_LEFT As String = "([{"
Static Public Const BETWEEN_BRACES_RIGHT As String = ")]}"

Public CloseBraces As Boolean

Private $bCanCloseBraces As Boolean
Private $bCanCloseBracesComputed As Boolean


Static Public Sub _get(Type As String) As TextEditorMode

	Try Return Object.New("TextEditorMode_" & Type)
	'Error.Raise("Cannot load highlighter: '" & Type & "'")
	Return New TextEditorMode

End

Public Sub IsIdentCar(sCar As String) As Boolean
  
  If IsLetter(sCar) Or If IsDigit(sCar) Then Return True
  
End

Public Sub InsideString(hEditor As TextEditor) As Boolean
  
  Dim iLen As Integer
  Dim I As Integer
  Dim sInside As String
  Dim sLine As String
  Dim sCar As String
  Dim sDelim As String
  
  sLine = hEditor.Current.Text
  iLen = hEditor.Current.Length
  sDelim = Me.STRING_DELIM
  
  For I = 1 To hEditor.Column
    sCar = String.Mid$(sLine, I, 1)
    If sCar = sInside Then
      sInside = ""
    Else If InStr(sDelim, sCar) Then
      If Not sInside Then sInside = sCar
    Else If sCar = "\\" Then
      If sInside Then Inc I
    Endif
  Next
  
  Return sInside
  
End

Public Sub BetweenBraces(hEditor As TextEditor) As Boolean

  Dim sLine As String
  Dim X As Integer
  Dim iLen As Integer
  Dim iPos As Integer
  
  If InsideString(hEditor) Then Return
  
  sLine = hEditor.Current.Text
  iLen = hEditor.Current.Length
  X = hEditor.Column
  
  If X = 0 Or If X = iLen Then Return
  
  iPos = InStr(Me.BETWEEN_BRACES_LEFT, String.Mid$(sLine, X, 1))
  If iPos = 0 Then Return
  
  Return String.Mid$(sLine, X + 1, 1) = Mid$(Me.BETWEEN_BRACES_RIGHT, iPos, 1)
  
End



Public Sub CanCloseBraces(hEditor As TextEditor) As Boolean
  
  If Not $bCanCloseBracesComputed Then 
    $bCanCloseBraces = False
    If CloseBraces Then 
      $bCanCloseBraces = Not InsideString(hEditor)
    Endif
    '$bCanCloseBracesComputed = True
  Endif
  
  Return $bCanCloseBraces
  
End


Public Sub OnKeyPress(hEditor As TextEditor) As Boolean
  
  Dim sOther As String
  Dim iPos As Integer
  
  iPos = InStr(Me.BRACES_OPEN, Key.Text)
  
  If iPos And If CanCloseBraces(hEditor) Then
    
    sOther = Mid$(Me.BRACES_CLOSE, iPos, 1)
    hEditor.SaveCursor()
    hEditor.Insert(Key.Text)
    hEditor.Insert(sOther)
    hEditor.RestoreCursor()
    hEditor.Goto(hEditor.Column + 1, hEditor.Line)
    $bCanCloseBracesComputed = False
    Return True
    
  Endif
  
  $bCanCloseBracesComputed = False
    
End
