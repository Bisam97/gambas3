' Gambas class file

Property Modified As Boolean
Property Saved As Boolean
Property Limit As Boolean
Property Comment As Boolean

Private Enum FLAG_MODIFIED, FLAG_SAVED, FLAG_LIMIT, FLAG_COMMENT

Public Colors As Byte[]

Private $iFlag As Byte
Private $nState As Byte
Private $aState[4] As Short

Static Public Sub _call() As CLineInfo

  Dim hInfo As CLineInfo
  
  hInfo = New CLineInfo
  Return hInfo
  
End

Private Sub SetFlag(iFlag As Integer, Value As Boolean)

  If Value Then
    $iFlag = BSet($iFlag, iFlag)
  Else
    $iFlag = BClr($iFlag, iFlag)
  Endif

End

Private Function Modified_Read() As Boolean

  Return BTst($iFlag, FLAG_MODIFIED)

End

Private Sub Modified_Write(Value As Boolean)

  SetFlag(FLAG_MODIFIED, Value)

End

Private Function Saved_Read() As Boolean

  Return BTst($iFlag, FLAG_SAVED)

End

Private Sub Saved_Write(Value As Boolean)

  SetFlag(FLAG_SAVED, Value)

End

Public Sub ClearHighlight()
  
  Colors = Null
  
End

Private Function Limit_Read() As Boolean

  Return BTst($iFlag, FLAG_LIMIT)

End

Private Sub Limit_Write(Value As Boolean)

  SetFlag(FLAG_LIMIT, Value)

End

Private Function Comment_Read() As Boolean

  Return BTst($iFlag, FLAG_COMMENT)

End

Private Sub Comment_Write(Value As Boolean)

  SetFlag(FLAG_COMMENT, Value)

End

Public Function GetState() As Short[]

  Dim I As Integer
  
  Dim aState As New Short[$nState]
  
  If $nState Then
    For I = 0 To $nState - 1
      aState[I] = $aState[I]
    Next
  Endif
  
  Return aState

End

Public Sub SetState(Value As Short[]) As Boolean

  Dim I As Integer
  Dim bChange As Boolean

  If $nState <> Value.Count Then bChange = True
  $nState = Value.Count
  For I = 0 To $nState - 1
    If $aState[I] = Value[I] Then Continue
    $aState[I] = Value[I]
    bChange = True
  Next
  Return bChange

End
