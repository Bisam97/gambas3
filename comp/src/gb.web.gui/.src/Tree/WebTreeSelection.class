' Gambas class file

Event _Fake

Public Keys As New Collection

Public Sub Copy() As WebTreeSelection
  
  Dim hSel As WebTreeSelection = New WebTreeSelection
  hSel.Keys = Keys.Copy()
  Object.Attach(hSel, GetParent(), "WebTreeSelection")
  Return hSel
  
End

Public Sub Save() As Variant
  
  Return Keys.Copy()
  
End

Public Sub Restore(vSel As Variant)
  
  Keys = vSel.Copy()
  
End

Private Sub GetParent() As WebTree
  
  Return Object.Parent(Me)
  
End

Public Sub Select(iStart As Integer, Optional iLength As Integer = 1)

  Dim hParent As WebTree = GetParent()
  Dim I As Integer
  Dim hItem As _WebTreeItem
  
  For I = iStart To iStart + iLength - 1
    
    hItem = hParent._RowToItem(I)
    If Not hItem Then Break
    Keys[hItem.Key] = True
    
  Next
  
End

Public Sub SelectItem(sKey As String, bSelected As Boolean)
  
  If bSelected Then
    Keys[sKey] = True
  Else
    Keys.Remove(sKey)
  Endif
  
End

Public Sub UnSelect(iStart As Integer, Optional iLength As Integer = 1)
  
  Dim hParent As WebTree = GetParent()
  Dim I As Integer
  Dim hItem As _WebTreeItem
  
  For I = iStart To iStart + iLength - 1
    
    hItem = hParent._RowToItem(I)
    If Not hItem Then Break
    Keys.Remove(hItem.Key)
    
  Next
  
End

Public Sub UnSelectAll()
  
  Keys.Clear
  'Dump
  
End

Public Sub SelectAll()

  Dim sKey As String
  
  Keys.Clear
  For Each sKey In GetParent().Keys
    Keys[sKey] = True
  Next
  
End


Public Sub IsSelected(sKey As String) As Boolean
  
  Return Keys.Exist(sKey)
  
End

Public Function GetSelectedRows() As String[]

  Dim aKey As New String[]
  
  For Each Keys
    aKey.Add(Keys.Key)
  Next
  
  Return aKey

End

Public Sub IsEverythingSelected() As Boolean
  
  Return Keys.Count = GetParent().Count
  
End
