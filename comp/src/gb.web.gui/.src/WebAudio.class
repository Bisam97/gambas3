' Gambas class file

Export
Inherits WebControl

Public Const _IsControl As Boolean = True
Public Const _IsVirtual As Boolean = True
Public Const _Properties As String = "*,-Class,-Height,-Visible,-Expand,-Ignore,-Enabled,Audio{WebAudio},Loop,AutoPlay,Sources"
Public Const _Group As String = "Special"
Public Const _DefaultEvent As String = "Ready"

'' Triggers when a file is ready to play.
Event Ready

'' Triggers when the audio has finished playing.
Event End

'' Triggers when the audio pauses.
Event Pause

'' Triggers as audio position changes during play.
Event Position

'' The URL / path of the audio to play.
Property Audio As String
'' The audio will repeat.
Property Loop As Boolean
'' Autoplay the audio on loading.
Property AutoPlay As Boolean

'' A list of alternative sources to try.\
'' type can be specified using a comma or the file ext is used. (mp3 is auto converted to type audio/mpeg).
''
'' Eg.\
'' WebAudio1.Sources = ["/mp3/track.mp3, audio/mpeg"]\
'' WebAudio1.Sources = ["/ogg/track.ogg"]
Property Sources As String[]

'' Get or set if the audio is paused
Property Paused As Boolean
Private $bPaused As Boolean

'' Length of the loaded track.
Property Read Duration As Float
Private $fDuration As Float

'' get or set track position.
Property Position, Pos As Float
Private $fPosition As Float

Private $sAudio As String
Private $bLoop As Boolean
Private $bAutoPlay As Boolean
Private $sSources As String[]

Public Sub _BeforeRender()

End

Public Sub _Render()

  Print "<audio"; Me._GetClassId(); " src=\""; Html(Me._GetLink($sAudio)); "\""; 
  Print Me._GetUpdateJS("oncanplay", "duration", "$_(" & JS(Me.Name) & ").duration");
  Print Me._GetUpdateJS("onpause", "pause");
  If Object.CanRaise(Me, "End") Then Print Me._GetUpdateJS("onended", "ended");
  Print Me._GetUpdateJS("ontimeupdate", "position", "$_(" & JS(Me.Name) & ").currentTime");
  If $bLoop Then Print " loop=\"1\"";
  If $bAutoPlay Then Print " autoplay";
  Print ">"
  If $sSources Then PrintSources
  Print ("Html audio not supported")

  Print "</audio>";

End

Public Sub _UpdateProperty(sProp As String, vValue As Variant)

  If sProp = "duration" Then
    $fDuration = vValue
    $fPosition = 0
    Raise Ready
  Else If sProp = "position"
    If IsNull(vValue) Or If Not vValue Then Return
    If $bPaused Then $bPaused = False
    $fPosition = vValue
    Raise Position
  Else If sProp = "pause"
    $bPaused = True
  Else If sProp = "ended"
    Raise End 
  Endif

End

Public Sub PrintSources()

  For Each sSource As String In $sSources.Copy()
    Dim sExt As String
    If InStr(sSource, ",") Then
      Dim sSplit As String = Split(sSource, ",")
      sSource = RTrim(sSplit[0])
      sExt = LTrim(sSplit[1])
      If Left(sExt, 6) <> "audio/" Then sExt = "audio/" & sExt
    Else
      sExt = File.Ext(sSource)
      If sExt = "mp3" Then sExt = "mpeg"
      sExt = "audio/" & sExt
    Endif
    Print "<source src=\"" & sSource & "\" type=\"" & sExt & "\">"
  Next

End

Public Sub _AfterRender()

End

Public Sub Play()

  WebForm._AddJavascript("$_(" & JS(Me.Name) & ").play();")
  $bPaused = False

End

Public Sub Pause()

  WebForm._AddJavascript("gw.sound.pause(" & JS(Me.Name) & ")")

End

Public Sub Stop()

  WebForm._AddJavascript("gw.sound.stop(" & JS(Me.Name) & ")")
  $bPaused = False

End

Private Function Audio_Read() As String

  Return $sAudio

End

Private Sub Audio_Write(Value As String)

  $sAudio = Value
  Me.Refresh

End

Private Function Loop_Read() As Boolean

  Return $bLoop

End

Private Sub Loop_Write(Value As Boolean)

  $bLoop = Value
  Me.Refresh

End

Private Function AutoPlay_Read() As Boolean

  Return $bAutoPlay

End

Private Sub AutoPlay_Write(Value As Boolean)

  $bAutoPlay = Value
  Me.Refresh

End

Private Function Paused_Read() As Boolean

  Return $bPaused

End

Private Sub Paused_Write(Value As Boolean)

  If Value Then Pause Else Play

End

Private Function Sources_Read() As String[]

  Return $sSources

End

Private Sub Sources_Write(Value As String[])

  $sSources = Value
  Me.refresh

End

Private Function Duration_Read() As Float

  Return $fDuration

End

Private Function Position_Read() As Float

  Return $fPosition

End

Private Sub Position_Write(Value As Float)

  '  $fPosition = Value
  WebForm._AddJavascript("$_(" & JS(Me.Name) & ").currentTime = " & Str(Value))

End
