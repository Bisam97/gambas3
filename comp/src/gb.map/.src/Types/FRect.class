' Gambas class file

Export

Public X As Float
Public Y As Float
Public X2 As Float
Public Y2 As Float
Property Width As Float
Property Height As Float


Public Sub _new(Optional fX As Float, fY As Float, fX2 As Float, fY2 As Float)
  
  X = fX
  Y = fY
  X2 = fX2
  Y2 = fY2
  
End

Static Public Function FromArray(aFloat As Float[]) As FRect

  Dim hFRect As New FRect
  hFRect.X = aFloat[0]
  hFRect.X2 = aFloat[1]
  hFRect.Y = aFloat[2]
  hFRect.Y2 = aFloat[3]
  Return hFRect

End

Public Sub ToArray() As Float[]
  
  Return [X, X2, Y, Y2]
  
End

' Public Function Contains(Other As FBox) As Boolean
'   
'   If Other.X > X And If Other.X2 < X2 And If Other.Y > Y And If Other.Y2 < Y2 Then 
'     Return True
'     ' Else
'     '   Stop
'   Endif
'   'Stop
' 
' End

Public Function Intersection(Other As FRect) As FRect
  
  Dim fx, fy, fx2, fy2 As Float
  Dim hFRect As FRect
  
  fx = Max(X, Other.X)
  fy = Max(Y, Other.y)
  fX2 = Min(X2, Other.X2)
  fY2 = Min(Y2, Other.Y2)
  If fX2 > fx And fY2 > fY Then
    hFRect = New FRect(fx, fy, fx2, fy2)
    Return hFRect
  Endif

End

Public Function Contains(fX As Float, fY As Float) As Boolean
  
  Dim hr As New Rect
  
  If fX > X And If fX < X2 And If fY > Y And If fy < Y2 Then Return True
  
End




Private Function WIdth_Read() As Float

  Return x2 - x

End

Private Sub WIdth_Write(Value As Float)

  X2 = X + Value

End

Private Function Height_Read() As Float

  Return Y2 - Y

End

Private Sub Height_Write(Value As Float)

  Y2 = Y + Value

End
