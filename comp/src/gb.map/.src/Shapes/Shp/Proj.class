' Gambas class file

' Gambas class file
'Export
Create Static
Public Struct ProjUV
  u As Float
  v As Float
End Struct


Library "libproj:0"
Public Extern pj_init_plus(Value As String) As Pointer
Public Extern pj_free(projPJ As Pointer)

Public Extern pj_fwd(projLP As ProjUV, projPJ As ProjUV) As ProjUV
Public Extern pj_inv(projXY As ProjUV, projPJ As ProjUV) As ProjUV
Public Extern pj_strerrno(Value As Integer) As String

Public Extern pj_transform(src As Pointer, dst As Pointer, point_count As Long, point_offset As Integer, x As Pointer, y As Pointer, z As Float) As Integer

Public ptrPJ As Pointer



Public Sub _New(sInit As String)
           Dim pj_merc, pj_latlong As Pointer
           Dim x, y As Float
            
  

            ptrPJ = pj_init_plus(sInit) '"+init=epsg:3395")
            
            
            
               'If Not pj_merc Then Quit
            'pj_latlong = pj_init_plus("+proj=latlong +ellps=clrk66")
               'If Not pj_latlong Then Quit
            'While (scanf("%lf %lf", & x, & y) == 2){
             '  x = Rad(-16) ' DEG_TO_RAD;
             '  y = Rad(20.25) 'DEG_TO_RAD;
             '  p = pj_transform(pj_latlong, pj_merc, 1, 1, VarPtr(x), VarPtr(y), 0.0)
             '  Print x, y
               
               
               
               
            
  
End

Public Function TransformFp(PrjTo As Proj, Fp As FPoint) As FPoint
  
  'Dim x, y As Float
  
  'x = Fp.X
  'Y = Fp.Y
  'If Not pj_transform(Me.ptrPJ, PrjTo.ptrPJ, 1, 1, VarPtr(x), VarPtr(y), 0.0) Then Return New FPoint(x, y)
  'Return Null
  
  Return Transform(PrjTo, fp.x, fp.Y)
End

Public Function Transform(PrjTo As Proj, fX As Float, fY As Float) As FPoint
  
  Dim x, y As Float
  Dim p As Integer
  
  x = fX
  Y = fY
  p = pj_transform(Me.ptrPJ, PrjTo.ptrPJ, 1, 1, VarPtr(x), VarPtr(y), 0.0) 
  If p = 0 Then Return New FPoint(x, y)
  'Print pj_strerrno(p)
  'Print fX, fY
  Return New FPoint
End



Public Sub _Free()
  
  pj_free(ptrPJ)
  
  
End
