' Gambas class file

Export

Static Private Sub URLQuote(Path As String) As String
  
  Dim iInd As Integer
  Dim sRes As String
  Dim sCar As String
  
  For iInd = 1 To Len(Path)
    sCar = Mid$(Path, iInd, 1)
    If sCar = " " Then 
      sCar = "+"
    Else If IsLetter(sCar) Or If IsDigit(sCar) Or If InStr("-._~,$!/", sCar) Then 
    Else 
      sCar = "%" & Hex$(Asc(sCar), 2)
    Endif
    sRes &= sCar
  Next

  Return sRes
  
End

Static Private Sub URLUnquote(Path As String, Optional DoNotDecodePlus As Boolean) As String
  
  Dim iInd As Integer
  Dim sRes As String
  Dim sCar As String
  
  For iInd = 1 To Len(Path)
    sCar = Mid$(Path, iInd, 1)
    If sCar = "%" Then 
      sCar = Chr$(Val("&H" & Mid$(Path, iInd + 1, 2)))
      iInd += 2
    Else If sCar = "+" And If Not DoNotDecodePlus Then 
      sCar = " "
    Endif
    sRes &= sCar
  Next

  Return sRes  
  
End



Static Public Sub CopyPath(Path As String)
  
  Clipboard.CopyPaths([Path])
  
End

Static Public Sub CopyPaths(Paths As String[])

  Dim I As Integer
  Dim sData As String
  
  If Not Paths Or If Paths.Count = 0 Then Return
  
  For I = 0 To Paths.Max
    sData &= "file://" & URLQuote(Paths[I]) & gb.CrLf
  Next
  
  Clipboard.Copy(sData, "text/uri-list")
  
End

Static Public Sub PastePaths() As String[]

  Dim sData As String
  Dim aPaths As String[]
  Dim sUri As String
  
  Try sData = Clipboard.Paste("text/uri-list")
  If Not sData Then Return
  
  aPaths = New String[]
  For Each sUri In Split(Replace(sData, "\n", ""), "\r")
    If sUri Begins "file://" Then aPaths.Add(URLUnquote(Mid$(sUri, 8)))
  Next
  
  Return aPaths
  
End
