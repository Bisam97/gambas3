' Gambas class file

Export

Inherits UserControl

Public Const _Properties As String = "*,Action,Label=True,Border=True,Pulse"
Public Const _Group As String = "Form"
Public Const _DefaultEvent As String = "MouseDown"
Public Const _DefaultSize As String = "24,4"

Property Label As Boolean
Property Value As Float
Property Pulse As Boolean
Property Border As Boolean

'' @{since 3.20}
'' Return or set the text displayed in the progress bar.
''
'' If not set, which is the default, the [../value] property is displayed as a percentage.

Property Text As String

Private $fValue As Float
Private $bLabel As Boolean = True
Private $bPulse As Boolean
Private $iPulse As Integer
Private $hTimerPulse As Timer
Private $bBorder As Boolean = True
Private $sText As String

Private Function Label_Read() As Boolean

  Return $bLabel

End

Private Sub Label_Write(Value As Boolean)

  $bLabel = Value
  Me.Refresh

End

Private Function Value_Read() As Float

  If $bPulse Then Return
  Return $fValue

End

Private Sub Value_Write(Value As Float)

  If $bPulse Then Return
  
  Value = Max(0, Min(1, Value))
  If Value = $fValue Then Return
  $fValue = Value
  
  Me.Refresh

End

Public Sub UserControl_Draw()
  
  Dim F As Integer '= 2 'Max(4, Style.FrameWidth + 2)
  Dim iWP As Integer
  Dim W As Float
  Dim iCol As Integer
  Dim I As Integer
  Dim sText As String
  
  iCol = Color.Merge(Color.Background, Color.LightForeground)
  If Not Me.Enabled Then iCol = Color.Desaturate(iCol)
  
  'Paint.FillRect(F, F, Paint.W - F * 2, Paint.H - F * 2, iCol)
  
  If $bBorder Then
    'Paint.AntiAlias = False
    Paint.Background = Color.LightForeground
    Paint.Rectangle(0.5, 0.5, Paint.W - 1, Paint.H - 1)
    Paint.Stroke
    'Paint.AntiAlias = True
    F = 2
  Else
    F = 0
  Endif
  
  iCol = Color.SelectedBackground
  If Not Me.Enabled Then iCol = Color.Desaturate(iCol)
  
  'Draw.Foreground = Color.LightForeground
  'Draw.Rect(0, 0, Paint.W, Paint.H)

  'Style.PaintPanel(0, 0, Paint.W, Paint.H, Border.Sunken)
  
  Paint.Rectangle(F, F, Paint.W - F * 2, Paint.H - F * 2)
  Paint.Clip
  
  If $bPulse Then
    
    iWP = Paint.H
    $iPulse = $iPulse Mod (iWP * 2)
    
    Paint.Save
    Paint.Background = iCol
    Paint.Translate($iPulse - iWP * 2, 0)
    For I = 0 To Paint.W + iWP * 2 Step iWP
      Paint.MoveTo(0, Paint.H)
      Paint.LineTo(iWP, 0)
      Paint.LineTo(iWP + iWP / 2, 0)
      Paint.LineTo(iWP / 2, Paint.H)
      Paint.LineTo(0, Paint.H)
      Paint.Fill
      Paint.Translate(iWP, 0)
    Next
    Paint.Restore
    
    sText = $sText
    Paint.Background = Color.SelectedBackground
    Paint.DrawTextShadow(sText, 0, 0, Paint.W, Paint.H, Align.Center, 1)    
    Paint.Background = Color.Foreground
    GoSub DRAW_LABEL
    
  Else
  
    W = Paint.W * $fValue
  
    sText = $sText
    If Not sText Then sText = Format($fValue, "0%")
  
    If Me.RightToLeft Then
      
      Paint.FillRect(Paint.W - W, 0, W, Paint.H, iCol)
      
      If $bLabel Then
    
        Paint.Save
        Paint.Rectangle(Paint.W - W, 0, W, Paint.H)
        Paint.Clip
        Paint.Background = Color.SelectedForeground
        GoSub DRAW_LABEL
        Paint.Restore
    
        Paint.Save
        Paint.Rectangle(0, 0, Paint.W - W, Paint.H)
        Paint.Clip
        Paint.Background = Color.Foreground
        GoSub DRAW_LABEL
        Paint.Restore
    
      Endif
      
    Else
      
      Paint.FillRect(0, 0, W, Paint.H, iCol)
    
      If $bLabel Then
    
        Paint.Save
        Paint.Rectangle(0, 0, W, Paint.H)
        Paint.Clip
        Paint.Background = Color.SelectedForeground
        GoSub DRAW_LABEL
        Paint.Restore
    
        Paint.Save
        Paint.Rectangle(W, 0, Paint.W - W, Paint.H)
        Paint.Clip
        Paint.Background = Color.Foreground
        GoSub DRAW_LABEL
        Paint.Restore
    
      Endif
      
    Endif
    
  Endif
  
  Return 
  
DRAW_LABEL:

  If sText Then Paint.DrawText(sText, 0, 0, Paint.W, Paint.H, Align.Center)    
  Return 
  
End


Private Function Pulse_Read() As Boolean

  Return $bPulse

End

Private Sub Pulse_Write(Value As Boolean)

  If Value = $bPulse Then Return
  
  $bPulse = Value
  
  If Me.Design Then Return
  
  If $bPulse And If Me.W > (Me.H * 2) Then
    $hTimerPulse = New Timer As "Pulse"
    $hTimerPulse.Delay = 20
    $hTimerPulse.Start
    $fValue = 0
    $iPulse = 0
  Else
    $hTimerPulse = Null
  Endif

End

Public Sub Pulse_Timer()

  Inc $iPulse
  Me.Refresh
  
End

Private Function Border_Read() As Boolean

  Return $bBorder

End

Private Sub Border_Write(Value As Boolean)

  $bBorder = Value
  Me.Refresh

End

Private Function Text_Read() As String

  Return $sText

End

Private Sub Text_Write(Value As String)

  $sText = Value
  Me.Refresh

End
