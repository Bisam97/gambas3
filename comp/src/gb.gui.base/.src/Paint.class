' Gambas class file

Export

Static Public Sub TrimText(Text As String, W As Float, Optional H As Float) As String
  
  Dim I, S, L As Integer
  Dim HL As Integer = Paint.Font.Height
  Dim sLine As String
  Dim sSep As String
  Dim sCar As String
  Dim SL As Integer
  Dim WT As Integer
  Dim HT As Integer
  
  If Not Text Then Return
  
  If H = 0 Then H = HT
  HT = HL
  SL = 1
  L = String.Len(Text)
  
  For I = 1 To L
    
    sCar = String.Mid$(Text, I, 1)
    If I < L And If InStr(" \n", sCar) = 0 Then Continue
    
    sLine = String.Mid$(Text, SL, I - SL)
    
    If (HT + HL) > H Then
      WT = Paint.Font.TextWidth(sLine & "…")
      If WT > W Then
        Return String.Left(Text, S - 1) & "…"
      Endif
    Else
      WT = Paint.Font.TextWidth(sLine)
      If WT > W Then
        Text = String.Left(Text, S - 1) & "\n" & String.Mid$(Text, S + 1)
        HT += HL
        SL = S + 1
      Endif
    Endif
    
    sSep = sCar
    S = I
    If sSep = "\n" Then HT += HL
    
  Next
  
  Return Text
  
End

Static Private Sub HtmlLeft(sHtml As String, iPos As Integer) As String

  Dim sRes As String
  Dim bMarkup As Boolean
  Dim sCar As String
  Dim I As Integer

  For I = 1 To String.Len(sHtml)
    sCar = String.Mid(sHtml, I, 1)
    If sCar = "<" Then
      bMarkup = True
      sRes &= sCar
      Continue
    Else If sCar = ">" Then
      bMarkup = False
      sRes &= sCar
      Continue
    Endif
    If bMarkup Or If I <= iPos Then sRes &= sCar
  Next

  Return sRes
  
End

Static Public Sub TrimRichText(RichText As String, W As Float, Optional H As Float) As String
  
  Dim I As Integer
  Dim sCar As String
  Dim bMarkup As Boolean
  
  If Not RichText Then Return
  If H = 0 Then H = Paint.Font.Height
  
  For I = 1 To String.Len(RichText)
    sCar = String.Mid(RichText, I, 1)
    If sCar = "<" Then
      bMarkup = True
    Else If sCar = ">" Then
      bMarkup = False
    Endif
    If bMarkup Then Continue
    If Paint.Font.RichTextHeight(HtmlLeft(RichText, I) & "…", W) > H Then Break
  Next
  
  Return HtmlLeft(RichText, I - 1) & "…"
  
End

Static Public Sub DrawTextShadow(Text As String, X As Float, Y As Float, W As Float, H As Float, Optional Alignment As Integer = Align.TopLeft, Optional Radius As Integer = -1, Optional Opacity As Float = 0.5)
  
  Dim hShadow As Image
  Dim hFont As Font
  Dim hBrush As PaintBrush
  Dim DX, DY As Integer
  Dim iBackground As Integer
  
  hFont = Paint.Font
  iBackground = Paint.Background
  hBrush = Paint.Brush
  
  If Radius < 0 Then Radius = Max(1, hFont.Height \ 8)
  Radius = Min(256, Radius)
  
  With Paint.TextSize(Text)

    hShadow = New Image(Ceil(.W) + 2 + Radius * 2, Ceil(.H) + 2 + Radius * 2, Color.Transparent)

    DX = W - .W
    DY = H - .H
  
    Paint.Begin(hShadow)
    
    Paint.Font = hFont
    Paint.Background = iBackground
    Paint.Brush = hBrush

    If Align.IsCenter(Alignment) Then
      DX /= 2
    Else If Align.IsLeft(Alignment) Then
      DX = 0
    Endif
    
    If Align.IsMiddle(Alignment) Then
      DY /= 2
    Else If Align.IsTop(Alignment) Then
      DY = 0
    Endif
  
    Paint.DrawText(Text, Radius - DX, Radius - DY, W, H, Alignment)
    Paint.End
    hShadow.Fuzzy(Radius)
    
  End With
  
  Paint.DrawImage(hShadow, X + DX - Radius, Y + DY - Radius,,, Opacity)
  
End

Static Public Sub DrawRichTextShadow(Text As String, X As Float, Y As Float, W As Float, H As Float, Optional Alignment As Integer = Align.TopLeft, Optional Radius As Integer = -1, Optional Opacity As Float = 0.5)
  
  Dim hShadow As Image
  Dim hFont As Font
  Dim hBrush As PaintBrush
  Dim DX, DY As Integer
  Dim iBackground As Integer
  
  If Radius < 0 Then Radius = Desktop.Scale \ 3
  Radius = Min(256, Radius)
  
  hFont = Paint.Font
  iBackground = Paint.Background
  hBrush = Paint.Brush
  
  With Paint.RichTextSize(Text, W)

    hShadow = New Image(Ceil(.W) + 2 + Radius * 2, Ceil(.H) + 2 + Radius * 2, Color.Transparent) '&HFF000000)
    
    DX = W - .W
    DY = H - .H
  
    Paint.Begin(hShadow)
    Paint.Font = hFont
    Paint.Background = iBackground
    Paint.Brush = hBrush

    If Align.IsCenter(Alignment) Then
      DX /= 2
    Else If Align.IsLeft(Alignment) Then
      DX = 0
    Endif
    
    If Align.IsMiddle(Alignment) Then
      DY /= 2
    Else If Align.IsTop(Alignment) Then
      DY = 0
    Endif
  
    Paint.DrawRichText(Text, Radius - DX, Radius - DY, W, H, Alignment)
    Paint.End
    hShadow.Fuzzy(Radius)
    
  End With
  
  Paint.DrawImage(hShadow, X + DX - Radius, Y + DY - Radius,,, Opacity)
  
End
