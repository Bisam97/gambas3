' Gambas class file

Inherits UserContainer

Public Const _Properties As String = "*,-Padding,-Spacing,-Arrangement,-AutoResize,-Indent"
Public Const _DefaultArrangement As String = "V"
Public Const _DefaultEvent As String = "Click"

Property Layout, Settings As Integer[]
Event Resize

Private $hObs As Observer
Private $bLayouting As Boolean

Public Sub _new()
  
  Me._Arrangement = Arrange.None
  
  $hObs = New Observer(Me) As "Container"
  
End

Public Sub Container_NewChild((Control) As Control)

  Dim aLayout As Integer[]
  
  aLayout = Layout_Read()
  Try aLayout[aLayout.Max] = aLayout[aLayout.Max - 1]
  Layout_Write(aLayout)
  
End

Public Sub Container_Arrange()
  
  Layout_Write(Layout_Read())
  
End


Private Function Layout_Read() As Integer[]

  Dim aLayout As New Integer[]
  Dim hChild As Control
  
  For Each hChild In Me.Children
    If Not hChild.Visible Then Continue
    aLayout.Add(hChild.Width)
  Next
  
  Return aLayout

End

Private Sub Layout_Write(Value As Integer[])

  Dim I, W, WMax, WTotal As Integer
  Dim iTotal As Integer
  Dim hChild As Control
  Dim X As Integer
  
  If $bLayouting Or If Not Value Or If Value.Count = 0 Then Return
  
  $bLayouting = True
  
  Value.Resize(Me.Children.Count)
  
  For I = 0 To Value.Max
    Value[I] = Max(1, Value[I])
    iTotal += Value[I]
  Next

  WMax = Me.W - Value.Max
  For I = 0 To Value.Max - 1
    W = Value[I] * WMax / iTotal
    WTotal += W
    Me.Children[I].Width = W
  Next
  
  Me.Children[Value.Max].Width = WMax - WTotal
  
  For Each hChild In Me.Children
    hChild.Move(X, 0, hChild.W, Me.H)
    X += hChild.W + 1
  Next
  
  $bLayouting = False

End
