#Memcached

C
STORED
C
i
0
NOT_STORED
C
i
1
EXISTS
C
i
2
NOT_FOUND
C
i
3
DELETED
C
i
4
TOUCHED
C
i
5
Host
p
s

Port
p
i

Debug
p
b

Status
r
i

Error
r
s

SlabsAutomove
p
i

Version
r
s

_new
m


Open
m
b

Close
m
b

Disconnect
m


Store
m
i
(sCommand)s(sKey)s(vData)s[(iExpire)i(sFlags)i(iCas)i]
Exec
m
i
(sCommand)s[(vData)s]
Get
m
Collection
(aKey)String[];
Retrieve
m
Collection
(sKey)v[(sCas)i]
_get
m
_Memcached_Key
(sKey)s
Client_Ready
m


Client_Closed
m


Client_Found
m


Client_Error
m


Flush
m

[(iDelay)i]
