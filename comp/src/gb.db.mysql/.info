#Connection

C
MySQL
r
_MySQL

#DB

C
MySQL
R
_MySQL

#_DataBase

CA
Process_Error
m

(sError)s
Modify
m

[(Database)s(Charset)s(Collation)s]
Charset
m
s
[(Database)s]
Collation
m
s
[(Database)s]
Delete
m

[(Database)s(IfExists)b]
Add
m

(Database)s[(Charset)s(Collation)s]
Dump
m

[(Database)s(Tables)String[];(File)s(Options)String[];(Replace)b]
Tables
m
String[]
[(Database)s]
Info
m
s
[(Database)s]
Views
m
String[]
[(Database)s]
Triggers
m
String[]
[(Database)s]
Routines
m
String[]
[(Database)s]
#_DataTypes

CA
UnsignedTinyInt
C
s
TINYINT UNSIGNED
SignedTinyInt
C
s
TINYINT
Bool
C
s
BOOL
Boolean
C
s
BOOLEAN
SignedSmallInt
C
s
SMALLINT
UnsignedSmallInt
C
s
SMALLINT UNSIGNED
SignedMediumInt
C
s
MEDIUMINT
UnsignedMediumInt
C
s
MEDIUMINT UNSIGNED
SignedInt
C
s
INT
UnsignedInt
C
s
INT UNSIGNED
SignedInteger
C
s
INTEGER
UnsignedInteger
C
s
INTEGER UNSIGNED
SignedBigInt
C
s
BIGINT
UnsignedBigInt
C
s
BIGINT UNSIGNED
Serial
C
s
BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE
Date
C
s
DATE
DateTime
C
s
DATETIME
TimeStamp
C
s
TIMESTAMP
Time
C
s
TIME
TinyBlob
C
s
TINYBLOB
MediumBlob
C
s
MEDIUMBLOB
LongBlob
C
s
LONGBLOB
Null
C
s
NULL
Bit
m
s
[(Length)i]
SignedFloat
m
s
(Length)i[(Decimals)i]
UnsignedFloat
m
s
(Length)i[(Decimals)i]
SignedDouble
m
s
(Length)i[(Decimals)i]
UnsignedDouble
m
s
(Length)i[(Decimals)i]
SignedDoublePrecision
m
s
(Length)i[(Decimals)i]
UnsignedDoublePrecision
m
s
(Length)i[(Decimals)i]
SignedReal
m
s
(Length)i[(Decimals)i]
UnsignedReal
m
s
(Length)i[(Decimals)i]
SignedDecimal
m
s
(Length)i[(Decimals)i]
UnsignedDecimal
m
s
(Length)i[(Decimals)i]
SignedDec
m
s
(Length)i[(Decimals)i]
UnsignedDec
m
s
(Length)i[(Decimals)i]
Year
m
s
[(Length)i]
Char
m
s
[(Length)i(Charset)s(Collation)s]
VarChar
m
s
(Length)i[(Charset)s(Collation)s]
Binary
m
s
(Length)i
VarBinary
m
s
(Length)i
TinyText
m
s
[(Length)i(Charset)s(Collation)s]
Blob
m
s
[(Length)i]
Text
m
s
[(Length)i(Charset)s(Collation)s]
MediumText
m
s
[(Charset)s(Collation)s]
LongText
m
s
[(Charset)s(Collation)s]
Enum
m
s
(Values)String[];[(Charset)s(Collation)s]
Set
m
s
(Values)String[];[(Charset)s(Collation)s]
#_Field

CA
PrimaryKey
m

(Fields)String[];
Add
m

(Field)s(DataType)s[(AceptNull?)b(DefaultValue)v(AutoIncrement?)b(OnUpdate)s(Comment)s]
Index
m

(Index)s(Field)s
ForeignKey
m

(Field)s(RefTable)s(RefField)s[(OnDelete)s(OnUpdate)s]
Info
m
s
(Table)s(Field)s[(Database)s]
Definition
m
s
(Table)s(Field)s[(Database)s]
Rename
m

(Table)s(Field)s(NewField)s[(Database)s]
#_Index

CA
Add
m

(Index)s(Columns)String[];[(Table)s(Database)s]
Delete
m

(Table)s(Index)s[(Database)s]
PrimaryKey
m

(Table)s(Columns)String[];[(Database)s]
#_MySQL

CA
Engine
p
s

Charset
p
s

Collation
p
s

DataTypes
r
_DataTypes

Database
r
_Database

Index
r
_Index

Table
r
_Table

Field
r
_Field

View
r
_View

User
r
_User

Trigger
r
_Trigger

Routines
r
_Routines

Collations
r
String[]

Engines
r
String[]

Charsets
r
String[]

Databases
r
String[]

Users
r
String[]

Query
r
s

CBool
m
i
(Value)v
CurrentTimestamp
m
s
[(Format)s]
CurrentUser
m
s

Quote
m
s
(Value)v
Use
m

(Database)s
Id
m
s

LastInsertId
m
s

Password
m
s
(Password)s
#_Routines

CA
Add
m

(Routine)s(Statement)s[(Parameters)String[];(Returns)s(Database)s]
Delete
m

(Routine)s[(IfExists)b(Database)s]
Info
m
s
(Routine)s[(Database)s]
Definition
m
s
(Routine)s[(Database)s]
#_Table

CA
Modify
m

(Table)s(Action)s[(Symbol)s(Definition)s]
Add
m

(Table)s[(Engine)s(Charset)s]
Engine
m
s
(Table)s[(Database)s]
Charset
m
s
(Table)s[(Database)s]
Delete
m

(Tables)String[];[(IfExists)b]
LoadData
m

(Table)s(File)s
Info
m
s
(Table)s
Insert
m

(Table)s(Fields)String[];(Values)String[];
Fields
m
String[]
(Table)s[(Database)s]
Rename
m

(Table)s(NewTable)s
Collation
m
s
(Table)s[(Database)s]
Truncate
m

(Table)s[(Database)s]
#_Trigger

CA
Add
m

(Trigger)s(Table)s(Time)s(Event)s(Statement)s[(Database)s]
Delete
m

(Trigger)s(IfExists)b[(Database)s]
Info
m
s
(Trigger)s[(Database)s]
#_User

CA
Delete
m

(User)s(Host)s[(IfExists)b]
Add
m

(User)s(Password)s(Host)s
Grant
m

(Privileges)String[];(User)s(Password)s(Host)s[(Database)s]
Info
m
s
(User)s
Revoke
m

(Privileges)String[];(User)s(Host)s[(Database)s]
Rename
m

(User)s(Host)s(NewUser)s(NewHost)s
SetPassword
m

(User)s(Password)s(Host)s
#_View

CA
Modify
m

(View)s(Statement)s
Add
m

(View)s(Statement)s[(Replace)b]
Delete
m

(Views)String[];[(IfExists)b]
Info
m
s
(View)s[(Database)s]
Definition
m
s
(View)s[(Database)s]
