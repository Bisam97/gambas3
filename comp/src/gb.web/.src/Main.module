' Gambas module file

Public AllowLog As Boolean

Public Sub Log(sMsg As String)
  
  Dim hFile As File
  
  If Not AllowLog Then Return
  
  hFile = Open "/tmp/session.log" For Append 
  Print #hFile, sMsg
  Close #hFile
  
End

Public Sub DecodeURL(sUrl As String, aField As String[], cVal As Collection)
  
  Dim sElt As String
  Dim aElt As String[]
  Dim sKey As String
  Dim sVal As String

  sUrl = Trim(sUrl)
  
  For Each sElt In Split(sUrl, Request.Delimiter)
  
    If Not sElt Then Continue
  
    aElt = Split(sElt, "=")
    If aElt.Count = 2 Then
      sKey = CGI.Decode(aElt[0])
      If Not sKey Then Continue
      sVal = CGI.Decode(aElt[1])
    Else 
      sKey = CGI.Decode(aElt[0])
      If Not sKey Then Continue
      sVal = ""
    Endif
    
    If Not aField.Exist(sKey) Then
      aField.Add(sKey)
      cVal[sKey] = sVal
    Else If sVal Then 
      'IF TypeOf(cVal[sKey]) = gb.String THEN 
      '  cVal[sKey] = [CStr(cVal[sKey]), sVal]
      'ELSE  
      '  cVal[sKey].Add(sVal)
      'ENDIF
      cVal[sKey] &= "\n" & sVal
    Endif
  
  Next  
  
' Catch
'   
'   Error.Raise("Malformed URL:" & Error.Where & ": " & Error.Text)
'  
End

Public Sub GetAbsoluteURL(sPath As String) As String

  Dim sReq As String
  Dim sPort As String
    
  sReq = Application.Protocol & "://" & Application.Host
  
  sPort = Application.Port
  If sPort And If sPort <> "80" Then sReq &= ":" & sPort
  
  Return sReq &/ sPath
  
End


Public Sub Main()

  Dim aField As New String[]
  Dim cVal As New Collection
  
  Main.DecodeURL("id=REP%2E000035%2E007&texte+question=Pr%C3%A9sence+d%27affaissement%2C+de+glissement+ou+de+ravinement+des+terrains+avoisinants+%3F&texte+reponse=NON&note=1&commentaire=&classe=reponse", aField, cVal)
  
  Print aField.Count

End
