' Gambas module file

Export

Property Buffered As Boolean
Property ContentType As String
Property Status As String
Property LastModified As Date
Property Cache As _ResponseCache

Private $bBuffered As Boolean
Private $sHeader As String
Private $sRedirect As String
Private $hFile As File
Private $sContentType As String = "text/html"
Private $sStatus As String
Private $iBegin As Integer
Private $dLastModified As Date

Public Sub AddHeader(Name As String, Value As String)

  If Not Value Then Return  
  $sHeader &= Name & ": " & Value & "\r\n"
  
End

Public Sub Redirect(URL As String)
  
  If $iBegin Then Return
  
  If URL Like "*://*" Then 
    AddHeader("Location", URL)
  Else 
    AddHeader("Location", Application.Protocol & "://" & CGI["HTTP_HOST"] &/ URL)
  Endif
  
  Response.Begin
  Response.End
  
End

Public Sub SetCookie(Cookie As String, Value As String, Optional Domain As String, Optional Path As String, Optional Expires As Date)
  
  Dim sVal As String
  
  sVal = Cookie & "=" & Value
  If Domain Then sVal &= ";domain=" & Domain
  If Expires Then sVal &= ";expires=" & CGI.FormatDate(Expires)
  If Path Then sVal &= ";path=" & Path
  
  AddHeader("Set-Cookie", sVal)
  
End

Public Sub RemoveCookie(Cookie As String, Value As String, Optional Domain As String, Optional Path As String)
  
  Dim sVal As String
  
  sVal = Cookie & "=" & Value
  If Domain Then sVal &= ";domain=" & Domain
  sVal &= ";expires=" & CGI.FormatDate(Now - 1)
  If Path Then sVal &= ";path=" & Path
  
  AddHeader("Set-Cookie", sVal)
  
End

Public Sub Begin()

  Inc $iBegin
  If $iBegin <> 1 Then Return 
  
  If $sStatus Then AddHeader("Status", $sStatus)
  AddHeader("Content-type", $sContentType)
  'AddHeader("Cache-control", "private")
  
  If $bBuffered Then
  
    $hFile = Open Temp$("response") For Create
    Output To #$hFile
    
  Else
  
    Print $sHeader
    
  Endif
  
End

Public Sub End()
  
  Dim sBuffer As String

  Dec $iBegin
  If $iBegin <> 0 Then Return

  If $bBuffered Then
  
    Close #$hFile
    Output To Default 
    
    $hFile = Open Temp$("response") For Read 
    AddHeader("Content-Length", Lof($hFile))
    
    Print $sHeader
  
    While Not Eof($hFile)
      sBuffer = Read #$hFile, -4096
      Print sBuffer;
    Wend
    Close #$hFile
    
  Endif
  
End

Public Sub SendFile(Path As String, Optional ContentType As String)
  
  Dim sBuffer As String

  If Not Exist(Path) Then
    Print "Status: 404 Not Found"
    Print
    Return
  Endif

  If Not ContentType Then ContentType = $sContentType
  Print "Content-type: "; ContentType
  Print $sHeader;
  'IF Name THEN PRINT "Content-location: "; "/" & CGI.Encode(Name)
  
  $hFile = Open Path For Read 

  Print "Content-length: "; Lof($hFile)
  Print
  While Not Eof($hFile)
    sBuffer = Read #$hFile, -4096
    Print sBuffer;
  Wend
  Close #$hFile
  
End


Private Function Buffered_Read() As Boolean

  Return $bBuffered  

End

Private Sub Buffered_Write(Value As Boolean)

  $bBuffered = Value

End

Private Function ContentType_Read() As String

  Return $sContentType  

End

Private Sub ContentType_Write(Value As String)

  $sContentType = Value  

End

Private Function Status_Read() As String

  Return $sStatus

End

Private Sub Status_Write(Value As String)

  $sStatus = Value

End

Private Function LastModified_Read() As Date

  

End

Private Sub LastModified_Write(Value As Date)

  

End

Private Function CacheControl_Read() As String

  

End

Private Sub CacheControl_Write(Value As String)

  

End
