' Gambas class file

Inherits DBusObject

Event com_canonical_dbusmenu_LayoutUpdated(Revision As Integer, ParentId As Integer)
'event ItemsPropertiesUpdated(Variant[]

Property Read com_canonical_dbusmenu_Version As Integer
Property Read com_canonical_dbusmenu_Status As String

Static Private ALL_PROPS As String[] = ["type", "label", "enabled", "visible", "toggle-type", "toggle-state", "icon-data", "shortcut", "children-display"]

Private $aProp As New Collection[]
Private $iRevision As Integer

Private Function com_canonical_dbusmenu_Version_Read() As Integer

  Return 2

End


Private Function com_canonical_dbusmenu_Status_Read() As String

  Return "normal"

End

Public Sub com_canonical_dbusmenu_GetProperty(Id As Integer, PropertyName As String) As Variant
  
  Try Return $aProp[Id][PropertyName]
  
End

Private Sub GetProperties(iId As Integer, aProp As String[]) As Collection
  
  Dim cResult As Collection
  Dim sProp As Variant
  
  If Not aProp Or If aProp.Count = 0 Then aProp = ALL_PROPS
  
  cResult = New Collection
  For Each sProp In aProp
    Try cResult[sProp] = $aProp[iId][sProp]
  Next
  
  Return cResult
  
End


Public Sub com_canonical_dbusmenu_GetGroupProperties(IdList As Integer[], PropertyNames As String[]) As _DBusMenuProperties
  
  Dim aResult As New Variant[]
  Dim iId As Integer
  Dim hResult As _DBusMenuProperties
  
  For Each iId In IdList
    aResult.Add([iId, GetProperties(iId, PropertyNames)])
  Next
  
  hResult = New _DBusMenuProperties
  hResult.Value = aResult
  Return hResult
  
End

Private Sub GetLayout(iId As Integer, iRec As Integer, aProp As String[]) As _DBusMenuItem

  Dim cProp As Collection
  Dim iChild As Integer
  Dim aChildrenId As Integer[]
  Dim aChildren As Variant[]
  Dim hItem As _DBusMenuItem
  
  cProp = GetProperties(iId, aProp)
  aChildrenId = $aProp[iId]["children"]
  
  aChildren = New Variant[]
  
  If iRec <> 0 And If aChildrenId Then 
  
    Dec iRec
    For Each iChild In aChildrenId
      aChildren.Add(GetLayout(iChild, iRec, aProp))
    Next
    
  Endif
  
  hItem = New _DBusMenuItem
  hItem.Value = [iId, cProp, aChildren]
  Return hItem

End

Public Sub com_canonical_dbusmenu_GetLayout(ParentId As Integer, RecursionDepth As Integer, PropertyNames As String[]) As _DBusMenuLayout

  Dim hLayout As _DBusMenuLayout
  Dim hItem As _DBusMenuItem
  
  hItem = GetLayout(ParentId, RecursionDepth, PropertyNames)
  
  hLayout = New _DBusMenuLayout
  hLayout.Value = [$iRevision, hItem]
  Return hLayout
  
End



Private Sub GetParent() As TrayIcon

  Return Object.Parent(Me)

End

Private Sub UpdateMenuRec(hMenu As Menu) As Integer

  Dim hChild As Menu
  Dim cProp As New Collection
  Dim sText As String
  Dim iPos As Integer
  Dim sTemp As String
  Dim iId As Integer
  Dim aChild As Integer[]
  Dim aShortcut As String[]
  Dim sShortcut As String
  
  iId = $aProp.Count
  cProp["id"] = iId
  cProp["menu"] = hMenu

  sText = hMenu.Text
  If Not sText Then cProp["type"] = "separator"
  'cProp["type"] = If(sText, "standard", "separator")
  
  sText = Replace(sText, "_", "__")
  iPos = InStr(sText, "&")
  If iPos Then
    If Mid$(sText, iPos + 1, 1) <> "&" Then
      Mid$(sText, iPos, 1) = "_"
    Endif
  Endif
  sText = Replace(sText, "&&", "&")
  cProp["label"] = sText
  
  If Not hMenu.Enabled Then cProp["enabled"] = False
  If Not hMenu.Visible Then cProp["visible"] = False
  
  If hMenu.Children.Count Then cProp["children-display"] = "submenu"
  
  If hMenu.Picture Then
    sTemp = File.SetExt(Temp$("icon"), "png")
    hMenu.Picture.Save(sTemp)
    cProp["icon-data"] = Byte[].FromString(File.Load(sTemp))
    Kill sTemp
  Endif
  
  If hMenu.Radio Then
    cProp["toggle-type"] = "radio"
    cProp["toggle-state"] = If(hMenu.Value, 1, 0)
  Else If hMenu.Toggle Or If hMenu.Checked Then
    cProp["toggle-type"] = "checkmark"
    cProp["toggle-state"] = If(hMenu.Value, 1, 0)
  Endif
  
  ' shortcut
  
  sShortcut = hMenu.Shortcut
  If sShortcut Then
    
    sShortcut = Replace(sShortcut, "Ctrl+", "Control+")
    aShortcut = Split(sShortcut, "+")
    cProp["shortcut"] = [aShortcut]
  Endif
  
  $aProp.Add(cProp)
  
  aChild = New Integer[]
  
  For Each hChild In hMenu.Children
    
    aChild.Add(UpdateMenuRec(hChild))
    
  Next
  
  If aChild.Count Then cProp["children"] = aChild
  
  Return iId
  
End

Public Sub _UpdateMenu(hMenu As Menu)

  Inc $iRevision
  $aProp.Clear
  UpdateMenuRec(hMenu)
  DBus.Raise(Me, "com.canonical.dbusmenu.LayoutUpdated", [$iRevision, 0])
  
End


Public Sub com_canonical_dbusmenu_Event(Id As Integer, EventId As String, (Data) As Variant, (TimeStamp) As Integer)
  
  If EventId = "clicked" Then
    GetParent()._Clicked($aProp[Id]["menu"])
  Endif
  'Debug Id;; EventId;; Data;; TimeStamp
  
End

Public Sub com_canonical_dbusmenu_AboutToShow(ParentId As Integer) As Boolean
  
  Return GetParent()._AboutToShow($aProp[ParentId]["menu"])
  
End
