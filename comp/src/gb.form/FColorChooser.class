' Gambas class file

Private $iColor As Integer
Private $iOldColor As Integer

'PRIVATE $sSystem AS String

Private $iHue As Integer
Private $iSat As Integer
Private $iVal As Integer

Private $bLock As Boolean

Private $hImage As Image
Private $hMap As Picture
Private $hCross As Picture
Private $bHide As Boolean
Private $X As Integer
Private $Y As Integer

Private $iSize As Integer
Private $I As Integer
Private $J As Integer

Private Const NCOLH As Integer = 11
Static Private $aHue As Integer[] = [0, 330, 300, 285, 270, 240, 210, 195, 180, 165, 150, 120, 90, 75, 60, 45, 30]

Event Change()
Event Confirm()

Public Sub _new()

  $hImage = Image.Load("img/colormap.png")
  $hCross = Picture["img/cross.png"]

End

Private Sub MoveCross()

  $bHide = True
  dwgColorMap.Refresh($X - 7, $Y - 7, 16, 16)
  $bHide = False
  $X = (359 - $iHue) * dwgColorMap.ClientW / 360
  $Y = (255 - $iSat) * dwgColorMap.ClientH / 256
  dwgColorMap.Refresh($X - 7, $Y - 7, 16, 16)

End


Private Sub RefreshColor(Optional bRGB As Boolean = True, Optional bHSV As Boolean = True)

  Dim X As Integer
  Dim Y As Integer

  $bLock = True

  If bHSV Then
    $iHue = Color[$iColor].Hue
    $iSat = Color[$iColor].Saturation
    $iVal = Color[$iColor].Value
    txtH.Value = $iHue
    txtS.Value = $iSat
    txtV.Value = $iVal
  Else
    $iHue = txtH.Value
    $iSat = txtS.Value
    $iVal = txtV.Value
  Endif

  If bRGB Then
    txtR.Value = Color[$iColor].Red
    txtG.Value = Color[$iColor].Green
    txtB.Value = Color[$iColor].Blue
    txtA.Value = Color[$iColor].Alpha
  Endif

  MoveCross

  sldValue.Value = 255 - $iVal
  If panAlpha.Visible Then
    sldAlpha.Value = txtA.Value
    txtHexa.Text = Hex$($iColor, 8)
  Else 
    txtHexa.Text = Hex$($iColor, 6)
  Endif

  'panColor.Background = $iColor
  panColor.Refresh

  $bLock = False

  If $iColor <> $iOldColor Then
    $iOldColor = $iColor
    Raise Change
  Endif

End



Public Sub SetColor(iColor As Integer)

  'IF IsNull(Val(sColor)) THEN
  '  $sSystem = sColor
  '  lstSystem.Index = lstSystem.Find($sSystem)
  '  tabColor.Index = 1
  'ELSE
    $iColor = iColor
  '  tabColor.Index = 0
  'ENDIF
  RefreshColor

End


Public Function GetColor() As Integer

  Try sldValue.SetFocus
  'IF tabColor.Index = 0 THEN
    Return $iColor
  'ELSE
  '  RETURN $sSystem
  'ENDIF

End




Public Sub Form_Resize()

  Dim H As Integer

  $iSize = Max(8, Min(Min((dwgColor.W - 1) / $aHue.Count, (boxColor.H - 1) / 2 / NCOLH), 32))
  H = $iSize * NCOLH + 7
  dwgColor.H = H

  'PRINT "Form_Resize"
  $hMap = $hImage.Stretch(dwgColorMap.Width, dwgColorMap.Height, True).Picture
  MoveCross

End


Public Sub txtRGB_Change()

  If $bLock Then Return
  $iColor = Color.RGB(txtR.Value, txtG.Value, txtB.Value, txtA.Value)
  RefreshColor(False, True)

End

Public Sub txtHSV_Change()

  If $bLock Then Return
  $iColor = Color.HSV(txtH.Value, txtS.Value, txtV.Value, txtA.Value)
  RefreshColor(True, False)

End

Public Sub dwgColorMap_Draw()

  If Not $hMap Then Return

  Draw.Picture($hMap, 0, 0)
  If $bHide Then Return
  Draw.Picture($hCross, $X - 7, $Y - 7)

End

Public Sub dwgColorMap_MouseMove()

  $bLock = True
  txtH.Value = 359 - (Mouse.ScreenX - Last.ScreenX) * 360 / dwgColorMap.ClientW
  txtS.Value = 255 - (Mouse.ScreenY - Last.ScreenY) * 256 / dwgColorMap.ClientH
  $bLock = False
  txtHSV_Change

End

Public Sub sldValue_Change()

  txtV.Value = 255 - sldValue.Value

End

Public Sub dwgColorMap_DblClick()

  Raise Confirm

End

Public Sub dwgColorMap_MouseDown()

  dwgColorMap_MouseMove

End

Public Sub Form_Open()

  'PRINT "Form_Open"
  RefreshColor
  txtHexa.SetFocus

End


' PUBLIC SUB lstSystem_DblClick()
' 
'   RAISE Confirm
' 
' END
' 
' PUBLIC SUB lstSystem_Click()
' 
'   $sSystem = lstSystem.Text
' 
' END
' 
' PUBLIC SUB tabColor_Click()
' 
'   IF tabColor.Index = 0 THEN Form_Resize
' 
' END

Public Sub panColor_DblClick()

  Raise Confirm

End

Private Function CalcColor(I As Integer, J As Integer) As Integer

  Dim iCol As Integer
  Dim iAlpha As Integer
  
  iAlpha = txtA.Value

  Select Case J
    Case 0
      iCol = Color.HSV(0, 0, Min(255, 256 - Int(256 * I / $aHue.Max)), iAlpha)
    Case 1 To 4
      iCol = Color.HSV($aHue[I], 255, Min(255, 64 * J), iAlpha)
    Case Else
      iCol = Color.HSV($aHue[I], 192 - (J - 5) * 32, 255, iAlpha)
  End Select

  Return iCol

End

Public Sub dwgColor_Draw()

  Dim W As Integer
  Dim H As Integer
  Dim I As Integer
  Dim J As Integer
  Dim Y As Integer

  W = $iSize
  H = $iSize

  Draw.FillStyle = Fill.Solid
  Draw.LineStyle = Line.Solid
  Draw.Foreground = Color.DarkGray

  For J = 0 To NCOLH - 1
    For I = 0 To $aHue.Max
      Draw.FillColor = CalcColor(I, J)
      Draw.Rect(I * W, Y, W + 1, H + 1)
    Next
    Y += H
    If J = 0 Or J = 3 Or J = 4 Then
      Y += 2
    Endif
  Next

End

Public Sub dwgColor_MouseDown()

  Dim Y As Integer
  Dim J As Integer

  $I = Mouse.X / $iSize

  Y = Max(0, Mouse.Y - 1)
  For Each J In [1, 4, 5]
    If Y >= (J * $iSize) Then
      Y -= 2
    Endif
  Next
  $J = Y / $iSize

  If $I < 0 Or If $I > $aHue.Max Or If $J < 0 Or If $J >= NCOLH Then Return

  $iColor = CalcColor($I, $J)
  RefreshColor

End

Public Sub dwgColor_MouseMove()

  dwgColor_MouseDown

End


Public Sub dwgColor_DblClick()

  If $I < 0 Or If $I > $aHue.Max Or If $J < 0 Or If $J >= NCOLH Then Return

  Raise Confirm

End

Public Sub panColor_Draw()

  Dim X, Y As Integer
  Dim C As Integer

  Draw.FillStyle = Fill.Solid
  Draw.LineStyle = Line.None
  
  If $iColor And &HFF000000 Then 
  
    For Y = 0 To panColor.H Step 8
      For X = 0 To panColor.W Step 8
      
        If ((X + Y) \ 8) And 1 Then 
          C = Color.Blend($iColor, &H808080)
        Else 
          C = Color.Blend($iColor, &HC0C0C0)
        Endif
      
        Draw.FillColor = C
        Draw.Rect(X, Y, 8, 8)
        
      Next 
    Next
  
  Else 
    Draw.FillColor = $iColor
    Draw.Rect(0, 0, panColor.W, panColor.H)
  Endif
  
End

Public Sub GetAlpha() As Boolean
  
  Return panAlpha.Visible
  
End

Public Sub SetAlpha(Value As Boolean)
  
  panAlpha.Visible = Value
  If Not Value Then txtA.Value = 0
  
End

Public Sub txtHexa_Change()

  Dim iColor As Integer

  If $bLock Then Return
  If panAlpha.Visible Then 
    If txtHexa.Length <> 8 Then Return 
  Else 
    If txtHexa.Length <> 6 Then Return 
  Endif
  iColor = Val("&H" & txtHexa.Text & "&")
  If iColor = $iColor Then Return
  $iColor = iColor
  RefreshColor(True, True)

End

Public Sub sldAlpha_Change()

  txtA.Value = sldAlpha.Value

End

Public Sub panInfoColor_Arrange()

  panColor.H = Min(panInfoColor.W, panInfoColor.H - txtHexa.Y - txtHexa.H - Desktop.Scale)

End
