' Gambas class file

Export

Static Property Read List As String[]

Static Private $bInit As Boolean
Static Private $aIconPath As String[]
Static Private $cIconMap As Collection
Static Private $aList As String[]
Static Private $aSizeDec As Integer[] = [192, 128, 96, 72, 64, 48, 36, 32, 24, 22, 20, 16, 12]
Static Private $aSizeInc As Integer[] = [12, 16, 20, 22, 24, 32, 36, 48, 64, 72, 96, 128, 192]

Static Private Sub SearchDesktop()

  Dim sOutput As String

  If Application.Theme Then Return
  
  If Application.Env["KDE_FULL_SESSION"] Then 
    Application.Theme = "kde"
  Else If Application.Env["GNOME_DESKTOP_SESSION_ID"] Then 
    Application.Theme = "gnome"
  Else 
    Shell "xprop -root XFCE_DESKTOP_WINDOW" To sOutput
    If sOutput Then Application.Theme = "xfce"
  Endif
  
Catch
  
End


Static Private Sub LoadMap(sMap As String)
  
  Dim hFile As File
  Dim sLig As String
  Dim aMap As String[]
  Dim cMap As New Collection

  If $cIconMap.Exist(sMap) Then Return

  hFile = Open "map" &/ sMap & ".map"
  While Not Eof(hFile)
    Line Input #hFile, sLig
    sLig = Trim(sLig)
    If Left(sLig) = "'" Or Left(sLig) = "#" Then Continue
    aMap = Scan(sLig, "* *")
    If aMap.Count >= 2 Then
      cMap[aMap[0]] = aMap[1]
    Endif
  Wend
  Close #hFile
  
  $cIconMap[sMap] = cMap
    
End


Static Private Sub AddPath(sMap As String, sPath As String)
  
  If Not Exist(sPath) Then Return 
  
  If sMap Then sPath = sMap & ":" & sPath
  If Not $aIconPath.Exist(sPath) Then $aIconPath.Add(sPath)
  
End


Static Private Sub InitTheme()
  
  Dim hFile As File
  Dim sLig As String
  Dim aMap As String[]
  Dim sStyle As String
  Dim sIconPath As String
  Dim sPath As String
  Dim cMap As Collection
  Dim sTheme As String

  $aIconPath = New String[]
  $cIconMap = New Collection
  
  SearchDesktop

  Select Case Application.Theme
    
    Case "gnome"
    
      Try Exec ["gconftool", "-g", "/desktop/gnome/interface/icon_theme"] To sTheme
  
      If sTheme Then 
        sTheme = Trim(sTheme)
        AddPath("gnome", "/usr/share/icons" &/ sTheme)
        AddPath("gnome", "/usr/X11R6/share/icons" &/ sTheme)
      Endif
  
      AddPath("gnome", "/usr/share/icons/hicolor")
      AddPath("gnome", "/usr/X11R6/share/icons/hicolor")
      AddPath("gnome", "/usr/share/icons/gnome")
      'AddPath("gnome", "/opt/gnome")
      AddPath("gnome", "stock/gtk")
      'AddPath("", "stock/qt")     
    
    Case "kde"
  
      Try Exec ["kde-config", "--path", "icon"] To sIconPath
      If sIconPath Then 
    
        sIconPath = Trim(sIconPath)
    
        'sStyle = "kdeclassic"
        Try hFile = Open "~/.kde/share/config/kdeglobals"
        If Not Error Then
          While Not Eof(hFile)
            Line Input #hFile, sLig
            If sLig = "[Icons]" Then 
              While Not Eof(hFile)
                Line Input #hFile, sLig
                If Left(sLig) = "[" Then Break
                If sLig Like "Theme=*" Then 
                  sStyle = Mid$(sLig, 7)
                  Break
                Endif 
              Wend
              Break
            Endif 
          Wend
          Close #hFile
        
          If sStyle Then
            For Each sPath In Split(sIconPath, ":")
              AddPath("kde", sPath &/ sStyle)
              AddPath("gnome", sPath &/ sStyle)
            Next
          Endif 
          
        Endif
        
        For Each sPath In Split(sIconPath, ":")
          AddPath("kde", sPath &/ "crystalsvg") ' default theme hardcoded in KDE sources
        Next
        
        ' FOR EACH sPath IN Split(sIconPath, ":")
        '   AddPath("kde", sPath &/ "kdeclassic") ' default theme hardcoded in KDE sources
        ' NEXT
        
        'AddPath("", "stock/qt")
       
      Endif
    
    Case "xfce"
    
      Try hFile = Open "~/.config/xfce4/mcs_settings/gtk.xml"
      If Not Error Then 
        While Not Eof(hFile)
          Line Input #hFile, sLig
          If sLig Like "*<option*name=\"Net/IconThemeName\"*" Then 
            Try sTheme = Trim(Scan(sLig, "*<option*value=\"*\"*")[2])
            Break
          Endif          
        Wend
        Close #hFile
      Endif
    
      If sTheme Then 
        AddPath("gnome", "/usr/share/icons" &/ sTheme)
        AddPath("gnome", "/usr/X11R6/share/icons" &/ sTheme)
      Endif 
      
      AddPath("gnome", "/usr/share/icons/gnome")
      AddPath("gnome", "stock/gtk")
      
  End Select 
  
  AddPath("", "stock/qt")
  AddPath("", "stock/default")
  
  'DEBUG $aIconPath.Join("\n")
  
  $bInit = True
   
End

Static Public Function _get(Key As String) As Picture

  Dim sPrefix As String
  Dim sPath As String
  Dim hPict As Picture
  Dim iPos As Integer
  Dim iSize As Integer
  Dim sSize As String
  Dim iTry As Integer
  Dim hImage As Image
  Dim sTemplate As String
  Dim sFile As String
  Dim sMap As String
  'IF Right(Key, 4) <> ".png" THEN Key &= ".png"

  If Not $bInit Then InitTheme

  iSize = 16
  iPos = InStr(Key, "/")
  If iPos Then 
    sSize = Left$(Key, iPos - 1)
    Key = Mid$(Key, iPos + 1)

    Select Case sSize
      Case "small"
        iSize = CInt(Desktop.Scale * 5 / 8 + 0.5) * 4
      Case "medium"
        iSize = CInt(Desktop.Scale * 5 / 8 * 1.5 + 0.5) * 4 
      Case "large"
        iSize = CInt(Desktop.Scale * 5 / 8 + 0.5) * 8
      Case "huge"
        iSize = CInt(Desktop.Scale * 5 / 8 * 1.5 + 0.5) * 8
      Case Else 
        Try iSize = CInt(sSize)
    End Select
  Endif

  For Each sPath In $aIconPath
  
    iPos = InStr(sPath, ":")
    If iPos Then 
      sMap = Left$(sPath, iPos - 1)
      LoadMap(sMap)  
      sFile = $cIconMap[sMap][Key]
      If Not sFile Then sFile = Key & ".png"
      sPath = Mid$(sPath, iPos + 1)
    Else 
      sFile = Key & ".png"
    Endif
  
    'If File.Dir(sFile) = "filesystems" Then sFile &= ";places" &/ File.Name(sFile)
  
    For Each sFile In Split(sFile, ";")
  
      If Left(sPath) = "/" Then   
        sTemplate = sPath &/ "&1x&1" &/ sFile
      Else 
        sTemplate = sPath &/ "&1" &/ sFile
      Endif 
      
      Try hPict = Picture[Subst(sTemplate, iSize)]
      If hPict Then Return hPict
      
      hImage = Null
      
      For Each iTry In $aSizeInc
        If iTry <= iSize Then Continue
        Try hImage = Image.Load(Subst(sTemplate, iTry))
        If Not Error Then Break
      Next
      
      If Not hImage Then 
      
        For Each iTry In $aSizeDec
          If iTry >= iSize Then Continue
          Try hImage = Image.Load(Subst(sTemplate, iTry))
          If Not Error Then Break
        Next
      
      Endif
      
      If hImage Then  
        hPict = hImage.Stretch(iSize, iSize, True).Picture
        Picture[Subst(sTemplate, iSize)] = hPict
        Return hPict
      Endif
      
    Next

  Next
  
  'Debug "Cannot find: "; Key

End


Static Private Function List_Read() As String[]

  If Not $aList Then 
    $aList = Split(File.Load("map/map"), "\n", "", True)
  Endif 
  
  Return $aList  

End
