' Gambas class file

Export

Inherits UserControl

Public Const _Properties As String = "*,Action,Text,Picture,ReadOnly,Border=True"
Public Const _DefaultEvent As String = "Click"
Public Const _DefaultSize As String = "24,4"
Public Const _Similar As String = "TextBox"

Event Click
Event Change
Event Activate

Property Picture As Picture
Property Text As String
Property Read Length As Integer
Property ReadOnly As Boolean
Property Border As Boolean

'Private $hPanel As Panel
Private $hBackground As DrawingArea
Private $bBorder As Boolean
Private $hTextBox As TextBox
Private $hButton As ToolButton
Private $hObserver As Observer

Public Sub _new()
  
  Dim sEventName As String = Object.LastEventName
  
  $hObserver = New Observer(Me) As "Observer"
  
  '$hPanel = New Panel(Me) As "Panel"
  '$hPanel.Border = Border.Sunken
  '$hPanel.Arrangement = Arrange.Fill
  
  '$hBackground.Background = Color.Yellow
  '$hBackground.Enabled = False
  
  $hBackground = New DrawingArea(Me) As "Background"
  '$hBackground.ReadOnly = True
  '$hBackground.Ignore = True
  '$hBackground.Hide
  $bBorder = True

  $hTextBox = New TextBox($hBackground) 
  $hTextBox.Expand = True
  $hTextBox.Border = False
  Object.Attach($hTextBox, Object.Parent(Me), sEventName)
  
  $hButton = New ToolButton($hBackground) As "Button"
  $hButton.W = Desktop.Scale * 4
  $hButton.Picture = Picture["./img/select.png"]
  '$hButton.Border = True
  '$hButton.Background = Color.TextBackground
  
  $hTextBox.SetFocus
  
End

Public Sub _attach(Parent As Object, Name As String)
  
  If Not Name Then Return
  If $hTextBox Then Object.Attach($hTextBox, Parent, Name)
  
End


Private Function Picture_Read() As Picture

  Return $hButton.Picture

End

Private Sub Picture_Write(Value As Picture)

  If Not Value Then Value = Picture["img/select.png"]
  $hButton.Picture = Value

End

Private Function Text_Read() As String

  Return $hTextBox.Text

End

Private Sub Text_Write(Value As String)

  $hTextBox.Text = Value

End

Public Sub Button_Click()
  
  $hTextBox.SetFocus
  Raise Click
  
End

Private Function ReadOnly_Read() As Boolean

  Return $hTextBox.ReadOnly

End

Private Sub ReadOnly_Write(Value As Boolean)

  $hTextBox.ReadOnly = Value

End

Public Sub Background_GotFocus()
  
  $hTextBox.SetFocus
  
End

Public Sub Observer_GotFocus()
  
  $hTextBox.SetFocus
  
End

Public Sub Clear()
  
  $hTextBox.Clear
  
End

Private Function Length_Read() As Integer

  Return $hTextBox.Length

End

Private Function Border_Read() As Boolean

  Return $bBorder

End

Private Sub Border_Write(Value As Boolean)

  $bBorder = Value
  '$hPanel.Padding = If(Value, 3, 0)
  Me.Refresh

End

Public Sub Background_Arrange()
  
  '$hBackground.Move(0, 0, $hPanel.W, $hPanel.H)
  Dim iPad As Integer = If($bBorder, 3, 0)
  $hTextBox.Move(iPad, iPad, $hBackground.W - $hButton.W - iPad * 2, $hBackground.H - iPad * 2)
  $hButton.Move($hBackground.W - $hButton.W - iPad, iPad, $hButton.W, $hBackground.H - iPad * 2)
  
End


Public Sub Background_Draw()
  
  If $bBorder Then Draw.Style.Box(0, 0, $hBackground.W, $hBackground.H)
  
End
