' Gambas class file

Export

Inherits UserControl

'Public Const _Properties As String = "*,AutoResize,Text,Picture,Border,Radio,Toggle,Value"
Public Const _Properties As String = "*,Action,AutoResize,Text,Picture,Arrow=True,Border=True,Menu"
Public Const _DefaultSize As String = "6,4"
Public Const _Similar As String = "Button"

Event Click
' Event MouseDown
' Event MouseUp
' Event MouseWheel
' Event MouseDrag

Property Picture As Picture
Property Text As String
Property Menu As String
'Property Action As String
Property Value As Boolean
Property Arrow As Boolean
Property AutoResize As Boolean
Property Border As Boolean

Private $hPanel As HBox
Private $hButton As Button
Private $hArrow As ToolButton
Private $hWatcher As Watcher
Private $sMenu As String

Private $bInside As Boolean
Private $bPressed As Boolean
Private $bArrow As Boolean
Private $bAutoResize As Boolean

Private $hObserver As Observer

Public Sub _new()
  
  Dim sEventName As String = Object.LastEventName
  
  $hPanel = New HBox(Me) As "Panel"
  'Me._Arrangement = Arrange.Horizontal
  $hButton = New Button($hPanel) As "Button"
  $hButton.Expand = True
  $hButton.Border = True
  $hArrow = New ToolButton($hPanel) As "Arrow"
  $hArrow.W = Desktop.Scale * 2
  '$hArrow.Ignore = True
  $hArrow.Picture = Main.GetArrow(Align.Bottom, 8).Picture
  $hArrow.Border = True
  $bArrow = True
  '$hArrow.Raise
  '$hWatcher = New Watcher(Me) As "Watcher"
  
  $hObserver = New Observer($hButton)
  Object.Attach($hObserver, Me.Parent, sEventName)
  
End

' Public Sub Watcher_Resize()
'   
'   $hArrow.Move(Me.W - $hArrow.W, 0, $hArrow.W, Me.H)
'   
' End


Private Function Picture_Read() As Picture

  Return $hButton.Picture

End

Private Sub Picture_Write(Value As Picture)

  $hButton.Picture = Value
  UpdateSize

End

Private Function Text_Read() As String

  Return $hButton.Text

End

Private Sub Text_Write(Value As String)

  $hButton.Text = Value
  UpdateSize

End

Private Function Menu_Read() As String

  Return $sMenu

End

Private Sub Menu_Write(Value As String)

  $sMenu = Value

End

Public Sub Button_Click()
  
  If $bArrow Then
    Action.Raise(Me)
    Raise Click
  Else
    Arrow_Click
  Endif
  
End

' Public Sub Button_MouseDown()
'   
'   Raise MouseDown
'   
' End
' 
' Public Sub Button_MouseUp()
'   
'   Raise MouseUp
'   
' End
' 
' Public Sub Button_MouseWheel()
'   
'   Raise MouseWheel
'   
' End
' 
' Public Sub Button_MouseDrag()
'   
'   Raise MouseDrag
'   
' End


Private Sub FindMenu(hWindow As Window) As Menu
  
  Dim hMenu As Menu
  
  For Each hMenu In hWindow.Menus
    If hMenu.Name == $sMenu Then Return hMenu
  Next
  
End


Public Sub Arrow_Click()
  
  Dim hWindow As Window
  Dim hMenu As Menu
  
  hWindow = Me.Window
  Do
    hMenu = FindMenu(hWindow)
    If hMenu Then Break
    Try hWindow = hWindow.Parent.Window
    If Error Then
      Raise Click
      Return
    Endif
  Loop
  
  Object.Lock($hButton)
  '$hButton.Toggle = True
  '$hButton.Value = True
  hMenu.Popup($hButton.ScreenX, $hButton.ScreenY + $hButton.H)
  '$hButton.Value = False
  '$hButton.Toggle = False
  Object.Unlock($hButton)
  
End

' Private Function Action_Read() As String
' 
'   Return Super.Action
' 
' End
' 
' Private Sub Action_Write(Value As String)
' 
'   'Action.Register(Me, Value)
'   Super.Action = Value
' 
' End

Private Function Value_Read() As Boolean

  Return $hButton.Value

End

Private Sub Value_Write(Value As Boolean)

  $hButton.Value = Value

End


Private Function Arrow_Read() As Boolean

  Return $bArrow

End

Private Sub Arrow_Write(Value As Boolean)

  $bArrow = Value
  $hArrow.Visible = Value
  UpdateSize

End

Private Sub UpdateSize()
  
  Dim W As Integer
  
  If Not $bAutoResize Then Return
  
  W = $hButton.Font.TextWidth($hButton.Text) + Desktop.Scale * 3
  If $hButton.Picture Then W += $hButton.Picture.W + Desktop.Scale
  If $bArrow Then W += $hArrow.W
  Me.W = W
  
End


Private Function AutoResize_Read() As Boolean

  Return $bAutoResize

End

Private Sub AutoResize_Write(Value As Boolean)

  $bAutoResize = Value
  UpdateSize

End

Private Function Border_Read() As Boolean

  Return $hButton.Border

End

Private Sub Border_Write(Value As Boolean)

  $hButton.Border = Value
  $hArrow.Border = Value

End

Public Sub Panel_Arrange()
  
  $hArrow.Move($hPanel.W - $hArrow.W, 0, $hArrow.W, $hPanel.H)
  
End
