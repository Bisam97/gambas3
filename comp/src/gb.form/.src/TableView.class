' Gambas class file

Inherits GridView
Export 

Public Const _Properties As String = "*,NoKeyboard"
Public Const _Similar As String = "GridView"

Event Save(Row As Integer, Column As Integer, Value As String)
Event Insert
Event Click

Property Read Editor As Control
Property NoKeyboard As Boolean

Private $hTextBox As TextBox
Private $hComboBox As ComboBox
Private $hEditor As Object
Private $bTextBox As Boolean

Private $iCol As Integer
Private $iRow As Integer
Private $hWatcher As Watcher
Private $bNoKeyboard As Boolean
Private $hTimer As Timer
Private $bDoNotHideEditor As Boolean

Public Sub _new()
  
  Dim hObs As Observer
  
  hObs = New Observer(Me) As "GridView"
  $hWatcher = New Watcher(Me) As "GridView"
  
  $hComboBox = New ComboBox(Me.Window) As "Editor"
  $hComboBox.Ignore = True
  $hComboBox.Background = Color.TextBackground
  $hComboBox.Hide

  $hTextBox = New TextBox(Me.Window) As "Editor"
  $hTextBox.Ignore = True
  $hTextBox.Border = False
  $hTextBox.Background = Color.TextBackground
  $hTextBox.Hide
  
  $hTimer = New Timer As "Timer"

End

Private Sub SaveEditor() As Boolean
  
  Dim sText As String
  Dim sCurrent As String
  Dim bCancel As Boolean
  
  If Not $hEditor Then Return
  
  Try sCurrent = Me[$iRow, $iCol].Text 
  If Error Then Return
  
  Try sText = $hEditor.Text

  If sText = sCurrent Then Return
  
  bCancel = Raise Save($iRow, $iCol, sText)
  Me[$iRow, $iCol].Refresh
  Return bCancel
  
End

Public Sub Save() As Boolean
  
  If SaveEditor() Then Return True
  HideEditor(True)
  
End

Public Sub Cancel()
  
  HideEditor(True)
  
End

Private Sub HideEditor(Optional bNoSave As Boolean) As Boolean
  
  Dim bCancel As Boolean
  
  If $hEditor And If Not $bDoNotHideEditor Then
    If Not bNoSave Then 
      bCancel = SaveEditor()
    Endif
    If $hEditor Then
      $hEditor.Hide
      $hEditor = Null
    Endif
  Endif
  
  Return bCancel
  
End

Private Sub MoveEditor()
  
  Dim X, Y As Integer
  
  If Not $hEditor Then Return 
  
  X = Me.ScreenX - Me.Window.ScreenX - Me.Window.ClientX
  Y = Me.ScreenY - Me.Window.ScreenY - Me.Window.ClientY
  'DEBUG $iRow;; $iCol
  With Me[$iRow, $iCol]
    X += .X
    Y += .Y
    If Me.Grid Then
      $hEditor.Move(X, Y, .Width, .Height)
    Else
      $hEditor.Move(X, Y, .Width + 1, .Height + 1)
    Endif
  'DEBUG
  
    ' Debug .X;; .Y;; .W;; .H;; "/";; Me.ClientW;; Me.ClientH;; "/";; Me.W;; Me.H
    ' 
    ' If .X < 0 Or If .Y < 0 Or If (.X + .W) > Me.W Or If (.Y + .H) > Me.H Then
    '   
    '   HideEditor
    '   
    ' Else
    $hEditor.Font = Me.Font
    $hEditor.Show
      
  End With
  
End


Public Sub GridView_MouseDown()
  
  HideEditor
  
End


Public Sub GridView_RowResize(Row As Integer)
  
  HideEditor
  
End


Public Sub GridView_ColumnResize(Column As Integer)
  
  HideEditor
  
End


Public Sub GridView_Scroll()
  
  If $bDoNotHideEditor Then
    MoveEditor
  Else
    HideEditor
  Endif
  
End


Public Sub GridView_Resize()
  
  HideEditor
  
End


Public Sub GridView_Hide()
  
  HideEditor
  
End


Public Sub GridView_Change()
  
  HideEditor
  
End


Public Sub Edit(Optional List As String[], Optional ReadOnly As Boolean)

  'DEBUG  
  HideEditor
  
  $iCol = Me.Column
  $iRow = Me.Row
  
  If $iCol < 0 Or $iRow < 0 Then Return
  
  If List Then 
    $hComboBox.List = List
    $hComboBox.ReadOnly = ReadOnly
    $hEditor = $hComboBox
    $bTextBox = Not ReadOnly
  Else 
    $hEditor = $hTextBox
    $bTextBox = True
  Endif
  
  $hEditor.Text = Me[$iRow, $iCol].Text
  Try $hEditor.SelectAll
  MoveEditor
  Try $hEditor.SetFocus  

End

Public Sub EditWith(Editor As Control)
  
  Dim hObs As Observer

  HideEditor
  
  $iCol = Me.Column
  $iRow = Me.Row
  
  If $iCol < 0 Or $iRow < 0 Then Return
  
  $hEditor = Editor
  $bTextBox = False
  If Editor Is TextArea Or If Editor Is TextBox Or If Editor Is ButtonBox Then
    $bTextBox = True
  Endif
  
  Try $hEditor.Text = Me[$iRow, $iCol].Text
  If Error Then
    $hEditor = Null
    Error.Raise("The TableView editor must have a Text public property")
  Endif
    
  hObs = New Observer($hEditor) As "Editor"

  Try $hEditor.SelectAll
  MoveEditor
  Try $hEditor.SetFocus

End


Public Sub Editor_Activate()
  
  SaveEditor
  
End

Public Sub Editor_Click()

  SaveEditor

End

Public Sub Editor_KeyPress()

  Select Case Key.Code
  
    Case Key.Escape
      If $hEditor.Text = Me[$iRow, $iCol].Text Then
        HideEditor(True)
      Else
        $hEditor.Text = Me[$iRow, $iCol].Text
      Endif
      Stop Event

    Case Key.Up
      If $bNoKeyboard Then Return
      If $hEditor Is TextArea And If $hEditor.Line > 0 Then Return

      If SaveEditor() Then
        Stop Event
        Return
      Endif
      
      While Me.Row > 0
        Dec Me.Row
        Raise Click
        If $hEditor Then
          Stop Event
          Break
        Endif
        Break
      Wend

    Case Key.Down
      If $bNoKeyboard Then Return
      If $hEditor Is TextArea And If $hEditor.Line < $hEditor.ToLine($hEditor.Length) Then Return

      If SaveEditor() Then
        Stop Event
        Return
      Endif

      While Me.Row < (Me.Rows.Count - 1)
        Inc Me.Row
        Raise Click
        If $hEditor Then
          Stop Event
          Break
        Endif
        Break
      Wend

    Case Key.Left
      If $bNoKeyboard Then Return
      If $bTextBox And If $hEditor.Pos > 0 Then Return
      
      If SaveEditor() Then
        Stop Event
        Return
      Endif
      
      Do
        If Me.Column > 0 Then 
          Dec Me.Column
          Raise Click
        Else If Me.Row > 0 Then
          Me.MoveTo(Me.Row - 1, Me.Columns.Count - 1) 
          Raise Click
        Else
          Break
        Endif
        If $hEditor Then
          Try $hEditor.Pos = $hEditor.Length
          Stop Event
          Break
        Endif
      Loop

    Case Key.Right
      If $bNoKeyboard Then Return
      If $bTextBox And If $hEditor.Pos < $hEditor.Length Then Return

      If SaveEditor() Then
        Stop Event
        Return
      Endif
      
      Do
        If Me.Column < (Me.Columns.Count - 1) Then 
          Inc Me.Column
          Raise Click
        Else If Me.Row < (Me.Rows.Count - 1) Then
          Me.MoveTo(Me.Row + 1, 0)
          Raise Click
        Else
          Break
        Endif
        If $hEditor Then
          Try $hEditor.Pos = 0
          Stop Event
          Break
        Endif
      Loop
      
    Case Key.Enter, Key.Return
      
      If Key.Control Or Key.Shift Then Return
      
      If $bNoKeyboard Then 
        If $hEditor Then 
          HideEditor
          Stop Event
        Endif
        Return
      Endif
      
      If SaveEditor() Then
        Stop Event
        Return
      Endif
      
      Do
        If Me.Column < (Me.Columns.Count - 1) Then 
          Inc Me.Column
          Raise Click
        Else If Me.Row < (Me.Rows.Count - 1) Then
          Me.MoveTo(Me.Row + 1, 0)
          Raise Click
        Else 
          Raise Insert
          Stop Event
          Break
        Endif
        If $hEditor Then
          Try $hEditor.Pos = 0
          Stop Event
          Break
        Endif
      Loop

  End Select 
  
  If Not $bDoNotHideEditor Then
    $bDoNotHideEditor = Not IsNull($hEditor)
    If $bDoNotHideEditor Then $hTimer.Trigger
  Endif
  If Not $hEditor Then Me.SetFocus
  
End

Public Sub Timer_Timer()
  
  $bDoNotHideEditor = False
  
End


Private Function Editor_Read() As Control

  Return $hEditor

End

Private Function NoKeyboard_Read() As Boolean

  Return $bNoKeyboard

End

Private Sub NoKeyboard_Write(Value As Boolean)

  $bNoKeyboard = Value

End
