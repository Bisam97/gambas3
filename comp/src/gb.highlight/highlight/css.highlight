#num 	[+-]?([0-9]+|[0-9]*\.[0-9]+)(e[+-]?[0-9]+)?
#string 	{string1}|{string2}
#string1 	\"([^\n\r\f\\"]|\\{nl}|{escape})*\"
#string2 	\'([^\n\r\f\\']|\\{nl}|{escape})*\'

$(UNICODE)=\\[0-9a-fA-F]{1,6}(\r\n|[ \n\r\t\f])?
$(ESCAPE)=$(UNICODE)|\\[^\n\r\f0-9a-f]
$(NONASCII)=[^\0-\177]
$(NMSTART)=([_a-zA-Z]|$(NONASCII)|$(ESCAPE))
$(NMCHAR)=([_a-zA-Z0-9-]|$(NONASCII)|$(ESCAPE))
$(NAME)=$(NMCHAR)+
$(IDENT)=[-]?$(NMSTART)$(NMCHAR)*
$(NUMBER)=[+-]?([0-9]+|[0-9]*\.[0-9]+)([eE][+-]?[0-9]+)?

documentation:
  from /** to */
comment:
  from /* to */
class{Datatype}:
  match \.$(IDENT)
pseudoclass{Preprocessor}:
  match ::?$(IDENT)
id{Function}:
  match #$(IDENT)
attribute{Keyword}:
  match $(IDENT)
type{Keyword}:
  from [ to ]
  string{Normal}:
    from ' to '
operator:
  symbol > , +
block{Operator}:
  from { to }
  block.documentation{Documentation}:
    from /** to */
  block.comment{Comment}:
    from /* to */
  identifier{Normal}:
    match $(IDENT)
  property{Operator}:
    from : to ;
    important{Escape}:
      match !important
    identifier{Keyword}:
      match $(IDENT)
      symbol %
    number:
      match $(NUMBER)
    string:
      from " to "
      from ' to '
      string.escape{Escape}:
        match $(ESCAPE)
    color{Constant}:
      match #[0-9A-Fa-f]{6}
      match #[0-9A-Fa-f]{3}
    operator:
      symbol ( ) ,
