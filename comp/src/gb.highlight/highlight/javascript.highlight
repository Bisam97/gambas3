documentation:
  from /** to */
comment:
  from /* to */
  from //
string:
  from " to "
  from ' to '
  escape:
    match \\[fnrtv0'"\\]
    match \\c[A-Za-z]
    match \\x[0-9a-fA-F]{2}
    match \\u[0-9a-fA-F]{4}
    match \\u{[0-9a-fA-F]+}
string.subst{String}:
  from ` to `
  escape:
    match \\[fnrtv0'"\\]
    match \\c[A-Za-z]
    match \\x[0-9a-fA-F]{2}
    match \\u[0-9a-fA-F]{4}
    match \\u{[0-9a-fA-F]+}
  subst{Escape}:
    from ${ to } include javascript
regexp{Datatype}:
  match /.*?/[a-z]*
  regexp.escape{Escape}:
    match \\.
number:
  match [+-]?[0-9.]+
  match 0x[0-9a-fA-F]*
keyword:
  keyword @javascript.keyword
function:
  keyword function
constant:
  keyword false null this true undefined NaN Infinity
operator:
  symbol { } . >= + << ! = >>= ; == - >> ~ += >>>= ( , != * >>> && -= &= ) < === % & || *= |= [ > !== ++ | ? %= ^= -- ^ : <<= ] <= / /=
identifier:
  match [A-Za-z_$][A-Za-z_$0-9]*