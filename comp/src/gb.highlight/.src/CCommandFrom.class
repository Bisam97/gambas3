' Gambas class file

Inherits CCommand

Private $sFrom As String
Private $sTo As String
Private $sInclude As String
Private $iInclude As Integer

Public Sub SetArgs(aArgs As String[])
  
  If aArgs.Count >= 3 And If aArgs[1] = "to" Then
    $sFrom = aArgs[0]
    $sTo = aArgs[2]
    If aArgs.Count = 5 And If aArgs[3] = "with" Then
      $sInclude = aArgs[4]
      $iInclude = CState.AddInclude($sInclude)
    Else If aArgs.Count <> 3 Then
      Error.Raise("Syntax error")
    Endif
  Else If aArgs.Count = 1 Then
    $sFrom = aArgs[0]
    $sTo = "\n"
  Else 
    Error.Raise("Syntax error")
  Endif
  
End

Public Sub Compile(hState As CState)
  
  CState.IfStartWith($sFrom, hState.GetNextLabel())
  
  If $sInclude Then
  
    CState.Print("Imbricate(" & CStr($iInclude) & ")")
    hState.Forward(String.Len($sFrom))
    CState.Print("Imbricate(0)")
    hState.PrintLabel(hState.GetLabel() & "_LOOP")
    CState.Print("If $bEof Then Return")
    CState.Print("If Include(" & CStr($iInclude) & ", " & Quote($sInclude) & ", False, " & Quote($sTo) & ", aState) Then Return")
    CState.Print("Imbricate(" & CStr($iInclude) & ")")
    hState.Forward(String.Len($sTo))
    CState.Print("Imbricate(0)")
    hState.Continue()
  
  Else
  
    hState.Forward(String.Len($sFrom))
    
    hState.PrintLabel(hState.GetLabel() & "_LOOP")
    CState.Print("If $bEof Then Return")
    
    CState.IfStartWith($sTo)
      hState.Forward(String.Len($sTo))
      hState.Continue()
    CState.Print("Endif")
  
    hState.CompileChildren(True)
    
  Endif

End
