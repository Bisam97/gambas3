' Gambas class file

Inherits CCommand

Private $sFrom As String
Private $sTo As String
Private $sInclude As String
Private $iInclude As Integer

Public Sub SetArgs(aArgs As String[])
  
  If aArgs.Count >= 3 And If aArgs[1] = "to" Then
    $sFrom = aArgs[0]
    If $sFrom = "here" Then $sFrom = ""
    $sTo = aArgs[2]
    If aArgs.Count = 5 And If aArgs[3] = "with" Then
      $sInclude = aArgs[4]
      $iInclude = CState.AddInclude($sInclude)
    Else If aArgs.Count <> 3 Then
      Error.Raise("Syntax error")
    Endif
  Else If aArgs.Count = 1 Then
    $sFrom = aArgs[0]
    $sTo = "\n"
  Else 
    Error.Raise("Syntax error")
  Endif
  
End

Public Sub Compile(hState As CState)
  
  If $sInclude Then
  
    If Not $sFrom Then
  
    Else If CState.IsRegExp(ByRef $sFrom) Then
  
      CState.Print("sWord = Match(" & Quote($sFrom) & ")")
      CState.Print("If Not sWord Then Goto " & hState.GetNextLabel())
      CState.Print("SetIncludeHighlight(" & CStr($iInclude) & ")")
      hState.Forward("String.Len(sWord)")
    
    Else
  
      CState.IfStartWith($sFrom, hState.GetNextLabel())
      CState.Print("SetIncludeHighlight(" & CStr($iInclude) & ")")
      hState.Forward(String.Len($sFrom))
      
    Endif
    
    hState.PrintLabel(hState.GetLabel() & "_LOOP")
    
    If CState.IsRegExp(ByRef $sTo) Then
      
      CState.Print("If Include(" & CStr($iInclude) & ", " & Quote($sInclude) & ", True, " & Quote($sTo) & ", aState) Then Return")
      CState.Print("SetIncludeHighlight(" & CStr($iInclude) & ")")
      hState.Forward("String.Len(Match(" & Quote($sTo) & "))")
      CState.Print("SetIncludeHighlight(Me._IncludeHighlight)")
      
    Else
    
      CState.Print("If Include(" & CStr($iInclude) & ", " & Quote($sInclude) & ", False, " & Quote($sTo) & ", aState) Then Return")
      CState.Print("SetIncludeHighlight(" & CStr($iInclude) & ")")
      hState.Forward(String.Len($sTo))
      CState.Print("SetIncludeHighlight(Me._IncludeHighlight)")
  
    Endif
    
    hState.Continue()
    
  Else
  
    If Not $sFrom Then
      
    Else If CState.IsRegExp(ByRef $sFrom) Then
  
      CState.Print("sWord = Match(" & Quote($sFrom) & ")")
      CState.Print("If Not sWord Then Goto " & hState.GetNextLabel())
      hState.Forward("String.Len(sWord)")
    
    Else
  
      CState.IfStartWith($sFrom, hState.GetNextLabel())
      hState.Forward(String.Len($sFrom))
      
    Endif
    
    hState.PrintLabel(hState.GetLabel() & "_LOOP")
    
    If CState.IsRegExp(ByRef $sTo) Then
      CState.Print("sWord = Match(" & Quote($sTo) & ")")
      CState.Print("If sWord Then")
      hState.Forward("String.Len(sWord)")
    Else
      CState.IfStartWith($sTo)
      hState.Forward(String.Len($sTo))
    Endif

      hState.Continue()
    CState.Print("Endif")
  
    hState.CompileChildren(hState.GetLabel() & "_LOOP", True)
    
  Endif

End
