' Gambas class file

Inherits CCommand

Private $aWords As String[]
Private $sWords As String

Public Sub SetArgs(aArgs As String[])
  
  Dim I As Integer
  Dim sPath As String
  
  If aArgs.Count = 0 Then Error.Raise("Syntax error")
  
  If aArgs.Count = 1 And If aArgs[0] Begins "@" And If Len(aArgs[0]) >= 2 Then
    
    sPath = Mid$(aArgs[0], 2)
    If sPath Not Begins "./" And If sPath Not Begins "/" Then sPath = File.Dir(CState.Path) &/ sPath
    $aWords = Split(File.Load(sPath), " \n", "", True)
    
  Else 
    
    $aWords = New String[]
    For I = 0 To $aWords.Max
      $aWords.Add(aArgs[I])
    Next

  Endif
  
  If Me Is CCommandKeyword Then
    
    For I = 0 To $aWords.Max
      CState.Keywords.Add($aWords[I])
    Next
    
  Endif
  
  For I = 0 To $aWords.Max
    $aWords[I] = Quote($aWords[I])
  Next
  
End

Public Sub Init()
  
  Static N As Integer
  
  Inc N
  $sWords = "$cWords" & CStr(N)
  CState.Print("Static Private " & $sWords & " As Collection")
  
End

Public Sub Compile(hState As CState)
  
  CState.Print("If Not " & $sWords & " Then")
    CState.Print($sWords & " = New Collection")
    CState.Print("For Each sWord In [" & $aWords.Join(", ") & "]")
      CState.Print($sWords & "[sWord] = True")
    CState.Print("Next")
  CState.Print("Endif")
  
  CState.Print("sWord = GetWord()")
  CState.Print("If Not sWord Or If Not " & $sWords & ".Exist(sWord) Then Goto " & hState.GetNextLabel())

  hState.Forward("Len(sWord)")
  hState.Continue()
  
End
