' Gambas class file

Private $hRose As Image
Private $fScale As Float = 0.0078125
Private ITER_MAX As Integer = 128
Private $aColor As New Integer[64]
Private $XC As Float
Private $YC As Float
Private $MX As Integer
Private $MY As Integer
Private $XX As Float
Private $YY As Float
Private $bFast As Boolean 
Private $bRect As Boolean

Fast Private Sub FastDrawFractalRect(hImage As Image, XO As Float, YO As Float, SF As Float, X As Integer, Y As Integer, W As Integer, H As Integer)
  
  Dim I, J, K, C, CC As Integer
  Dim XF, YF, XF0, YF0, XF1, YF1 As Float
  Dim ZX, ZY, T As Float
  Dim bSame As Boolean
  Dim bRect As Boolean = $bRect
  
  
  XF0 = XO + X * SF
  YF0 = YO + Y * SF
  
  If W <= 4 And If H <= 4 Then Goto CALC_ALL
  
  XF1 = XF0 + (W - 1) * SF
  YF1 = YF0 + (H - 1) * SF
  
  If Sgn(XF0) + Sgn(XF1) Or If Sgn(YF0) + Sgn(YF1) Then
  
    C = 0
    
    XF = XF0
    YF = YF0
    I = X
    J = Y
    GoSub CALC_POINT
    CC = C
    bSame = True
    
    'XF += SF
    For I = X To X + W - 1
      YF = YF0
      J = Y
      GoSub CALC_POINT
      YF = YF1
      J = Y + H - 1
      GoSub CALC_POINT
      XF += SF
    Next
  
    YF = YF0 + SF
    For J = Y + 1 To Y + H - 2
      XF = XF0
      I = X
      GoSub CALC_POINT
      XF = XF1
      I = X + W - 1
      GoSub CALC_POINT
      YF += SF
    Next
    
    If bSame Then
      If CC Then hImage.FillRect(X + 1, Y + 1, W - 2, H - 2, CC) 
      If bRect Then
        hImage.PaintRect(X + 1, Y + 1, W - 2, H - 2, &HC0FFFFFF&)
      Endif
      Return
    Endif
    
    Inc X
    Inc Y
    W -= 2
    H -= 2
  
  Endif
  
  If W >= H Then
    FastDrawFractalRect(hImage, XO, YO, SF, X, Y, W \ 2, H)
    FastDrawFractalRect(hImage, XO, YO, SF, X + (W \ 2), Y, W - (W \ 2), H)
  Else
    FastDrawFractalRect(hImage, XO, YO, SF, X, Y, W, H \ 2)
    FastDrawFractalRect(hImage, XO, YO, SF, X, Y + (H \ 2), W, H - (H \ 2))
  Endif
  
  ' FastDrawFractalRect(hImage, XO, YO, SF, X, Y, W \ 2, H \ 2)
  ' FastDrawFractalRect(hImage, XO, YO, SF, X + (W \ 2), Y, W - (W \ 2), H \ 2)
  ' FastDrawFractalRect(hImage, XO, YO, SF, X, Y + (H \ 2), W \ 2, H - (H \ 2))
  ' FastDrawFractalRect(hImage, XO, YO, SF, X + (W \ 2), Y + (H \ 2), W - (W \ 2), H - (H \ 2))
  Return

CALC_ALL:

  XF = XF0
  For I = X To X + W - 1
    YF = YF0
    For J = Y To Y + H - 1
      
      ZX = 0
      ZY = 0
      
      For K = 0 To ITER_MAX - 1
        
        T = ZX * ZX - ZY * ZY + XF
        ZY = 2 * ZX * ZY + YF
        
        If ((T * T) + (ZY * ZY)) > 4 Then Break
        
        ZX = T
        
      Next
      
      If K < ITER_MAX Then hImage[I, J] = $aColor[K And 63]
      
      YF += SF
    Next
    XF += SF
  Next
  Return

CALC_POINT:
  
  ZX = 0
  ZY = 0
  
  For K = 0 To ITER_MAX - 1
    
    T = ZX * ZX - ZY * ZY + XF
    ZY = 2 * ZX * ZY + YF
    
    If ((T * T) + (ZY * ZY)) > 4 Then Break
    
    ZX = T
    
  Next
  
  If K < ITER_MAX Then
    K = K And 63
    C = $aColor[K]
    If C <> CC Then bSame = False
    hImage[I, J] = C
  Else
    C = 0
    If C <> CC Then bSame = False
  Endif
  
  Return

End

Private Sub DrawFractalRect(hImage As Image, XO As Float, YO As Float, SF As Float, X As Integer, Y As Integer, W As Integer, H As Integer)
  
  Dim I, J, K, C, CC As Integer
  Dim XF, YF, XF0, YF0, XF1, YF1 As Float
  Dim ZX, ZY, T As Float
  Dim bSame As Boolean
  Dim bRect As Boolean = $bRect
  
  
  XF0 = XO + X * SF
  YF0 = YO + Y * SF
  
  If W <= 4 And If H <= 4 Then Goto CALC_ALL
  
  XF1 = XF0 + (W - 1) * SF
  YF1 = YF0 + (H - 1) * SF
  
  If Sgn(XF0) + Sgn(XF1) Or If Sgn(YF0) + Sgn(YF1) Then
  
    C = 0
    
    XF = XF0
    YF = YF0
    I = X
    J = Y
    GoSub CALC_POINT
    CC = C
    bSame = True
    
    XF += SF
    For I = X To X + W - 1
      YF = YF0
      J = Y
      GoSub CALC_POINT
      YF = YF1
      J = Y + H - 1
      GoSub CALC_POINT
      XF += SF
    Next
  
    YF = YF0 + SF
    For J = Y + 1 To Y + H - 2
      XF = XF0
      I = X
      GoSub CALC_POINT
      XF = XF1
      I = X + W - 1
      GoSub CALC_POINT
      YF += SF
    Next
    
    If bSame Then
      If CC Then hImage.FillRect(X + 1, Y + 1, W - 2, H - 2, CC) 
      If bRect Then
        hImage.PaintRect(X + 1, Y + 1, W - 2, H - 2, &HC0FFFFFF&)
      Endif
      Return
    Endif
    
    Inc X
    Inc Y
    W -= 2
    H -= 2
  
  Endif
  
  If W >= H Then
    DrawFractalRect(hImage, XO, YO, SF, X, Y, W \ 2, H)
    DrawFractalRect(hImage, XO, YO, SF, X + (W \ 2), Y, W - (W \ 2), H)
  Else
    DrawFractalRect(hImage, XO, YO, SF, X, Y, W, H \ 2)
    DrawFractalRect(hImage, XO, YO, SF, X, Y + (H \ 2), W, H - (H \ 2))
  Endif
  
  Return

CALC_ALL:

  XF = XF0
  For I = X To X + W - 1
    YF = YF0
    For J = Y To Y + H - 1
      
      ZX = 0
      ZY = 0
      
      For K = 0 To ITER_MAX - 1
        
        T = ZX * ZX - ZY * ZY + XF
        ZY = 2 * ZX * ZY + YF
        
        If ((T * T) + (ZY * ZY)) > 4 Then Break
        
        ZX = T
        
      Next
      
      If K < ITER_MAX Then hImage[I, J] = $aColor[K And 63]
      
      YF += SF
    Next
    XF += SF
  Next
  Return

CALC_POINT:
  
  ZX = 0
  ZY = 0
  
  For K = 0 To ITER_MAX - 1
    
    T = ZX * ZX - ZY * ZY + XF
    ZY = 2 * ZX * ZY + YF
    
    If ((T * T) + (ZY * ZY)) > 4 Then Break
    
    ZX = T
    
  Next
  
  If K < ITER_MAX Then
    K = K And 63
    C = $aColor[K]
    If C <> CC Then bSame = False
    hImage[I, J] = C
  Else
    C = 0
    If C <> CC Then bSame = False
  Endif
  
  Return

End

Public Sub dwgFractal_Draw()

  Dim hImage As Image
  Dim X, Y, I, J As Float
  Dim YT As Integer
  
  X = $XC + (Draw.Clip.X - dwgFractal.W / 2) * $fScale
  Y = $YC + (Draw.Clip.Y - dwgFractal.H / 2) * $fScale
  
  hImage = New Image(Draw.Clip.W, Draw.Clip.H)
  For I = 0 To hImage.W Step $hRose.W
    For J = 0 To hImage.H Step $hRose.H
      hImage.DrawImage($hRose, I, J)
    Next
  Next
  
  If $bFast Then
    FastDrawFractalRect(hImage, X, Y, $fScale, 0, 0, hImage.W, hImage.H)
  Else
    DrawFractalRect(hImage, X, Y, $fScale, 0, 0, hImage.W, hImage.H)
  Endif
  
  'Draw.Tile($hRose, 0, 0, dwgFractal.W, dwgFractal.H)
  Draw.Image(hImage, Draw.Clip.X, Draw.Clip.Y)
  
  YT = 8
  
  If $bFast Then
    Draw.Text(("Press F to deactivate Just-In-Time compilation"), 8, YT)
  Else
    Draw.Text(("Press F to activate Just-In-Time compilation"), 8, YT)
  Endif
  
  YT += Draw.Font.Height + 8
  If $bRect Then
    Draw.Text(("Press R to hide rectangle optimization"), 8, YT)
  Else
    Draw.Text(("Press R to show rectangle optimization"), 8, YT)
  Endif
  
  YT += Draw.Font.Height + 8
  Draw.Text(("Zoom") & ": " & CStr(Log2($fScale) + 6) & "  " & ("Speed") & ": " & If($bFast, ("Fast"), ("Slow")) & "  " & ("Max") & ": " & ITER_MAX, 8, YT)

End

Public Sub dwgFractal_MouseWheel()

  Dim fNewScale As Float

  If Mouse.Delta < 0 Then
    If Log2($fScale) >= -6 Then Return
    fNewScale = $fScale * Sqr(2)
    ITER_MAX -= 4
  Else
    If Log2($fScale) < -50 Then Return
    fNewScale = $fScale / Sqr(2)
    ITER_MAX += 4
  Endif
  
  $XC += $fScale * (Mouse.X - dwgFractal.W / 2)
  $YC += $fScale * (Mouse.Y - dwgFractal.H / 2)
  
  $fScale = fNewScale
  
  $XC -= $fScale * (Mouse.X - dwgFractal.W / 2)
  $YC -= $fScale * (Mouse.Y - dwgFractal.H / 2)
  
  Me.Refresh

End

Public Sub Form_Open()

  Dim I As Integer
  
  $hRose = Image.Load("rose.jpg")
  For I = 0 To $aColor.Max
    $aColor[I] = Color.HSV(360 * I / $aColor.Max, 255, 255)
  Next
  
  Me.Center

End

Public Sub dwgFractal_MouseDown()

  $MX = Mouse.X
  $MY = Mouse.Y
  $XX = $XC
  $YY = $YC

End

Public Sub dwgFractal_MouseMove()
  
  $XC = $XX + ($MX - Mouse.X) * $fScale
  $YC = $YY + ($MY - Mouse.Y) * $fScale
  Me.Refresh
  
End



Public Sub dwgFractal_KeyPress()

  If UCase(Key.Text) = "F" Then
    $bFast = Not $bFast
    Me.Refresh
  Else If UCase(Key.Text) = "R" Then
    $bRect = Not $bRect
    Me.Refresh
  Else If Key.Code = Key.Esc Then
    Me.Close
  Endif

End
