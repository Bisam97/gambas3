' Gambas class file

Private $hPlayer As MediaPlayer
Private $hOutput As MediaControl
Private $aVisualisation As MediaControl[]

Private $fPos As Float
Private $fLength As Float
Private $sInfo As String
Private $iVisualisation As Integer

Public Sub _new()
  
  Application.MainWindow = Me
  
End

Private Sub AddVisualisation(sType As String, sTitle As String)
  
  Dim hVisualisation As MediaControl
  
  hVisualisation = New MediaControl($hPlayer, sType)
  hVisualisation.Tag = sTitle
  $aVisualisation.Add(hVisualisation)
  
Catch
  
  Error sType; ": "; Error.Text
  
End

Private Sub MakeMediaPlayer()
  
  $hPlayer = New MediaPlayer As "MediaPlayer"
  
  $hOutput = New MediaControl($hPlayer, "ximagesink")  
  $hPlayer.Video.Output = $hOutput
  
  $aVisualisation = New MediaControl[]
  'AddVisualisation("libvisual_lv_analyzer", "Analyze")
  AddVisualisation("libvisual_bumpscope", "Bump")
  AddVisualisation("libvisual_corona", "Corona")
  AddVisualisation("goom", "Goom")
  AddVisualisation("libvisual_infinite", "Infinite")
  AddVisualisation("libvisual_jakdaw", "Jakdaw")
  AddVisualisation("libvisual_jess", "Jess")
  AddVisualisation("monoscope", "Mono")
  AddVisualisation("libvisual_oinksie", "Oinksie")
  AddVisualisation("libvisual_lv_scope", "Scope")
  AddVisualisation("spacescope", "Space")
  AddVisualisation("spectrascope", "Spectra")
  AddVisualisation("synaescope", "Synae")
  AddVisualisation("wavescope", "Wave")
  
  $iVisualisation = 2
  UpdateVisualisation
  
End

Public Sub GetButton(sKey As String) As CButton
  
  Return FControl.Controls["#" & sKey]
  
End


Public Sub CreateButtons(aButton As String[], hParent As Container)
  
  Dim sKey As String
  Dim sImg As String
  Dim hPanel As Panel
  Dim hButton As CButton
  Dim iPos As Integer
  
  For Each sKey In aButton
    
    If sKey = "<->" Then
      hPanel = New Panel(hParent)
      hPanel.Expand = True
      hPanel.Resize(8, 48)
    Else If sKey = "-" Then
      hPanel = New Panel(hParent)
      hPanel.Resize(8, 48)
    Else
      
      sImg = sKey
      iPos = InStr(sImg, "#")
      If iPos Then sImg = Left(sImg, iPos - 1)
      
      hButton = New CButton(hParent) As "Button"
      hButton.Resize(48, 48)
      hButton.Image = Image.Load(sImg & ".png")
      hButton.Tag = sKey
      hButton.Name = "#" & sKey
      'If cTooltip Then hButton.Tooltip = cTooltip[sImg]
      'If $cShortcut Then hButton.Shortcut = $cShortcut[sImg]
      '$cButton[hButton.Tag] = hButton
    Endif
  Next
  
End


Public Sub Form_Open()

  Dim sButton As String
  Dim hButton As CButton
  Dim hPanel As Panel
  
  MakeMediaPlayer
  
  FControl.Show
  
  RefreshVolume
  
End

Public Sub Form_KeyPress()
  
  If Key.Code = Key.Escape Then Action("quit")
  
End

Private Sub Action(sAction As String)

  Dim fPos As Float
  Dim iState As Integer

  Select sAction
    
    Case "eject"
      Dialog.Title = ("Select a media file")
      If Not Dialog.OpenFile() Then 
        Action("stop")
        $hPlayer.Subtitles.Enabled = False
        $hPlayer.URL = Media.URL(Dialog.Path)
        If Exist(File.SetExt(Dialog.Path, "srt")) Then 
          $hPlayer.Subtitles.URL = Media.URL(File.SetExt(Dialog.Path, "srt"))
          $hPlayer.Subtitles.Enabled = True
        Endif
        UpdateSubtitle
        FControl.SetTitle(File.Name(Dialog.Path))
        Action("play")
      Endif
      
    Case "subtitle"
      'If $hPlayer.State = Media.Playing Or If $hPlayer.State = Media.Paused Then
      '  $hPlayer.Subtitles.Enabled = Not $hPlayer.Subtitles.Enabled
      '  UpdateSubtitle
      'Else
        Dialog.Title = ("Select a subtitle file")
        If Not Dialog.OpenFile() Then 
          $hPlayer.Subtitles.URL = Media.URL(Dialog.Path)
          $hPlayer.Subtitles.Enabled = True
          UpdateSubtitle
        Endif
      'Endif
      
    Case "play"
      $hOutput.SetWindow(dwgVideo) ', panLeft.X + panLeft.W + 8, panLeft.Y + 8, Me.W - panLeft.X - panLeft.W - 16, Me.H - panLeft.Y - 16)
      Try $hPlayer.Play
      FControl.SetMinOpacity(0)
      dwgVideo.Mouse = Mouse.Blank
      timTime.Start
      
    Case "stop"
      $hPlayer.Stop
      $fLength = 0
      timTime.Stop
      dwgVideo.Mouse = Mouse.Default
      FControl.SetMinOpacity(80)
      
    Case "pause"
      $hPlayer.Pause
      dwgVideo.Mouse = Mouse.Default
      timTime.Stop
      
    Case "fullscreen"
      Me.FullScreen = Not Me.FullScreen
      Me.Maximized = Not Me.FullScreen
      
    Case "volume"
      $hPlayer.Audio.Mute = Not $hPlayer.Audio.Mute
      RefreshVolume
      
    Case "visualisation"
      
      iState = $hPlayer.State
      If iState <> Media.Null And If iState <> Media.Ready Then
        fPos = $hPlayer.Position
        $hPlayer.Stop
        $hPlayer.Close
        timTime.Stop
        'Wait 1
      Endif
      
      Inc $iVisualisation
      If $iVisualisation >= $aVisualisation.Count Then $iVisualisation = 0
      UpdateVisualisation
      
      If iState <> Media.Null And If iState <> Media.Ready Then
        $hPlayer.Pause
        $hPlayer.Position = fPos
        $hPlayer.State = iState
        If iState = Media.Playing Then timTime.Start
      Endif
    
    Case "quit"
      Me.Close
    
  End Select

End

Public Sub Button_Click()
  
  Action(Last.Tag)
  
End

' Public Sub Form_Arrange()
' 
'   panToolbar.Move(0, Me.H - panToolbar.H, Me.W, panToolbar.H)
' 
' End

Public Sub timTime_Timer()

  $fPos = $hPlayer.Position
  If $fLength = 0 Then $fLength = $hPlayer.Duration
  FControl.SetInfo(Format(CDate(($fPos + 0.5) / 86400), "hh:nn:ss") & " / " & Format(CDate($fLength / 86400), "hh:nn:ss"))
  
End

Public Sub GetLength() As Float
  
  Return $fLength
  
End

Public Sub GetPos() As Float
  
  Return $fPos
  
End

Public Sub SetPos(fPos As Float)
  
  If $hPlayer.State = Media.Paused Or If $hPlayer.State = Media.Playing Then
    If $fLength Then
      $fPos = fPos * $fLength
      $hPlayer.Position = $fPos
    Endif
  Endif
  
End

Public Sub Form_Resize()

  FControl.Move(0, Me.H - FControl.H, Me.W, FControl.H)

End

Public Sub Form_Close()

  CAnimation.Exit

End

Public Sub Button_MouseWheel()
  
  $hPlayer.Audio.Mute = False
  
  If Mouse.Delta > 0 Then
    $hPlayer.Audio.Volume = Min(1, (Sqr($hPlayer.Audio.Volume) + 0.05) ^ 2)
  Else
    $hPlayer.Audio.Volume = Max(0, (Sqr($hPlayer.Audio.Volume) - 0.05) ^ 2)
  Endif
  
  RefreshVolume
  
End

Private Sub RefreshVolume()
  
  Dim sImage As String
  Dim fVolume As Float
  
  With GetButton("volume")
    
    If $hPlayer.Audio.Mute Then
      sImage = "mute"
      .Text = ""
    Else
      fVolume = Sqr($hPlayer.Audio.Volume)
      .Text = Format(fVolume, "0%")
      sImage = "volume-" & Min(3, CInt(fVolume * 4))
    Endif
    
    .Image = Image.Load(sImage & ".png")
    
  End With
  
End

Private Sub UpdateSubtitle()

  GetButton("subtitle").Text = If($hPlayer.Subtitles.Enabled, "ON", "")

End

Private Sub UpdateVisualisation()

  $hPlayer.Video.Visualisation = $aVisualisation[$iVisualisation]
  GetButton("visualisation").Text = $aVisualisation[$iVisualisation].Tag
  $hOutput.SetWindow(dwgVideo)

End