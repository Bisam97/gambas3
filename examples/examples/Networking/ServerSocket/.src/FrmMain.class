' Gambas class file
Private Client As Object[]
Private Waiting As Boolean

Public Sub Button1_Click()

  If combobox2.Index = 0 Then
    'TCP
    Server.Type = Net.Internet
    ' The port to listen to
    Server.Port = Val(TextBox1.Text)
    ' we start listening
    Server.Listen(ComboBox1.Index)
  Else
    ' UNIX
    Server.Type = Net.Local ' You could also use Net.Unix
    Server.Path = TxtPath.Text
    Server.Listen(ComboBox1.Index)
  End If
  If Server.Status = Net.Active Then 
    ' listening
    Button1.Enabled = False
    button2.Enabled = True
    ComboBox1.Enabled = False
    ComboBox2.Enabled = False
    TxtPath.Enabled = False
  End If
   
End

Public Sub Server_Error()
  
  Message.Error("Unable to bind socket")
  
End


Public Sub Server_Connection(sHost As String)
  '*******************************
  ' A client has arrived!
  ' let's accept it
  Dim Obj As Socket
  If Server.Status <= Net.Inactive Then Return
  If ComboBox2.Index = 0 Then
    TextArea1.Text = TextArea1.Text & "Connection request from : " & sHost & Chr(13) & Chr(10)
  Else
    TextArea1.Text = TextArea1.Text & "Connection request accepted" & Chr(13) & Chr(10)
  End If
  
  Obj = Server.Accept()
  Obj.Blocking = False
  Client.Add(Obj)
  If Obj.Status = Net.Connected And ComboBox2.Index = 0 Then
    TextArea1.Text = TextArea1.Text & "Connection from " & Obj.RemoteHost & ":" & Obj.RemotePort & " accepted (local port " & Obj.LocalPort & ")" & Chr(13) & Chr(10) 
  
  End If
  
End

Public Sub Socket_Write()
  
  Dim hSocket As Socket = Last
  Dim iInd As Integer
  
  'Debug hSocket;; hSocket.Tag
  If IsNull(hSocket.Tag) Then Return
  
  iInd = hSocket.Tag[0]
  
  Do
    Inc iInd
    If iInd > 1000 Then
      hSocket.Tag = Null
      Return
    Endif
    
    'Debug iInd
    Try Print #hSocket, iInd & ":" & hSocket.Tag[1] & Space$(512) & "\n";
    If Error Then 
      Debug Error.Text
      Break
    Endif
  Loop
  
  hSocket.Tag[0] = iInd

Catch

End


Public Sub Socket_Read()
    Dim sBuf As String
    Dim iInd As Integer
    
    '******************************
    ' When some data arrives to
    ' our server, we respond with
    ' an echo
    '*****************************
     
    If Last.Status <> Net.Connected Then Return
    Read #Last, sBuf, Lof(Last)
    TextArea1.Text &= "Socket number " & Client.Find(Last) & " --> " & sBuf & "\n"
    
    Last.Tag = [0, sBuf]
    Socket_Write
    
End

Public Sub Socket_Ready()
  
  TextArea1.Text &= "-- Client working --\n"
  
End

Public Sub Socket_Closed()

    TextArea1.Text &= "Client  " & Client.Find(Last) & " Closed\n"
    Client.Remove(Client.Find(Last)) 
End


Public Sub Form_Open()

  Client = New Object[] 
  TxtPath.Text = Application.Path & "/" & "gambas"
  TxtPath.Enabled = False
  TextLabel3.Text = "Path (Max." & Net.MaxPathLength & ") :"

End

Public Sub Button2_Click()

  Server.Close()
  Button2.Enabled = False
  button1.Enabled = True
  ComboBox1.Enabled = True
  ComboBox2.Enabled = True
  ComboBox2_Click()

End

Public Sub Form_Close()

  ' We have to be sure of closing the server before exiting
  Server.Close()

End

Public Sub CmdWait_Click()

  If Waiting Then
    Server.Resume()
    CmdWait.Text = "Pause"
  Else
    Server.Pause()
    CmdWait.Text = "Resume"
  End If
  Waiting = Not Waiting

End

Public Sub ComboBox2_Click()

  If ComboBox2.Index = 0 Then
    TextBox1.Enabled = True
    TxtPath.Enabled = False
  Else
    TextBox1.Enabled = False
    TxtPath.Enabled = True
  End If

End
