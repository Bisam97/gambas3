' Gambas class file

Public sName As String = ""
Public aText As String[]
Public aTokens As Variant[]
Public aTypes As Variant[]
Public aPositions As Variant[]
Public iLineNumber As Integer
Public sDefinedIn As String
Public iExtention As Integer

Public Enum asForm, asModule, asClass, asConnection
Static Public FileExtention As String[] = ["form", "module", "class", "connection"]

Public Sub _new(ClassName As String, ClassText As String[], ClassTokens As Variant[], ClassTypes As Variant[], ClassPositions As Variant[], Optional extention As Integer = asClass)
  
  sName = ClassName
  atext = ClassText
  aTokens = ClassTokens
  aTypes = ClassTypes
  aPositions = ClassPositions
  iExtention = extention
  
End

Public Sub Save(sPrjPath As String, bFast As Boolean, bUnsafe As Boolean) As Boolean
 Dim ClassFile As String
 Dim DirectiveFast As String = IIf(bFast = True, IIf(bUnsafe = True, "Fast Unsafe\n", "Fast\n"), "")
 If iExtention = asConnection Then
    If Not Exist(sPrjPath &/ ".connection") Then
      Mkdir sPrjPath &/ ".connection"
    Endif
    ClassFile = sPrjPath &/ ".connection" &/ sName & "." & FileExtention[iExtention]
 Else
    ClassFile = sPrjPath &/ ".src" &/ sName & "." & FileExtention[iExtention]
 Endif
 Verbose("Writing " & FileExtention[iExtention] & " " & sName & " to : " & ClassFile & " From Script : " & sDefinedIn & "." & iLineNumber)
  Try File.Save(ClassFile, DirectiveFast & aText.Join("\n"))
   If Error Then
     CompileError(sDefinedIn, iLineNumber, "Unable to Write" & FileExtention[iExtention] & sName & " to " & Quote(ClassFile) & " Reason : " & Error.text)
   Endif
End
