' Gambas class file

Public Value As String

Private $cBorder As New Collection(gb.IgnoreCase)
Private $iColor As Integer
Private $sWidth As String

Public Sub Run(sBorder As String) As Boolean
  
  Value = sBorder
  Return Not Me.ShowModal()
  
End

Private Sub SetBorder(sBorder As String, bBorder As Boolean)
  
  If Not bBorder Then
    If $cBorder.Count = 0 Then
      $cBorder["Left"] = True
      $cBorder["Right"] = True
      $cBorder["Bottom"] = True
      $cBorder["Top"] = True
    Endif
    $cBorder.Remove(sBorder)
  Else
    $cBorder[sBorder] = True
    If $cBorder.Count = 4 Then $cBorder.Clear
  Endif
  
End

Private Sub HasBorder(sBorder As String) As Boolean
  
  If $cBorder.Count = 0 Then Return True
  Return $cBorder.Exist(sBorder)
  
End


Public Sub Form_Open()

  Dim sElt As String
  Dim bBorder As Boolean
  
  If Not Value Then
    chkBorder.Value = False
    Return
  Endif

  chkBorder.Value = True
  
  $cBorder.Clear
  
  For Each sElt In Split(Value, ",", "[]", True, True)
  
    Select Case UCase(sElt)
    
      Case "TOP", "BOTTOM", "LEFT", "RIGHT"
        SetBorder(sElt, True)
        
      Case Else
        ' Maybe later [...] will be a syntax for a brush
        If sElt Begins "&H" Then 
          Try $iColor = Val(sElt)
        Else If IsDigit(Left(sElt)) Then 
          $sWidth = sElt
        Endif
        
    End Select
    
  Next
  
  txtWidth.Text = $sWidth
  btnColor.Value = $iColor

  dwgBorder.Refresh

End

Public Sub chkBorder_Click()

  Dim hChild As Control
  
  For Each hChild In panBorder.Children
    hChild.Enabled = chkBorder.Value
  Next

End


Public Sub dwgBorder_Draw()

  Dim fWidth As Float
  
  If Not chkBorder.Value Then Return
  fWidth = CFamilyReport.ToPixel($sWidth)
  If fWidth = 0 Then fWidth = 1
  fWidth = Min(fWidth, Desktop.Scale * 6)
  
  Paint.Brush = Paint.Color($iColor)
  
  If HasBorder("Left") Then Paint.Rectangle(1, 1, fWidth, Paint.Height - 2)
  If HasBorder("Right") Then Paint.Rectangle(Paint.Width - fWidth - 1, 1, fWidth, Paint.Height - 2)
  If HasBorder("Top") Then Paint.Rectangle(1, 1, Paint.Width - 2, fWidth)
  If HasBorder("Bottom") Then Paint.Rectangle(1, Paint.Height - fWidth - 1, Paint.Width - 2, fWidth)
  
  Paint.Fill

End

Public Sub btnOK_Click()

  Dim aBorder As String[]
  Dim bBorder As Boolean

  If Not chkBorder.Value Or If Not $sWidth Then
    Value = ""
  Else
    Value = $sWidth & ",&H" & Hex$($iColor, 6) & "&"
    If $cBorder Then
      aBorder = New String[]
      For Each bBorder In $cBorder
        If bBorder Then aBorder.Add(UCase(Left($cBorder.Key)) & LCase(Mid$($cBorder.Key, 2)))
      Next
      If aBorder.Count And If aBorder.Count < 4 Then Value &= "," & aBorder.Join()
    Endif
  Endif

  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnColor_Change()

  $iColor = btnColor.Value
  dwgBorder.Refresh

End

Public Sub txtWidth_Click()

  If FReportCoordChooser.Run(txtWidth.Text) Then Return
  txtWidth.Text = FReportCoordChooser.Coord
  $sWidth = txtWidth.Text
  dwgBorder.Refresh

End

Public Sub dwgBorder_MouseDown()

  Dim fPosX, fPosY As Float
  Dim sWhere As String
  
  fPosX = Mouse.X / dwgBorder.Width
  fPosY = Mouse.Y / dwgBorder.Height
  
  If fPosY > fPosX Then
    If fPosY > (1 - fPosX) Then
      sWhere = "Bottom"
    Else
      sWhere = "Left"
    Endif
  Else
    If fPosY > (1 - fPosX) Then
      sWhere = "Right"
    Else
      sWhere = "Top"
    Endif
  Endif
  
  SetBorder(sWhere, Not HasBorder(sWhere))
  dwgBorder.Refresh

End
