' Gambas class file

Property Enabled As Boolean
Property ToolTip As String
Property Foreground As Integer

Public Tag As String

Private $hPanel As DrawingArea
Private $hImage As PictureBox
Private $hLabel As TextLabel
Private $iColor As Integer

Event Click()


Public Sub _new(hContainer As Container, X As Integer, Y As Integer, W As Integer, H As Integer, sText As String, vIcon As Variant, Optional sFont As String)

  Dim hPict As Picture

  $hPanel = New DrawingArea(hContainer) As "Panel"
  $hPanel.Move(X, Y, W, H)
  $hPanel.Mouse = Mouse.Pointing
  $hPanel.Arrangement = Arrange.Horizontal
  $hPanel.Padding = 2
  $hPanel.Spacing = 8
  $hPanel.Focus = True

  If TypeOf(vIcon) = gb.String Then
    hPict = Picture[vIcon]
  Else
    hPict = vIcon
  Endif

  $hImage = New PictureBox($hPanel) As "Panel"
  If hPict Then
    $hImage.Resize(hPict.Width + 4, H - 8)
    $hImage.Alignment = Align.Right
    $hImage.Picture = hPict
  Else
    $hImage.Resize(32, H - 8)
  Endif

  $hLabel = New TextLabel($hPanel) As "Panel"
  $hLabel.Expand = True
  $hLabel.Wrap = False
  $hLabel.Alignment = Align.Normal
  If sFont Then $hLabel.Font = Font[sFont]
  $hLabel.Text = sText

End

Private Sub UpdateBorder()
  
  $hPanel.Border = If($hPanel.Hovered Or $hPanel.HasFocus, Border.Plain, Border.None)
  
End


Public Sub Panel_Enter()

  Dim hPanel As DrawingArea

  Try hPanel = Last
  If Not hPanel Then Return

  $iColor = hPanel.Foreground
  hPanel.Background = Color.LightBackground '&88D5FF&
  hPanel.Foreground = Color.Foreground '&88D5FF&
  UpdateBorder

End

Public Sub Panel_Leave()

  Dim hPanel As DrawingArea

  Try hPanel = Last
  If Not hPanel Then Return

  hPanel.Background = Color.Default 'Last.Parent.Background
  hPanel.Foreground = $iColor
  UpdateBorder

End

Public Sub Panel_GotFocus()
  
  UpdateBorder
  
End

Public Sub Panel_LostFocus()
  
  UpdateBorder
  
End

Public Sub Panel_KeyPress()
  
  If Key.Code = Key.Space Then Panel_MouseDown
  
End

Public Sub Panel_KeyRelease()
  
  If Key.Code = Key.Space Then
    Panel_MouseUp
    Panel_Leave
  Endif
  
End


Private Function GetPanel() As DrawingArea

  Dim hPanel As DrawingArea

  Try hPanel = Last
  If Error Then
    hPanel = Last.Parent
  Endif

  Return hPanel

End


Public Sub Panel_MouseDown()

  'If Last Is Panel Then Return
  With GetPanel()
    .Background = Color.SelectedBackground
    .Foreground = Color.SelectedForeground
  End With

End


Public Sub Panel_MouseUp()

  Dim hPanel As DrawingArea
  Dim X As Integer
  Dim Y As Integer

  hPanel = GetPanel()
  hPanel.Background = Color.LightBackground
  hPanel.Foreground = $iColor

  Try X = Mouse.X
  Try Y = Mouse.Y

  If Last <> hPanel Then
    X = X + Last.X
    Y = Y + Last.Y
  Endif

  If (X >= 0 And Y >= 0 And X < hPanel.W And Y < hPanel.H) Then

    Raise Click
    Stop Event

  Endif

End


Private Function Enabled_Read() As Boolean

  Return $hPanel.Enabled

End

Private Sub Enabled_Write(bEnabled As Boolean)

  $hPanel.Enabled = bEnabled

End


Public Sub Move(X As Integer, Y As Integer)

  $hPanel.Move(X, Y)

End


Public Sub Resize(W As Integer, H As Integer)

  $hPanel.Resize(W, H)
  '$hLabel.Resize(W - ($hImage.X + $hImage.W + 8) - 8, H - 8)

End

Private Function ToolTip_Read() As String

  Return $hPanel.ToolTip

End

Private Sub ToolTip_Write(sToolTip As String)

  $hPanel.ToolTip = sToolTip
  '$hImage.ToolTip = sToolTip
  '$hLabel.ToolTip = sToolTip

End


Private Function Foreground_Read() As Integer

  Return $hPanel.Foreground

End

Private Sub Foreground_Write(Value As Integer)

  $hPanel.Foreground = Value

End
