' Gambas class file

Public Sub ShowKeywordHelp(sName As String, Optional sName2 As String) As Boolean
   Dim sPath As String
      txtHelp.RichText = "<font color=blue>Gambas Keyword: </font>" & sName
      'txtHelp.RichText &= GetHelp(GetPath("help/lang/type" &/ LCase(sName)) & ".html")
      

  If sName2 Then
    If Not ShowKeywordHelp(sName2) Then Return
  Endif

  If Right(sName) = "$" Then sName = Left$(sName, -1)

  sPath = GetPath("help/lang" &/ LCase(sName)) & ".html"
  If Not Exist(sPath) Then Return True
  txtHelp.RichText &= GetHelp(sPath)
  'Project.OpenWebPage(sPath)
  
Catch

  Return True
End


Public Sub ShowSymbolHelp(hSymbol As CSymbolInfo)
  Dim sLink As String
  Dim sName As String
  Dim sComp As String
  If hSymbol.LineNumber Then
  'Symbole locale
    txtHelp.RichText = "<font color=green>Component: </font>This project" & 
                       "&nbsp;&nbsp;&nbsp;<Font color=red>Class: </font>" & hSymbol.Class & 
                       "&nbsp;&nbsp;&nbsp;<Font color=blue>Symbol: </font>" & hSymbol.Name 
  
    txtHelp.RichText &= "<br><br>" & GetLocalHelp(hSymbol)
  
  Else
  'Symbole externe
    txtHelp.RichText = "<font color=green>Component: </font>" & hSymbol.Component & 
                     "&nbsp;&nbsp;&nbsp;<Font color=red>Class: </font>" & hSymbol.Class & 
                     "&nbsp;&nbsp;&nbsp;<Font color=blue>Symbol: </font>" & hSymbol.Name 
  
    
    sName = LCase(hSymbol.Name)
    
    If hSymbol.Component = "gb" And If hSymbol.Class = "." Then
      sLink = "help/lang"
    Else
      sLink = "help/comp"
      sComp = hSymbol.Component
      If sComp = "gb.qt4" Or If sComp = "gb.gtk" Or If sComp = "gb.gui" Then sComp = "gb.qt"
      sLink &= "/" & sComp
      If hSymbol.Class <> "." Then sLink &= "/" & LCase(hSymbol.Class)
    Endif
  
    sLink &/= sName 
    
    If Exist(GetPath(FormatName(sLink)) & ".html")
      sLink = GetPath(FormatName(sLink)) & ".html"
    Else
      sLink = "http://gambasdoc.org" &/ sLink & "?v3&" & GetLanguage()
    Endif
      txtHelp.RichText &= GetHelp(sLink)
      
  Endif
End
  

Public Sub ShowClassHelp(sComponent As String, sName As String)
  
  'Description de la Classe
  txtHelp.RichText = "<font color=green>Component: </font>" & sComponent & 
                     "&nbsp;&nbsp;&nbsp;<Font color=red>Class: </font>" & sName
  
End

Private Function GetHelp(sFile As String) As String
  Dim aHelp As String[]
  'FDebugInfo.SetHelpVisible
  If Exist(sFile) Then
    ahelp = Scan(File.Load(sFile), "*<div class=\"title\">*</body>*")

    Return "<br><br>" & aHelp[1]
  'Else
  '  Return "Help Not Found"
  Endif
  
  Catch
    Return "</br>Error"
  
End

Public Function ShowDatatypeHelp(sName As String) As Boolean

  Dim sPath As String

  sPath = GetPath("help/lang/type" &/ LCase(sName)) & ".html"
  If Not Exist(sPath) Then Return True
  txtHelp.RichText = "<font color=blue>Gambas DataType: </font>" & sName
  
  txtHelp.RichText &= GetHelp(GetPath("help/lang/type" &/ LCase(sName)) & ".html")
  
'Catch

'  Return True

End

Private Sub GetPath(sPath As String) As String
  
  sPath = Replace(sPath, "/gb+gui/", "/gb+qt/")
  sPath = Replace(sPath, "/gb+gtk/", "/gb+qt/")
  Return System.Path &/ "share/gambas" & CStr(System.Version) &/ "help" &/ sPath
  
End

Private Sub FormatName(sName As String) As String

  sName = LCase(sName)
  sName = Replace(sName, "_", "+")
  sName = Replace(sName, "/.", "/_")
  sName = Replace(sName, "/+", "/_")
  sName = Replace(sName, ".", "+")
  sName = Replace(sName, ":", "+")
  
  Return sName
  
End

Private Sub GetLanguage() As String
  
  Dim sLang As String = System.Language
  Dim iPos As Integer
  
  iPos = InStr(sLang, ".")
  If iPos Then sLang = Left$(sLang, iPos - 1)
  Return sLang
  
End

Private Function GetLocalHelp(hSymbol As CSymbolInfo) As String
    Dim hForm As Object
    Dim hEdit As Editor
    Dim sClass, sResult, s As String
    Dim iLine As Integer
    
    sClass = Project.FindPath(hSymbol.Class)
    hForm = Project.LoadFile(sClass)
    Try hEdit = hForm.Editor
    If Not hEdit Then Return  
    'hEdit.Goto(hSymbol.HelpLineNumber, 0)
    If hSymbol.HelpLineNumber Then 
      iLine = hSymbol.HelpLineNumber
      sResult = "<b><u>Syntax</u></b><br>"
      sResult &= hSymbol.Name & hSymbol.GetSignature(0) & "<br><br>"
      Do
        s = LTrim(hEdit.Lines[iLine].Text)
        If Left(s, 2) <> "''" Then Break
        sResult &= Mid(s, 3) & "<br>"
        Inc iLine
        If iLine >= hEdit.Lines.Count Then Break
      Loop
      Return sResult
    Endif
End

