' Gambas class file

Public Sub Run() As Boolean
  
  Return Not Me.ShowModal()
  
End


Public Sub btnRemoteDebugging_Click()

  panRemoteDebugging.Enabled = btnRemoteDebugging.Value
  
End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub Form_Open()

  btnRemoteDebugging.Value = Project.Config["/Debug/Remote"]
  txtRemoteServer.Text = Project.Config["/Debug/RemoteServer"]
  txtRemoteUser.Text = Project.Config["/Debug/RemoteUser"]
  txtRemoteDirectory.Text = Project.Config["/Debug/RemoteDirectory"]
  
  Try txtRemotePassword.Text = Desktop.Passwords[Project.Name &/ "RemoteDebug"]
  
  choEnv.Environment = Project.Config["/Debug/RemoteEnvironment"]

End

Public Sub txtRemotePassword_Click()

  txtRemotePassword.Password = Not txtRemotePassword

End

Public Sub btnInsertEnv_Click()

  choEnv.Insert()

End

Public Sub btnRemoveEnv_Click()

  choEnv.RemoveCurrent()

End

Public Sub btnMoveUpEnv_Click()

  choEnv.MoveUpCurrent

End

Public Sub btnMoveDownEnv_Click()

  choEnv.MoveDownCurrent

End

Public Sub choEnv_Select()

  btnRemoveEnv.Enabled = choEnv.Current >= 0
  btnMoveDownEnv.Enabled = btnRemoveEnv.Enabled
  btnMoveUpEnv.Enabled = btnRemoveEnv.Enabled

End

Public Sub btnOK_Click()

  If btnRemoteDebugging.Value Then
    
    If Not Trim(txtRemoteServer.Text) Or If Not Trim(txtRemoteUser.Text) Or If Not Trim(txtRemoteDirectory.Text) Then
      Message.Warning("Remote server, user and folder are required.")
      Return
    Endif
    
  Endif

  Project.Config["/Debug/Remote"] = btnRemoteDebugging.Value
  Project.Config["/Debug/RemoteServer"] = txtRemoteServer.Text
  Project.Config["/Debug/RemoteUser"] = txtRemoteUser.Text
  Project.Config["/Debug/RemoteDirectory"] = txtRemoteDirectory.Text
  
  Try Desktop.Passwords[Project.Name &/ "RemoteDebug"] = txtRemotePassword.Text
  
  Project.Config["/Debug/RemoteEnvironment"] = choEnv.Environment
  
  Project.Config.Save()

  Me.Close(True)

End
