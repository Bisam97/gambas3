' Gambas class file

Private $bNoSelectButton As Boolean
Private $sMessage As String

Public Sub _new()
  
  btnDbusExplorer.Picture = Picture["img/32/dbus.png"].Stretch(Stock.GetSize("small"))

End

Public Sub ReadConfig()
  
  Project.SetSmallFont(Me)
  If Me.Parent Then Me.Parent.H = Stock.GetSize("small") + Desktop.Scale * 1.5

End

Public Sub UpdateView()
  
  btnConsole.Visible = Not IsNull(FOutput.Parent)
  OnVisibilityChange
  
End

Public Sub OnVisibilityChange()
  
  Dim hButton As ToolButton
  Dim hCtrl As Control
  
  If FMain.IsDebugVisible() Then
    SelectButton(FDebugInfo.GetCurrentTab())
  Else
    For Each hCtrl In Me.Children
      Try hButton = hCtrl
      If Not Error Then hButton.Value = False
    Next
  Endif
  
End

Public Sub btnDebug_Click()

  Dim hLast As ToolButton = Last
  Dim hButton As ToolButton 
  Dim I As Integer
  
  If hLast.Value Then
    
    FMain.ShowDebug(True)
    
    For I = 0 To Me.Children.Max
      Try hButton = Me.Children[I]
      If Error Then Continue
      If hButton <> hLast Then
        Object.Lock(hButton)
        hButton.Value = False
        Object.Unlock(hButton)
      Else
        FDebugInfo.SelectTab(I)
      Endif
    Next
    
  Else
    
    FMain.ShowDebug(False)
    
  Endif
  
End

Public Sub SelectButton(iTab As Integer)

  Dim hButton As ToolButton
  
  Try hButton = Me.Children[iTab]
  If Error Then Return
  
  If $bNoSelectButton Then Return

  $bNoSelectButton = True
  If Not hButton.Value Then hButton.Value = True
  $bNoSelectButton = False
  
End

Public Sub ShowButton(iTab As Integer, bShow As Boolean)
  
  Dim hButton As ToolButton
  
  Try hButton = Me.Children[iTab]
  If Error Then Return
  
  If hButton.Value And If Not bShow Then FMain.ShowDebug(False)
  hButton.Visible = bShow
  
End

Public Sub OnRefreshSources()
  
  btnTest.Visible = Project.HasTest()
  
End

Public Sub OnProjectActivate()
  
  If Not $sMessage Then SetMessage()
  
End

Public Sub UpdateStatus(bForce As Boolean)
  
  If bForce Or If Not $sMessage Then
    SetMessage()
  Endif
  
End


Public Sub dwgStatus_Draw()
  
  Dim W As Integer
  Dim X As Integer
  Dim DS As Integer
  
  If $sMessage Then
    DS = Desktop.Scale
    Paint.Font.Grade = -1
    'Paint.Font.Bold = True
    W = Paint.RichTextSize($sMessage).W + DS * 3
    X = Max(0, dwgStatus.W - W - DS \ 2)
    Paint.Rectangle(X, DS \ 4, W, dwgStatus.H - DS \ 2, DS * 2)
    Paint.Background = Color.SelectedBackground
    Paint.Fill
    Paint.Background = Color.SelectedForeground
    Paint.DrawRichText($sMessage, X, DS \ 4, W, dwgStatus.H - DS \ 2, Align.Center)
  Else
    Paint.Font = Application.Font
    FMain.PaintStatus()
  Endif
  
End

Public Sub SetMessage(Optional sText As String, bAdd As Boolean)
  
  If bAdd Then 
    $sMessage = Trim($sMessage) & " " & sText
  Else
    $sMessage = sText
  Endif
  
  dwgStatus.Refresh
  If $sMessage Then
    If Project.NoWait = 0 Then Wait
  Endif
  
  If Not $sMessage Then
    timMessage.Stop
  Else
    timMessage.Restart
  Endif
  
End

Public Sub timMessage_Timer()
  
  SetMessage()
  
End

Public Sub OnRefreshComponents()
  
  btnDbusExplorer.Visible = Project.Components.Exist("gb.dbus")
  
End
