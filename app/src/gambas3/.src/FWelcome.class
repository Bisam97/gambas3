' Gambas class file

Static Private $sPath As String

Private btnNew As CCoolButton
Private btnOpen As CCoolButton
Private btnRecent As CCoolButton
Private btnExample As CCoolButton
Private btnQuit As CCoolButton

Private $iRecent As Integer
Private $aExample As String[]
Private $bExample As Boolean
'Private $hPicture As Picture

Private Const LIST_NONE As Integer = 0
Private Const LIST_RECENT As Integer = 1
Private Const LIST_EXAMPLE As Integer = 2

Private Const POS_BUTTON As Integer = 0
Private HEIGHT_BUTTON As Integer = Desktop.Scale * 8

Private Const SCALE_DRAWING As Float = 1.5
Private $hLogo As Image
Private $hMadeIn As Image
Private $hDraw As Picture

Private $eAng As Float
Private $eIncAng As Float = 1.4

'PRIVATE $aExample as String[] = [ ("Automation"),("Basic"),("Database"),
Static Public Function Run() As String

  'DIM hForm AS Form

  $sPath = ""
  'hForm = NEW FWelcome
  FWelcome.ShowModal()
  Return $sPath

End

Public Sub Form_Open()

  Dim W As Integer
  Dim sFont As String
  Dim hImage As Image

  sFont = "Bold"
  W = panButton.ClientW + 4

  btnNew = New CCoolButton(panButton, 0, POS_BUTTON, W, HEIGHT_BUTTON, ("New project..."), "icon:/large/new", sFont) As "btnNew"
  btnNew.Foreground = Color.SelectedBackground
  btnOpen = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON, W, HEIGHT_BUTTON, ("Open project..."), "icon:/large/open", sFont) As "btnOpen"
  btnOpen.Foreground = Color.SelectedBackground
  btnRecent = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 2, W, HEIGHT_BUTTON, ("Recent projects"), "icon:/large/play", sFont) As "btnRecent"
  btnRecent.Foreground = Color.SelectedBackground
  btnExample = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 3, W, HEIGHT_BUTTON, ("Examples"), "icon:/large/help", sFont) As "btnExample"
  btnExample.Foreground = Color.SelectedBackground
  btnQuit = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 4, W, HEIGHT_BUTTON, ("Quit"), "icon:/large/quit", sFont) As "btnQuit"
  btnQuit.Foreground = Color.SelectedBackground

  ' Fill recent list

  chkSortRecent.Value = Settings["/FWelcome/SortRecent", False]
  FillRecent

  lblVersion.Text = Project.Version
  lblVersion.Move(lblGambas.X + lblGambas.Font.Width(lblGambas.Text) + 4, lblGambas.Y)

  If Project.GetRecentFiles().Count Then
    Toggle(LIST_RECENT)
  Else
    Toggle(LIST_EXAMPLE)
  Endif

  $hLogo = Image.Load("img/logo/logo.png")
  hImage = New Image($hLogo.W * SCALE_DRAWING, $hLogo.H * SCALE_DRAWING, Color.Transparent)
  $hLogo = $hLogo.Stretch(($hLogo.W * SCALE_DRAWING * 2) / 3, ($hLogo.H * SCALE_DRAWING * 2) / 3)
  hImage.Draw($hLogo, ($hLogo.W * SCALE_DRAWING) / 6 + 5 * SCALE_DRAWING, ($hLogo.H * SCALE_DRAWING) / 6)
  $hLogo = hImage

  $hMadeIn = Image.Load("img/logo/made-with-gambas.png").Stretch(hImage.W, hImage.H)

  Settings.Read(Me)
  
  timMadeIn_Timer

End


Public Sub cvwRecent_Click()

  $sPath = Project.Recent[Val(Last.Key)]
  Me.Close

End


' PUBLIC SUB timMessage_Timer()
' 
'   IF System.RightToLeft THEN
'     INC lblMessage.X
'     IF lblMessage.X >= panMessage.W THEN
'       lblMessage.X = - lblMessage.Width
'     ENDIF
'   ELSE
'     DEC lblMessage.X
'     IF lblMessage.X <= (- lblMessage.Width) THEN
'       lblMessage.X = panMessage.Width
'     ENDIF
'   ENDIF
' 
' END


Public Sub btnNew_Click()

  $sPath = FCreateProject.Run()
  If $sPath Then Me.Close

End


Public Sub btnOpen_Click()

  $sPath = FOpenProject.Run()
  If $sPath Then Me.Close

End


Public Sub btnRecent_Click()

  Toggle(LIST_RECENT)

End


Public Sub btnExample_Click()

  Toggle(LIST_EXAMPLE)

End



Public Sub btnQuit_Click()

  $sPath = ""
  Me.Close(True)

End

Private Sub Toggle(iState As Integer)

  'IF iState = $iRecent THEN
  '  $iRecent = LIST_NONE
  'ELSE
    $iRecent = iState
  'ENDIF

  'ME.Border = Window.Resizable

  If $iRecent Then
    'btnQuit.Move(8, 216 + cvwRecent.H + 8)
    'cvwRecent.Move(360 - cvwRecent.W, 216)
    panList.Raise
    svwRecent.Visible = $iRecent = LIST_RECENT
    svwExample.Visible = $iRecent = LIST_EXAMPLE
    panList.Visible = True
    If $iRecent = LIST_RECENT Then
      lblList.Text = ("Recent projects")
      panSort.Show
    Else
      lblList.Text = ("Examples")
      panSort.Hide
    Endif
  Else
    panList.Visible = False
  Endif

  If $iRecent = LIST_EXAMPLE Then 
    FillExample
  Endif
  
End


Public Sub btnOpenRecent_Click()

  $sPath = Last.Tag
  Me.Close

End

Public Sub Form_KeyPress()

  If Key.Code = Key.Esc Then
    btnQuit_Click
  Endif

End

Private Sub FillExample()

  Dim sLastDir As String
  Dim sDir As String
  Dim hButton As CCoolButton
  'DIM hLabel AS Label
  Dim hDrawingArea As DrawingArea
  Dim iInd As Integer
  Dim sPath As String
  Dim iHeight, X, Y As Integer
  Dim C As Integer
  Dim hImage As Image

  If $bExample Then Return

  Inc Application.Busy

  iHeight = Desktop.Scale * 4

  ' If Not $hPicture Then 
  '   hImage = New Image(16, iHeight)
  '   'hImage.Fill(Color.SelectedBackground)
  '   For Y = 0 To iHeight - 1
  '     C = Color.SelectedBackground
  '     C = Color.RGB(Color[C].Red, Color[C].Green, Color[C].Blue, Max(0, 320 * Y / iHeight - 64))
  '     For X = 0 To 15
  '       hImage[X, Y] = C
  '       'hImage[X, iHeight - Y - 1] = C
  '     Next 
  '   Next
  '   $hPicture = hImage.Picture
  ' Endif

  $aExample = Project.GetExamples()

  sLastDir = ""
  Y = 0

  svwExample.Arrangement = Arrange.None

  For iInd = 0 To $aExample.Count - 1
    sPath = $aExample[iInd]
    sDir = File.Dir(sPath)
    If sDir <> sLastDir Then
      sLastDir = sDir
      hDrawingArea = New DrawingArea(svwExample) As "dwgExample"
      'hLabel = NEW Label()
      With hDrawingArea
        .Move(0, Y, 64, iHeight)
        .Tag = Project.ExampleTitle[sDir]
        .Font = Font["Bold"]
        .Foreground = Color.SelectedBackground
        '.Background = Color.TextBackground
        Y = Y + .H
      End With
    Endif
    hButton = New CCoolButton(svwExample, 0, Y, svwExample.ClientW, 32, File.Name(sPath), Project.GetIcon(Project.EXAMPLES_DIR &/ sPath, 24)) As "btnOpenRecent"
    Y = Y + 32
    hButton.Tag = Project.EXAMPLES_DIR &/ sPath
  Next

  svwExample.Arrangement = Arrange.Vertical

  $bExample = True

Finally

  Dec Application.Busy

End


Public Sub Form_Close()

  Settings.Write(Me)
  Settings["/FWelcome/SortRecent"] = chkSortRecent.Value

End

' PUBLIC SUB dwgRound_Draw()
' 
'   Draw.FillColor = LAST.Foreground
'   Draw.LineStyle = Line.None
'   Draw.FillStyle = Fill.Solid
'   Draw.RoundRect(0, 0, LAST.W, LAST.H)
' 
' END

Public Sub dwgExample_Draw()
  
  Dim hDrawingArea As DrawingArea = Last
  
  With hDrawingArea
    Draw.Font = .Font
    'Draw.Line(0, .H / 2 - 1, .W - 1, .H / 2 - 1)
    'Draw.Transparent = FALSE
    Draw.Text(.Tag, 4, 0, .W - 16, .H - 4, Align.BottomNormal)
    Draw.Line(4, .H - 4, .W - 9, .H - 4)
  End With
  
End

' Public Sub dwgExample_Draw()
'   
'   Dim hDrawingArea As DrawingArea = Last
'   
'   With hDrawingArea
'     Draw.Font = .Font
' 
'     'Draw.Foreground = .Foreground
'     'Draw.Line(0, .H / 2 - 2, .W - 1, .H / 2 - 2)
'     'Draw.Picture($hPicture, 0, 0, .W, .H)
'  
'     'Draw.FillStyle = Fill.Solid
'     'Draw.LineStyle = Line.None
'     'Draw.FillColor = .Background
'     'Draw.Rect(8, 0, Draw.TextWidth(.Tag) + 8, .H)
'     
'     Draw.Text(.Tag, 8, 0, .W - 8, .H - 2, Align.Normal)
'   
'   End With
'   
' End


Private Sub FillRecent()

  Dim aList As String[]
  Dim hChild As Control
  Dim iInd As Integer
  Dim hButton As CCoolButton

  Inc Application.Busy
  
  aList = Project.GetRecentFiles(chkSortRecent.Value)
  
  svwRecent.Arrangement = Arrange.None
  
  For Each hChild In svwRecent.Children
    hChild.Delete
  Next

  For iInd = 0 To aList.Count - 1
    hButton = New CCoolButton(svwRecent, 0, iInd * 32, svwRecent.ClientW, 32, File.Name(aList[iInd]), Project.GetIcon(aList[iInd], 24)) As "btnOpenRecent"
    hButton.Tag = aList[iInd]
    hButton.ToolTip = File.Dir(aList[iInd])
  Next

  If aList.Count = 0 Then btnRecent.Enabled = False
  
  svwRecent.Arrangement = Arrange.Vertical
  
  Dec Application.Busy
  
End

Public Sub chkSortRecent_Click()

  FillRecent  

End

Public Sub lblWebsite_MouseDown()

  lblWebSite.Foreground = Color.LightBackground

End

Public Sub lblWebsite_MouseUp()
  
  lblWebSite.Foreground = Color.TextBackground
  If Mouse.X >= 0 And If Mouse.Y >= 0 And If Mouse.X < lblWebSite.W And If Mouse.Y < lblWebSite.H Then
    Wait
    Desktop.Open(lblWebsite.Text)
  Endif
  
End

Public Sub Form_Resize()

  panBackground.H = lblMessage.Y + lblMessage.H + Desktop.Scale * 2

End


Public Sub timMadeIn_Timer()

  Dim hImage As Image
  Dim hMadeIn As Image
  Dim SCALE_DRAWING As Integer = 4

  $eAng += $eIncAng
  If $eAng >= 360 Then $eAng -= 360
  
  'If Me.Minimized Then Return
  
  If $eIncAng < 0 Then
    hImage = $hLogo.Mirror(True, False)
  Else
    hImage = $hLogo.Copy()
  Endif
  hMadeIn = $hMadeIn.Rotate(Rad($eAng))
  hImage.Draw(hMadeIn, - (hMadeIn.W - hImage.W) / 2, - (hMadeIn.H - hImage.H) / 2)
  $hDraw = hImage.Picture
  dwgLogo.Refresh
  
End

Public Sub dwgLogo_MouseUp()

  $eIncAng = - $eIncAng

End

Public Sub dwgLogo_Draw()

  If $hDraw Then Draw.Picture($hDraw, 0, 0, Draw.W, Draw.W)

End

Public Sub lblWebSite_Enter()

  lblWebSite.Foreground = Color.LightBackground

End

Public Sub lblWebSite_Leave()

  lblWebSite.Foreground = Color.Default

End

Public Sub dwgLogo_Enter()

  timMadeIn.Start

End

Public Sub dwgLogo_Leave()

  timMadeIn.Stop

End
