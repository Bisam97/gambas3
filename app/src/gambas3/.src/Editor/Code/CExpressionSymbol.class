' Gambas class file

Private $sType As String
Private $hSymbol As CSymbolInfo

Static Private MAGIC_NUMBER As Integer = 314159265

Static Public Sub Get(sType As String, Optional hSymbol As CSymbolInfo) As Variant
  
  Dim vVal As Variant
  
  Select Case sType
    
    Case "b"
      vVal = True
    Case "c"
      vVal = CByte(MAGIC_NUMBER)
    Case "d"
      vVal = Now
    Case "f"
      vVal = Pi
    Case "i"
      vVal = MAGIC_NUMBER
    Case "l"
      vVal = CLong(MAGIC_NUMBER)
    Case "o"
      vVal = New CExpressionSymbol("o", Null)
    Case "p"
      vVal = CPointer(MAGIC_NUMBER)
    Case "h"
      vVal = CShort(MAGIC_NUMBER)
    Case "g"
      vVal = CSingle(MAGIC_NUMBER)
    Case "s"
      vVal = "Gambas"
    Case "v"
      vVal = New CExpressionSymbol("v", Null)
    Case Else
      vVal = New CExpressionSymbol(sType, hSymbol)
    
  End Select

  Return vVal
  
End


Public Sub _new(sType As String, hSymbol As CSymbolInfo)
  
  $sType = sType
  $hSymbol = hSymbol
  
End

Public Sub _get(...) As Variant

  Dim hSymbol As CSymbolInfo  
  
  If $sType = "o" Or If $sType = "v" Then Return Get("v")
  
  Try hSymbol = CComponent.GetClassSymbols($sType)["_get"]
  If hSymbol Then Return Get(hSymbol.Type, hSymbol)
  
End

Public Sub _put(vVal As Variant, ...)
  
End

Public Sub _property() As Boolean
  
  Dim hSymbol As CSymbolInfo  

  Try hSymbol = CComponent.GetClassSymbols($sType)[Param.Name]
  If hSymbol Then Return hSymbol.IsProperty()
  
End

Public Sub _unknown(...) As Variant
  
  Dim hSymbol As CSymbolInfo  

  Try hSymbol = CComponent.GetClassSymbols($sType)[Param.Name]
  If hSymbol Then Return Get(hSymbol.Type, hSymbol)
  
End

Public Sub __GetType() As String
  
  Return $sType
  
End
