' Gambas class file

Static Private $aFormat As String[]

Public Const MODE_NORMAL As Integer = 0
Public Const MODE_STRING As Integer = 1
Public Const MODE_STRING_SPLIT As Integer = 2
Public Const MODE_COMMENT As Integer = 3
Public Const MODE_CODE As Integer = 4

Private Enum PASTE_PRINT, PASTE_STRING_SPLIT, PASTE_CODE

Private $hEditor As TextEditor
Private $iMode As Integer

Public Sub Run(hEditor As TextEditor, Optional iMode As Integer = MODE_NORMAL) As Boolean

  Dim sFormat As String
  
  If Clipboard.Type = Clipboard.None Then Return True

  $hEditor = hEditor
  $iMode = iMode
  
  LoadFormats()
  If $aFormat.Count = 0 Then Return True
  
  If $aFormat.Count = 1 And If iMode Then
    sFormat = Clipboard.Paste($aFormat[0])
    Select Case iMode
      Case MODE_STRING
        $hEditor.Insert(Quote(sFormat))
      Case MODE_STRING_SPLIT
        PasteStringSplit(sFormat)
      Case MODE_COMMENT
        PasteComment(sFormat)
      Case MODE_CODE
        PasteCode(sFormat)
    End Select
    $hEditor.SetFocus
    Return
  Endif
  
  Return Not Me.ShowModal()

End

Public Sub btnOK_Click()

  Dim sFormat As String

  sFormat = $aFormat[lstFormat.Index]
  'TRY sFormat = Clipboard.Paste(sFormat & ";charset=UTF-8")
  'IF ERROR THEN sFormat = Clipboard.Paste(sFormat)
  sFormat = Clipboard.Paste(sFormat)
  sFormat = Replace(sFormat, String.Chr(160), " ")

  If radPasteNormal.Value Then 
    $hEditor.Insert(sFormat)
  Else If radPastePrint.Value Then 
    PastePrint(sFormat)
  Else If radPasteComment.Value Then 
    PasteComment(sFormat)
  Else If radPasteString.Value Then 
    $hEditor.Insert(Quote(sFormat))
  Else If radPasteStringSplit.Value Then 
    PasteStringSplit(sFormat)
  Else If radPasteCode.Value Then
    PasteCode(sFormat)
  Endif
  $hEditor.SetFocus

  Me.Close(True)
  
Catch 

  FMain.ShowErrorWith(("Unable to paste text."))

End

Public Sub btnCancel_Click()

  Me.Close

End

Private Sub LoadFormats()
  
  Dim aFormat As String[]
  Dim iInd, iPos As Integer
  
  aFormat = Clipboard.Formats
  
  For iInd = 0 To aFormat.Max
    iPos = InStr(aFormat[iInd], ";")
    If iPos Then aFormat[iInd] = Trim(Left$(aFormat[iInd], iPos - 1))
  Next

  iInd = 0
  Do
    If iInd = aFormat.Max Then Break
    If aFormat[iInd] = aFormat[iInd + 1] Then 
      aFormat.Remove(iInd)
    Else 
      Inc iInd
    Endif
  Loop

  $aFormat = aFormat
  
End


Public Sub Form_Open()

  Dim aFormat As String[]
  Dim iInd As Integer
  
  If LCase($hEditor.Highlight) <> "gambas" Then
    radPasteNormal.Value = True
    panType.Hide
  Endif
  
  aFormat = $aFormat.Copy()

  For iInd = 0 To aFormat.Max
    aFormat[iInd] = MMime.GetName(aFormat[iInd])
  Next

  lstFormat.List = aFormat
  lstFormat.Index = 0
  
  Select Case $iMode
    Case MODE_STRING
      radPasteString.Value = True
    Case MODE_STRING_SPLIT
      radPasteStringSplit.Value = True
    Case MODE_COMMENT   
      radPasteComment.Value = True
  End Select

End


Private Sub InsertIndented(sText As String, iAction As Integer)
  
  Dim sLine As String
  Dim sIndent As String
  Dim bNext As Boolean

  sLine = $hEditor.Current.Text
  sIndent = Left(sLine, Len(sLine) - Len(LTrim(sLine)))

  $hEditor.Begin
  For Each sText In Split(sText, "\n")
    On iAction GoSub DO_PRINT, DO_STRING_SPLIT, DO_CODE
    If bNext Then
      $hEditor.Insert(sIndent & sText & "\n")
    Else 
      $hEditor.Insert(sText & "\n")
      bNext = True
    Endif
  Next
  $hEditor.End
  
  Return
  
DO_PRINT:
  
  If sText Then
    sText = "PRINT " & Quote(sText)
  Else 
    sText = "PRINT"
  Endif 
  Return
  
DO_STRING_SPLIT:

  sText = Quote(sText)
  Return
  
DO_CODE:

  Return

End

Public Sub PastePrint(sText As String)
  
  InsertIndented(sText, PASTE_PRINT)
  
End

Public Sub PasteComment(sText As String)
  
  Dim sLine As String
  Dim sIndent As String
  
  If Not sText Then Return
  
  sText = Replace(sText, "\t", Space$(Project.TabSize))
  
  sLine = $hEditor.Current.Text
  sIndent = Left(sLine, Len(sLine) - Len(LTrim(sLine)))
  
  $hEditor.Begin
  $hEditor.Goto(0, $hEditor.Line)
  
  For Each sText In Split(sText, "\n")
    $hEditor.Insert(sIndent & "' " & sText & "\n")
  Next
  $hEditor.End
  
End

Public Sub PasteStringSplit(sText As String)
  
  InsertIndented(sText, PASTE_STRING_SPLIT)
  
End

Private Sub PasteCode(sText As String)

  InsertIndented(Project.ConvertForm(sText), PASTE_CODE)

End
