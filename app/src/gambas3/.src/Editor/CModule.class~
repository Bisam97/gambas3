' Gambas class file

Static Public All As Collection
Static Public Ext As String[]

Public Key As String
Public Name As String
Public NamePlural As String
Public NameFilter As String
Public TreeKey As String
Public Component As String
Public Used As Boolean
'Public HasFormEditor As Boolean

Static Public Sub _init()
  
  Dim sModule As String
  Dim hModule As CModule
  
  All = New Collection(gb.IgnoreCase)
  
  For Each sModule In ["module", "class"]
    Picture["img/16" &/ sModule & ".png"] = Project.MakeModuleIcon(sModule, 16).Picture
    Picture["img/32" &/ sModule & ".png"] = Project.MakeModuleIcon(sModule, 32).Picture
  Next
  
  Ext = ["module", "class"]
  
  hModule = New CModule("form", ("Form"), ("Forms"), ("Gambas forms"), "$F", True)
  hModule = New CModule("webpage", ("WebPage"), ("WebPages"), ("Gambas web pages"), "$A", False)
  hModule = New CModule("report", ("Report"), ("Reports"), ("Gambas reports"), "$R", False)
  
End

Static Public Sub Exit()
  
  All = Null
  
End


Static Public Sub _get(sKey As String) As CModule
  
  Return All[sKey]
  
End

Public Sub _new(sKey As String, sName As String, sNamePlural As String, sNameFilter As String, sTreeKey As String, bHasFormEditor As Boolean)
  
  Key = sKey
  Name = sName
  NamePlural = sNamePlural
  NameFilter = sNameFilter
  TreeKey = sTreeKey
  'HasFormEditor = bHasFormEditor
  All[sKey] = Me
  
  Picture["img/16" &/ sKey & ".png"] = Project.MakeModuleIcon(sKey, 16).Picture
  Picture["img/32" &/ sKey & ".png"] = Project.MakeModuleIcon(sKey, 32).Picture
  
  Ext.Add(sKey)

End

Static Public Sub InitFromProject()
  
  Dim hModule As CModule
  Dim sComp As String
  
  For Each hModule In All
    hModule.Component = ""
    hModule.Used = False
  Next
  
  For Each sComp In Project.Libraries
    With CComponent.All[sComp]
      If .Type Then 
        All[.Type].Component = sComp
        All[.Type].Used = True
      Endif
    End With
  Next
  
End

Static Public Sub FromTreeKey(sKey As String) As CModule
  
  Dim hModule As CModule
  
  For Each hModule In All
    If hModule.TreeKey = sKey Then Return hModule
  Next
  
End


Static Public Sub IsModulePath(sPath As String) As Boolean
  
  Dim sExt As String
  Dim hModule As CModule
  
  If File.Dir(sPath) <> Project.Dir Then Return
  sExt = File.Ext(sPath)
  
  If sExt = "class" Or If sExt = "module" Then Return True
  
  For Each hModule In All
    If hModule.Key = sExt Then Return True
  Next
  
End

