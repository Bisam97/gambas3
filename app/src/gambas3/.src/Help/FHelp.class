' Gambas class file



Private Sub ShowHelp(hEditor As Editor, iX As Integer, iy As Integer)
  'Dim iX, iY As Integer
  Dim hCont As Container
  
  If Not FDebugInfo.IsHelpVisible() Then
    Me.Background = Color.LightBackground
    Me.Ignore = True
    Me.Reparent(Null)
    Me.Height = Min(txtHelp.TextHeight + 15, Desktop.Height / 4)
    Me.Width = Desktop.Width / 3
    Me.Padding = 2
    

    'iX = Max(0, Min(iX, hEditor.W - Me.Width))
    Me.Move(hEditor.ScreenX + iX + 15, hEditor.ScreenY + iY + hEditor.LineHeight + 15)
    Me.Visible = True
    Form_Show
    hEditor.SetFocus
  Endif 
  
End


Public Sub ShowKeywordHelp(hEditor As Editor, sName As String, Optional sName2 As String, iX As Integer, iY As Integer) As Boolean
   Dim sPath As String

  txtHelp.RichText = "<b>" & sName & "</b>"
  txtHelp.RichText &= "<br><font color=green>Kind: </font>Gambas Keyword: "

  If sName2 Then
    If Not ShowKeywordHelp(sName2) Then Return
  Endif

  If Right(sName) = "$" Then sName = Left$(sName, -1)

  sPath = GetPath("help/lang" &/ LCase(sName)) & ".html"
  If Not Exist(sPath) Then Return True
  txtHelp.RichText &= GetHelp(sPath)
  ShowHelp(hEditor, iX, iY)
  
Catch
  Return True
  
End


Public Sub ShowSymbolHelp(hEditor As Editor, hSymbol As CSymbolInfo, iX As Integer, iY As Integer)
  Dim sLink As String
  Dim sName As String
  Dim sComp As String
  Dim hClass As Class
  Dim sClass As String
  sClass = hSymbol.Class
  txtHelp.RichText = IIf(hSymbol.IsStatic(), "STATIC", "") & " " & IIf(hSymbol.NotPublic, "PRIVATE", "PUBLIC") & " " & 
      Replace(hSymbol.GetDescription(), hSymbol.Name, "<b>" & hSymbol.Name & "</b>")
      txtHelp.RichText &= "<br><font color=green>Kind: </font><b>"
      Select Case LCase(hSymbol.Kind)
        Case "v"
          txtHelp.RichText &= "Variable"
        Case "p"
          txtHelp.RichText &= "Read/Write Property"
        Case "r"
          txtHelp.RichText &= "Read only Property"
        Case "m"
          txtHelp.RichText &= "Sub/Function"
        Case "c"
          txtHelp.RichText &= "Constant"
        Case "t"
          txtHelp.RichText &= "Form control"
          sClass = hSymbol.Type
        Case Else
          txtHelp.Text &= hSymbol.Kind

      End Select
      
      txtHelp.RichText &= "</b>"
      
  If hSymbol.LineNumber Then
    'Definition
    txtHelp.RichText &= Subst("<br>Def.: " & "<a href=\"file://&1.&2\">&1.&2</a> ", sClass, hSymbol.LineNumber)
    'Afficher l'aide Locale
    txtHelp.RichText &= GetLocalHelp(hSymbol)
  
  Else
  'Symbole externe
          'Afficher le formulaire
    If hSymbol.Kind = "t" Then txtHelp.Text &= Subst("<br>Def.: <a href=\"form://&1.&2\">&1.&2</a>", hSymbol.Class, hSymbol.name)

    'Filiation
    txtHelp.RichText &= Subst("<br><font color=blue>&1</font> > <Font color=red>&2</font>", CComponent.Classes[sClass].Component, sClass)

    sName = LCase(IIf(hSymbol.Kind = "t", sClass, hSymbol.Name))
    
    If Right(sName) = "$" Then sName = Left(sName, -1)
    If hSymbol.Component = "gb" And If hSymbol.Class = "." Then
      sLink = "help/lang"
    Else
      sLink = "help/comp"
      sComp = CComponent.Classes[sClass].Component
      If sComp = "gb.qt4" Or If sComp = "gb.gtk" Or If sComp = "gb.gui" Then sComp = "gb.qt"
      sLink &= "/" & sComp
      If hSymbol.Class <> "." Then sLink &= "/" & LCase(sClass)
    Endif
  
    sLink &/= sName
    
    If Exist(GetPath(FormatName(sLink)) & ".html")
      sLink = GetPath(FormatName(sLink)) & ".html"
    Else
      sLink = "http://gambasdoc.org" &/ sLink & "?v3&" & GetLanguage()
    Endif
      txtHelp.RichText &= GetHelp(sLink)
  Endif
  
  ShowHelp(hEditor, iX, iY)
  
End
  

Public Sub ShowClassHelp(hEditor As Editor, sComponent As String, sName As String, iX As Integer, iY As Integer)
  
  'Description de la Classe
  txtHelp.RichText = "<b>" & sName & "</b>"
  txtHelp.RichText &= "<br><font color=green>Kind: </font><b>Class</b>"
  txtHelp.RichText = Subst("<br><font color=blue>&1</font>", sComponent)

  ShowHelp(hEditor, iX, iY)
  
End



Private Function GetHelp(sFile As String) As String
  Dim aHelp As String[]

  If Exist(sFile) Then
    ahelp = Scan(File.Load(sFile), "*<div class=\"title\">*</body>*")
    Return "<hr>" & aHelp[1]
  Endif
  
  Catch
    Return "</br>Error"
  
End

Public Function ShowDatatypeHelp(hEditor As Editor, sName As String, iX As Integer, iY As Integer) As Boolean

  Dim sPath As String
  
  sPath = GetPath("help/lang/type" &/ LCase(sName)) & ".html"
  If Not Exist(sPath) Then Return True

  txtHelp.RichText = "<b>" & sName & "</b>"
  txtHelp.RichText &= "<br><font color=green>Kind: </font><b>DataType</b>"
  txtHelp.RichText &= GetHelp(GetPath("help/lang/type" &/ LCase(sName)) & ".html")
  
  ShowHelp(hEditor, iX, iY)

End

Private Sub GetPath(sPath As String) As String
  
  sPath = Replace(sPath, "/gb+gui/", "/gb+qt/")
  sPath = Replace(sPath, "/gb+gtk/", "/gb+qt/")
  Return System.Path &/ "share/gambas" & CStr(System.Version) &/ "help" &/ sPath
  
End

Private Sub FormatName(sName As String) As String

  sName = LCase(sName)
  sName = Replace(sName, "_", "+")
  sName = Replace(sName, "/.", "/_")
  sName = Replace(sName, "/+", "/_")
  sName = Replace(sName, ".", "+")
  sName = Replace(sName, ":", "+")
  
  Return sName
  
End

Private Sub GetLanguage() As String
  
  Dim sLang As String = System.Language
  Dim iPos As Integer
  
  iPos = InStr(sLang, ".")
  If iPos Then sLang = Left$(sLang, iPos - 1)
  Return sLang
  
End

Private Function GetLocalHelp(hSymbol As CSymbolInfo) As String
    Dim hForm As Object
    Dim hEdit As Editor
    Dim sClass, sResult, s As String
    Dim iLine As Integer
    
    sClass = Project.FindPath(hSymbol.Class)
    hForm = Project.LoadFile(sClass)
    Try hEdit = hForm.Editor
    If Not hEdit Then Return  

    iLine = hSymbol.HelpLineNumber
     
    If hSymbol.HelpLineNumber Then 
      sResult &= "<hr>"
      Do
        s = LTrim(hEdit.Lines[iLine].Text)
        If Left(s, 2) <> "''" Then Break
        sResult &= Mid(s, 3) & "<br>"
        Inc iLine
        If iLine >= hEdit.Lines.Count Then Break
      Loop
      
      Return sResult
    Endif
End

Public Sub Form_Show()

  If Not FDebugInfo.IsHelpVisible() Then tmrHide.Enabled = True

End

Public Sub tmrHide_Timer()

  If Not FDebugInfo.IsHelpVisible() Then Me.Hide
  tmrHide.Stop

End

Public Sub txtHelp_Enter()

  tmrHide.Enabled = False

End

Public Sub txtHelp_Leave()

  
  If Not FDebugInfo.IsHelpVisible() Then Me.Hide 'tmrHide.Enabled = True

End

Public Sub txtHelp_LostFocus()

  If Not FDebugInfo.IsHelpVisible() Then Me.Hide

End

Public Sub txtHelp_Link(Path As String)
  Dim aRes As String[]
  
  If Left(Path, 6) = "file:/" Then
    aRes = Scan(Path, "file://*.*")
    Project.SavePosition()
    Project.OpenFile(Project.FindPath(aRes[0]), CInt(aRes[1]))
  Endif
  If Left(Path, 6) = "form:/" Then
    aRes = Scan(Path, "form://*.*")
    Project.SavePosition()
    Project.OpenForm(aRes[0],, aRes[1])
  Endif

End
