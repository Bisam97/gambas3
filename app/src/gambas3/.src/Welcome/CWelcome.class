' Gambas class file

Static Private BACKGROUND_COLOR As Integer = &H3398C3& '&HFFAF5F&
Static Private TEXT_COLOR As Integer = &HDF6B00& ' &HDF6B00 '&HFFAF5F&

Private $hLogo As Image
Private $hText As Image

Private $hObs As Observer
Private $hTimer As Timer

Private $aSnowFlakes As New CSnowFlake[]
Private MAX_SNOW_FLAKES As Integer = 200

Private $aImage As Image[]

Public Sub _new(hDrawingArea As DrawingArea)
  
  Dim hSnowFlake As Image
  Dim I As Integer
  
  hDrawingArea.Background = BACKGROUND_COLOR
  
  $hObs = New Observer(hDrawingArea) As "dwgWelcome"
  $hTimer = New Timer As "SnowTimer"
  $hTimer.Delay = 50
  
  hSnowFlake = Image.Load("img/snowflake.png")
  $aImage = New Image[8]
  For I = 0 To $aImage.Max
    $aImage[I] = hSnowFlake.Stretch(I + 1, I + 1)
  Next
  
End

Static Public Sub PaintText(sText As String, X As Integer, Y As Integer, iColor As Integer) As Integer
  
  Dim XR As Integer
  Dim hShadow As Image
  Dim hSize As RectF
  Dim hFont As Font
  Dim iRadius As Integer
  
  hSize = Paint.TextSize(sText)
  iRadius = Ceil(hSize.H / 4)
  
  hShadow = New Image(hSize.W + iRadius * 2, hSize.H + iRadius * 2, Color.Rgb(0, 0, 0, 255))
  
  hFont = Paint.Font
  Paint.Begin(hShadow)
  Paint.Font = hFont
  Paint.Brush = Paint.Color(Color.Black)
  Paint.Text(sText, iRadius, iRadius, hSize.W, hSize.H)
  Paint.Fill
  Paint.End
  
  hShadow.Fuzzy(iRadius)

  Paint.DrawImage(hShadow, X - iRadius, Y - iRadius - Paint.Font.Ascent)

  Paint.Brush = Paint.Color(iColor)
  Paint.Text(sText, X, Y)
  XR = X + Paint.PathExtents.Width
  Paint.Fill

  Return XR
  
End


Public Sub dwgWelcome_Draw()

  Dim hSvgLogo As SvgImage
  Dim X, Y As Integer
  Dim hDrawingArea As DrawingArea = $hObs.Object
  Dim I As Integer
  Dim hSnowFlake As CSnowFlake
   
  If Not $hLogo Then 
    
    hSvgLogo = SvgImage.Load("img/logo/gambas.svg")
    $hLogo = New Image(hSvgLogo.Width, 256, Color.Transparent)
    Paint.Begin($hLogo)
    Paint.Scale(1.1, 1.1)
    hSvgLogo.Paint
    Paint.End
    
    $hText = New Image(hDrawingArea.Width, hDrawingArea.Height, Color.Transparent)
    Paint.Begin($hText)
    Paint.Font = Font["+10,Bold"]
    Y = Paint.Font.Ascent
    X = PaintText("Gambas " & Project.FullVersion, 8, Y, Color.White) 'TEXT_COLOR)
    'Paint.Font = Font["+12,Bold"]
    'PaintText(Project.FullVersionWithRevision, X + 8, Paint.Font.Ascent, Color.White) 'Color.SelectedForeground)
    
    Paint.Font = Font["+4,Bold"]
    Y += Paint.Font.Height
    PaintText("http://gambas.sourceforge.net", 12, Y, TEXT_COLOR) 'Color.LightForeground)
    
    Paint.Font = Font["Italic,Bold"]
    Y += Paint.Font.Height + 16
    PaintText(("This program is published under the GNU General Public License.") & "\n" & ("The Gambas font is published under the SIL Open Font License."), 12, Y, Color.SelectedForeground)
    Paint.End
    
    $hLogo.Brightness(-0.1)
    
  Endif

  Paint.DrawImage($hLogo, hDrawingArea.W - $hLogo.Width, -10 - Desktop.Scale)
  Paint.DrawImage($hText, Desktop.Scale, Desktop.Scale * 2)
  
  For I = 0 To $aSnowFlakes.Max
    hSnowFlake = $aSnowFlakes[I]
    With hSnowFlake
      Paint.DrawImage($aImage[.Size], CInt(.X), CInt(.Y))
    End With
  Next
  
  $hTimer.Start

End

Public Sub SnowTimer_Timer()
  
  Dim hDrawingArea As DrawingArea = $hObs.Object
  Dim hSnowFlake As CSnowFlake
  Dim I As Integer
  Dim H As Integer
  
  $hTimer.Stop
  If Not Object.IsValid(hDrawingArea) Then Return
  
  H = hDrawingArea.H + 8
  
  While I < $aSnowFlakes.Count
    hSnowFlake = $aSnowFlakes[I]
    hSnowFlake.X += hSnowFlake.DX
    hSnowFlake.Y += hSnowFlake.DY
    If hSnowFlake.Y >= H Then
      $aSnowFlakes.Remove(I)
    Else
      Inc I
    Endif
  Wend
  
  If $aSnowFlakes.Count < MAX_SNOW_FLAKES Then
    For I = 0 To Rand(3)
      hSnowFlake = New CSnowFlake
      hSnowFlake.X = Rand(0, hDrawingArea.W - 1)
      hSnowFlake.Size = CInt(Sqr(Rand($aImage.Max * $aImage.Max)))
      hSnowFlake.DY = 0.5 + hSnowFlake.Size / 3 + Rnd
      hSnowFlake.DX = (Rnd * 2 - 1) * hSnowFlake.DY
      $aSnowFlakes.Add(hSnowFlake)
    Next
  Endif
  
  hDrawingArea.Refresh
  
End


