' Gambas class file

'
' Copyright (C) Beno√Æt Minisini
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin St, Fifth Floor, 
' Boston, MA  02110-1301  USA
'

Static Private $sPath As String
Static Private $sLast As String
Static Private $bAnother As Boolean

Static Public InAnotherWindow As Boolean

Private $hProjectItem As ProjectItem
Private $iSort As Integer

Public Sub Run(Optional bAnother As Boolean) As String

  $bAnother = bAnother
  
  Inc Application.Busy
  If Me.ShowModal() Then 
    'Debug
    Return $sPath
  Endif
  'Debug

End

Public Sub _new()
  
  $hProjectItem = New ProjectItem(panProjectTitle)
  $hProjectItem.Highlight = False
  panProject.Reparent(dchProject.FileView.Parent)
  
End


Public Sub btnOK_Click()

  Dim sPath As String
  Dim hProjectItem As ProjectItem
  
  If tabProject.Index = 0 Then
    sPath = GetProjectPath(dchProject.Value)
  Else If tabProject.Index = 1 Then
    hProjectItem = lstRecent.Current
    Try sPath = hProjectItem.Path
  Else If tabProject.Index = 2 Then
    hProjectItem = lstExample.Current
    Try sPath = hProjectItem.Path
  Endif

  If Not sPath Then Return

  $sPath = sPath
  'Settings["/FOpenProject/Path"] = $sPath
  'tabProject.Index = 0
  lstRecent.Clear
  
  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End


Public Sub Form_Open()

  Dim hCtrl As RadioButton

  $sLast = ""
  Settings.Read(Me)
  Settings.Read(dchProject)
  Settings.Read(splProject)
  dchProject.ShowFile = True
  'dchProject.Value = Settings["/FOpenProject/Path"]
  dchProject_Change
  tabProject_Click

  InAnotherWindow = False
  btnOther.Visible = $bAnother
  
  $iSort = Settings["/FOpenProject/SortRecent", CRecentFile.SORT_BY_DATE]
  
  For Each hCtrl In [radSortByDate, radSortByName, radSortByPath]
    If hCtrl.Tag = $iSort Then hCtrl.Value = True
  Next
  
  Dec Application.Busy

End

Public Sub Form_Close()

  Settings["/FOpenProject/SortRecent"] = $iSort
  Settings.Write(Me)  
  Settings.Write(splProject)
  Settings.Write(dchProject)
  
End

Public Sub dchProject_Icon(Path As String)

  If Exist(Path &/ ".project") Then 
    dchProject.Icon = Project.GetIcon(Path)    
  Endif  

End

Private Sub GetProjectPath(sPath As String) As String
  
  Do
    If Exist(sPath &/ ".project") Then Return sPath
    sPath = File.Dir(sPath)
    If sPath = "/" Then Break
  Loop
  
Catch
  
End


Public Sub dchProject_Change()

  Dim sPath As String
  Dim hProjectTree As CProjectTree
  
  sPath = GetProjectPath(dchProject.Value)
  
  If Not sPath Then
    $sLast = ""
    panProject.Hide
    dchProject.FileView.Show
    Return 
  Endif
  
  If sPath = $sLast Then Return
  
  $sLast = sPath
  
  $hProjectItem.Path = sPath
  hProjectTree = New CProjectTree(tvwProject, sPath)
  
  panProject.Show
  dchProject.FileView.Hide
  
  splProject_Resize

End

' Public Sub fvwProject_Activate()
' 
'   Dim sPath As String = fvwProject.Dir &/ fvwProject.Current
'   Dim sProg As String
' 
'   If IsDir(sPath) Then
'     dchProject.Value = sPath
'     Return
'   Endif
'   
'   If sPath Like "*.tar.gz" Then
'     sProg = "tar xfz"
'   Else If sPath Like "*.tar.bz2" Then
'     sProg = "tar xfj"
'   Else
'     Return
'   Endif
'   
'   If Message.Question("<b>" & fvwProject.Current & "</b><p>" & ("Do you want to uncompress this archive?"), ("Uncompress"), ("Cancel")) = 2 Then Return
'   
'   Shell "cd " & Shell$(File.Dir(sPath)) & " && " & sProg & " " & Shell$(sPath) Wait
'   dchProject.Reload
' 
' End

' Public Sub fvwProject_Icon(Path As String)
'
'  If Exist(Path &/ ".project") Then 
'    fvwProject.Icon = Project.GetIcon(Path, 16)    
'  Endif    
'
' End

Private Sub FilterRecent()

  Dim sFilter As String = Trim(txtFilter.Text)
  Dim hCtrl, hLast As Control
  Dim hFirst, hProjectItem As ProjectItem
  
  lstRecent.Lock
  
  If Not sFilter Then
    sFilter = "*"
  Else
    sFilter = "*" & String.LCase(sFilter) & "*"
  Endif
  
  
  For Each hCtrl In lstRecent.Children
    
    If hCtrl Is ProjectItem Then
      hProjectItem = hCtrl
      hProjectItem.Visible = hProjectItem.Match(sFilter)
      If hProjectItem.Visible Then 
        If Not hFirst Then hFirst = hProjectItem
      Endif
    Endif
    
  Next
  
  For Each hCtrl In lstRecent.Children
    
    If hCtrl Is DrawingArea Then
      If hLast Then hLast.Hide
      hLast = hCtrl
    Else If hCtrl Is ProjectItem And If hCtrl.Visible Then
      If hLast Then hLast.Show
      hLast = Null
    Endif
    
  Next
  
  If hLast Then hLast.Hide
  
  lstRecent.Select(hFirst)
  lstRecent.Unlock
  
End

Private Sub FillRecent()
  
  Dim hProjectItem As ProjectItem
  Dim hFirst As ProjectItem
  Dim aRecent As CRecentFile[]
  Dim hRecent As CRecentFile
  'Dim bHighlight As Boolean
  Dim sTitle As String
  Dim sLastTitle As String
  Dim Y As Integer
  Dim hDrawingArea As DrawingArea
  
  If lstRecent.Count And If Not CRecentFile.OutOfDate Then Return

  Inc Application.Busy

  'panRecent.Hide
  lstRecent.Lock
  lstRecent.Clear

  aRecent = CRecentFile.Get($iSort)

  For Each hRecent In aRecent
    
    sTitle = hRecent.GetTitle($iSort)
    
    If sTitle <> sLastTitle Then
      hDrawingArea = New DrawingArea(lstRecent) As "dwgExample"
      With hDrawingArea
        .Enabled = False
        .Tag = sTitle 
        .Font = Font["Bold"]
        .H = .Font.Height + If(sLastTitle, 16, 8)
        .Foreground = Color.SelectedBackground
        Y += .H
      End With
      sLastTitle = sTitle
    Endif
    
    hProjectItem = New ProjectItem(lstRecent) As "ProjectItem"
    hProjectItem.ShowAuthors = True
    hProjectItem.Y = Y
    Y += hProjectItem.H
    'If bHighlight Then hProjectItem.Background = Color.LightBackground
    'bHighlight = Not bHighlight
    If Not hFirst Then hFirst = hProjectItem
    hProjectItem.Path = hRecent.Path
    
  Next
  
  If hFirst Then lstRecent.Select(hFirst)
  
  ' Workaround a scrollview bug that does not show the scrollbars.
  lstRecent.Unlock 
  'panRecent.Show
  
  Dec Application.Busy
  
End

Public Sub tabProject_Click()

  If tabProject.Index = 1 Then 
    FillRecent
    FilterRecent
    txtFilter.SetFocus
  Else If tabProject.Index = 2 Then 
    FillExample
  Endif  

End

Public Sub lstRecent_Activate()
  
  btnOK.Value = True
  
End

Private Sub FillExample()

  Dim sExample As String
  Dim sDir As String
  Dim sLastDir As String
  Dim hDrawingArea As DrawingArea
  Dim hProjectItem As ProjectItem
  'Dim bHighlight As Boolean
  
  If lstExample.Children.Count Then Return

  Inc Application.Busy
  lstExample.Lock

  For Each sExample In Project.GetExamples()
  
    sDir = File.Dir(sExample)
    If sDir <> sLastDir Then
      hDrawingArea = New DrawingArea(lstExample) As "dwgExample"
      With hDrawingArea
        .Enabled = False
        .Tag = Project.ExampleTitle[sDir]
        .Font = Font["Bold"]
        .H = .Font.Height + If(sLastDir, 16, 8)
        .Foreground = Color.SelectedBackground
      End With
      'bHighlight = False
      sLastDir = sDir
    Endif
    
    hProjectItem = New ProjectItem(lstExample) As "ProjectItem"
    'If bHighlight Then hProjectItem.Background = Color.LightBackground
    'bHighlight = Not bHighlight
    hProjectItem.ShowAuthors = True
    hProjectItem.Path = Project.EXAMPLES_DIR &/ sExample
  
  Next

  'lstExample.Show ' Workaround a scrollview bug that does not show the scrollbars.
  lstExample.Unlock

  Dec Application.Busy

End

Public Sub dwgExample_Draw()
  
  Dim hDrawingArea As DrawingArea = Last
  
  With hDrawingArea
    Draw.Font = .Font
    Draw.Foreground = .Foreground
    'Draw.Line(0, .H / 2 - 1, .W - 1, .H / 2 - 1)
    'Draw.Transparent = FALSE
    Draw.Text(.Tag, 4, 0, .W - 16, .H - 4, Align.BottomNormal)
    Draw.Line(4, .H - 4, .W - 9, .H - 4)
  End With
  
End

Public Sub dchProject_Activate()

  btnOK.Value = True  

End

Public Sub OnUpdateRecent()
  
  lstRecent.Clear
  If tabProject.Index = 1 Then FillRecent
  
End


Public Sub lstExample_Activate()

  btnOK.Value = True

End

Public Sub splProject_Resize()

  panProjectTitle.H = $hProjectItem.IdealHeight + panProjectTitle.Padding * 2

End

Public Sub btnOther_Click()

  InAnotherWindow = True
  btnOK_Click
  

End

Public Sub radSort_Click()

  $iSort = Last.Tag
  
  If tabProject.Index = 1 Then
    lstRecent.Clear
    FillRecent
    FilterRecent
    txtFilter.SetFocus
  Endif

End

Public Sub txtFilter_Click()

  txtFilter.Text = ""

End

Public Sub txtFilter_Change()

  FilterRecent

End


Public Sub txtFilter_KeyPress()

  If Key.Code = Key.Down Then
    lstRecent.ScrollView_KeyPress
    Stop Event
  Else If Key.Code = Key.Up Then
    lstRecent.ScrollView_KeyPress
    Stop Event
  Else If Key.Code = Key.Return And If Key.Shift Then
    btnOther.Value = True
  Endif

End

Public Sub ProjectItem_Click()
  
  Dim hListContainer As ListContainer = Last.Parent.Parent
  
  hListContainer.Select(Last)
  
End
