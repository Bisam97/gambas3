' Gambas class file

Static Private $sPath As String
Static Private $bAnother As Boolean

Static Public InAnotherWindow As Boolean

Private $iSort As Integer
Private $bControl As Boolean
Private $hRecent As CProjectList
Private $hExample As CProjectList

Public Sub Run(Optional bAnother As Boolean) As String

  $bAnother = bAnother
  $sPath = ""
  
  Inc Application.Busy
  If Me.ShowModal() Then 
    'Debug
    Return $sPath
  Endif
  'Debug

End

Public Sub _new()
  
  $hRecent = New CProjectList(lstRecent, txtFilter, CProjectList.TYPE_RECENT) As "ProjectItem"
  $hExample = New CProjectList(lstExample, txtFilterExample, CProjectList.TYPE_EXAMPLE) As "ProjectItem"
  
End


Public Sub btnOK_Click()

  If tabProject.Text = ("Open") Then
    $sPath = pchProject.Path
  Else If tabProject.Text = ("Recent") Then
    If Not $sPath Then $sPath = $hRecent.GetFirst()
  Else If tabProject.Text = ("Examples") Then
    If Not $sPath Then $sPath = $hExample.GetFirst()
  Endif

  If Not $sPath Then Return
  lstRecent.Children.Clear
  
  InAnotherWindow = $bControl
  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End


Public Sub Form_Open()

  Dim hCtrl As RadioButton

  '$sLast = ""
  Settings.Read(Me)
  Settings.Read(pchProject)
  ' Settings.Read(dchProject)
  ' Settings.Read(splProject)
  ' dchProject.ShowFile = True
  ' 'dchProject.Value = Settings["/FOpenProject/Path"]
  ' dchProject_Change
  tabProject_Click

  InAnotherWindow = False
  lblAnother.Visible = $bAnother
  
  $iSort = Settings["/FOpenProject/SortRecent", CRecentFile.SORT_BY_DATE]
  
  For Each hCtrl In [radSortByDate, radSortByName, radSortByPath]
    If hCtrl.Tag = $iSort Then hCtrl.Value = True
  Next
  
  Dec Application.Busy

End

Public Sub Form_Close()

  Settings["/FOpenProject/SortRecent"] = $iSort
  Settings.Write(Me)  
  ' Settings.Write(splProject)
  ' Settings.Write(dchProject)
  Settings.Write(pchProject)
  
End

' Public Sub dchProject_Icon(Path As String)
' 
'   If Exist(Path &/ ".project") Then 
'     dchProject.Icon = Project.GetIcon(Path)    
'   Endif  
' 
' End
' 
' Private Sub GetProjectPath(sPath As String) As String
'   
'   Do
'     If Exist(sPath &/ ".project") Then Return sPath
'     sPath = File.Dir(sPath)
'     If sPath = "/" Then Break
'   Loop
'   
' Catch
'   
' End
' 
' 
' Public Sub dchProject_Change()
' 
'   Dim sPath As String
'   Dim hProjectTree As CProjectTree
'   
'   sPath = GetProjectPath(dchProject.Value)
'   
'   If Not sPath Then
'     $sLast = ""
'     panProject.Hide
'     dchProject.FileView.Show
'     Return 
'   Endif
'   
'   If sPath = $sLast Then Return
'   
'   $sLast = sPath
'   
'   $hProjectItem.Path = sPath
'   hProjectTree = New CProjectTree(tvwProject, sPath)
'   
'   panProject.Show
'   dchProject.FileView.Hide
'   
'   splProject_Resize
' 
' End

' Public Sub fvwProject_Activate()
' 
'   Dim sPath As String = fvwProject.Dir &/ fvwProject.Current
'   Dim sProg As String
' 
'   If IsDir(sPath) Then
'     dchProject.Value = sPath
'     Return
'   Endif
'   
'   If sPath Like "*.tar.gz" Then
'     sProg = "tar xfz"
'   Else If sPath Like "*.tar.bz2" Then
'     sProg = "tar xfj"
'   Else
'     Return
'   Endif
'   
'   If Message.Question("<b>" & fvwProject.Current & "</b><p>" & ("Do you want to uncompress this archive?"), ("Uncompress"), ("Cancel")) = 2 Then Return
'   
'   Shell "cd " & Shell$(File.Dir(sPath)) & " && " & sProg & " " & Shell$(sPath) Wait
'   dchProject.Reload
' 
' End

' Public Sub fvwProject_Icon(Path As String)
'
'  If Exist(Path &/ ".project") Then 
'    fvwProject.Icon = Project.GetIcon(Path, 16)    
'  Endif    
'
' End

Public Sub tabProject_Click()

  If tabProject.Text = ("Recent") Then 
    $hRecent.Fill
    $hRecent.ApplyFilter(txtFilter.Text)
    txtFilter.SetFocus
  Else If tabProject.Text = ("Examples") Then 
    $hExample.Fill
    $hExample.ApplyFilter(txtFilterExample.Text)
    txtFilterExample.SetFocus
  Endif  

End

Public Sub lstRecent_Activate()
  
  btnOK.Value = True
  
End

Public Sub OnUpdateRecent()
  
  lstRecent.Clear
  If tabProject.Text = ("Recent") Then $hRecent.Fill
  
End


Public Sub lstExample_Activate()

  btnOK.Value = True

End

' Public Sub splProject_Resize()
' 
'   panProjectTitle.H = $hProjectItem.IdealHeight + panProjectTitle.Padding * 2
' 
' End

Public Sub btnOther_Click()

  InAnotherWindow = True
  btnOK_Click
  

End

Public Sub radSort_Click()

  $iSort = Last.Tag
  
  If tabProject.Text = ("Recent") Then
    $hRecent.SetSort(Last.Tag)
    $hRecent.ApplyFilter(txtFilter.Text)
    txtFilter.SetFocus
  Endif

End

Public Sub ProjectItem_Click(sPath As String)
  
  InAnotherWindow = Mouse.Control
  $sPath = sPath
  btnOK.Value = True
  
End

Public Sub pchProject_Activate()

  btnOK.Value = True  

End

Public Sub Form_KeyPress()

  If $bAnother And If Key.Code = Key.ControlKey Then
    $bControl = True
    btnOK.Text = ("Open in another window")
    btnOK.AutoResize = True
  Endif

End

Public Sub Form_KeyRelease()

  If $bAnother And If Key.Code = Key.ControlKey Then
    $bControl = False
    btnOK.Text = ("Open")
    btnOK.AutoResize = False
    btnOK.W = btnCancel.W
  Endif

End

Public Sub txtFilter_KeyPress()

  If Key.Control Then
    If Key.Code = Key.Enter Or If Key.Code = Key.Return Then
      btnOK.Value = True
    Endif
  Endif

End

Public Sub txtFilterExample_KeyPress()

  If Key.Control Then
    If Key.Code = Key.Enter Or If Key.Code = Key.Return Then
      btnOK.Value = True
    Endif
  Endif

End
