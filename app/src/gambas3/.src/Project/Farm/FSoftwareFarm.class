' Gambas class file

Private $bNoRefresh As Boolean
Private $SY As Integer
Private $hSoft As CSoftware
Private $sShortDesc As String

Public Sub Run()
  
  Me.ShowModal
  
End

Public Sub Form_Open()

  Settings.Read(Me)

  ' If Not $hLogo Then
  '   $hLogo = New Image(256, 256, Color.Transparent)
  '   Paint.Begin($hLogo)
  '   Paint.Ellipse(16, 16, 224, 224)
  '   Paint.LineWidth = 8
  '   Paint.Background = &HD96800&
  '   Paint.Stroke
  '   Paint.End
  '   $hLogo = $hLogo.Fuzzy(16)
  '   
  '   Paint.Begin($hLogo)
  '   Paint.Ellipse(16, 16, 224, 224)
  '   Paint.Save
  '   Paint.Clip(True)
  '   Paint.Background = Color.White
  '   Paint.Fill(True)
  '   Paint.ZoomImage(Image.Load("img/logo/logo-32-head.png"), 8, 16, 16, &HD96800&)
  '   Paint.Restore
  '   Paint.LineWidth = 8
  '   Paint.Background = &HD96800&
  '   Paint.Stroke
  '   Paint.End
  '   
  ' Endif

  $bNoRefresh = True
  cmbFarm.List = FarmRequest.GetFarms()
  cmbFarm.Text = FarmIdentity.LastFarm
  cmbSort.Index = 0
  $bNoRefresh = False
  Reload

End

' Public Sub Form_Arrange()
' 
'   dwgBackground.Move(svwFarm.X, svwFarm.Y, svwFarm.W, svwFarm.H)
'   dwgBackground.Lower
' 
' End
' 
' Public Sub dwgBackground_Draw()
' 
'   Paint.DrawImage($hLogo, 16, 16, 256, 256)
'   Paint.Font.Size = 40
'   Paint.Font.Bold = True
'   Paint.Background = Color.Gray
'   Paint.DrawTextShadow("Gambas\nSoftware\nFarm", 292, 16, Me.W, 256, Align.Left)
'   Paint.Text("Gambas\nSoftware\nFarm", 292, 16, Me.W, 256, Align.Left)
'   Paint.Fill
' 
' End

Public Sub cmbSort_Click()

  Reload

End

Public Sub cmbFarm_Click()

  tagFarm.SetFarm(cmbFarm.Text)
  ReloadFarm

End

Public Sub Reload()

  Dim hReq As FarmRequest
  
  If $bNoRefresh Then Return
  
  timLoad.Stop
  
  If cmbSort.Index = 3 Then Return
  
  $SY = svwFarm.ScrollY
  
  FarmRequestManager.Clear
  svwFarm.Children.Clear
  
  hReq = New FarmRequest(cmbFarm.Text) As "Request"
  hReq.SearchSoftware(["date", "download", "vote"][cmbSort.Index], txtFilter.Text, tagFarm.GetTags())
  
End

Public Sub Request_Finished()
  
  Dim hReq As FarmRequest = Last
  Dim sId As String
  Dim hSoftwareBox As SoftwareBox
  
  If hReq.HasFailed() Then
    If hReq.ErrorText Then Message.Error(hReq.ErrorText)
    Return
  Endif
  
  For Each sId In Split(hReq.Result["Result"])
    hSoftwareBox = New SoftwareBox(svwFarm, CInt(sId), hReq.Farm) As "SoftwareBox"
    hSoftwareBox.ResizeScaled(48, 18)
  Next
  
  If $SY Then 
    Wait
    svwFarm.ScrollY = $SY
  Endif
  
End

Public Sub Form_Close()

  FarmRequestManager.Clear
  FarmIdentity.LastFarm = cmbFarm.Text
  Settings.Write(Me)

End

Public Sub txtFilter_Click()

  txtFilter.Clear

End

Public Sub txtFilter_Change()

  timLoad.Stop
  timLoad.Start

End

Public Sub timLoad_Timer()

  Reload

End

Public Sub tagFarm_Change()

  timLoad.Stop
  timLoad.Start

End

Public Sub dwgTitle_Draw()

  Dim DS As Integer = Desktop.Scale
  
  Paint.Font.Grade = 8
  Paint.Font.Bold = True
  Paint.Background = Color.Black
  Paint.DrawTextShadow(("Gambas Software Farm"), DS, 0, DS * 32, Paint.H, Align.Left, 8)
  Paint.Background = Color.White
  Paint.DrawText(("Gambas Software Farm"), DS, 0, DS * 32, Paint.H, Align.Left)
  
End

Private Sub ReloadFarm()

  Dim hIdentity As FarmIdentity

  CSoftware.ClearCache(cmbFarm.Text)
  hIdentity = New FarmIdentity(cmbFarm.Text)
  hIdentity.Init(lblIdentity, picIdentity)
  Reload

End

Public Sub btnLogin_Click()

  FFarmConfig.Run(cmbFarm.text)

  $bNoRefresh = True
  cmbFarm.List = FarmRequest.GetFarms()
  $bNoRefresh = False
  ReloadFarm

End

Private Sub UpdateSoftware()

  Dim sText As String
  Dim aText As String[]
  Dim sTag As String
  Dim hTag As Label
  
  If Not $hSoft Then Return

  If $hSoft.State = CSoftware.STATE_ERROR Then Return

  With $hSoft
  
    lblName.Text = .Name & " " & .Version
  
    panURL.Visible = Not IsNull(.URL)
    urlWebSite.Link = .URL
  
    If .YourVote < 0 Then
      btnVote.Text = ("Vote")
      btnVote.Enabled = False
    Else
      btnVote.Enabled = True
      If .YourVote = 1 Then
        btnVote.Text = ("Cancel my vote")
      Else
        btnVote.Text = ("Vote")
      Endif
    Endif
  
    If .IsInstalled() Then
      btnInstall.Text = ("Uninstall")
      btnInstall.Picture = Picture["icon:/large/delete"]
    Else If .CanUpgrade() Then
      btnInstall.Text = ("Upgrade")
      btnInstall.Picture = Picture["icon:/large/up"]
    Else
      btnInstall.Text = ("Install")
      btnInstall.Picture = Picture["icon:/large/apply"]
    Endif
  
    sText = Trim(.Description)
  
    If Not sText Then
      
      $sShortDesc = ""
      txtDescription.Hide
      
    Else
    
      aText = Split(sText, "\n")
      
      If aText.Count = 1 Or If Trim(aText[1]) = "" Then
        $sShortDesc = aText[0]
        aText.Remove(0)
        sText = Trim(aText.Join("\n"))
      Endif
      
      txtDescription.Text = Replace(Html(sText), "\n", "<br>")
      txtDescription.Visible = Not IsNull(sText)
      
    Endif
    
    dwgShortDesc.Refresh
    
    Try picIcon.Picture = .Icon.Picture
  
    panTags.Children.Clear
    
    If .Tags Then
      For Each sTag In .Tags
        hTag = New Label(panTags)
        hTag.Text = " " & sTag & " "
        hTag.Padding = 4
        hTag.Background = &H3398C3&
        hTag.Foreground = Color.White
        hTag.Font.Bold = True
        hTag.AutoResize = True
      Next
      
      lblTags.Visible = .Tags.Count > 0
    Endif
    
    imvScreenshot.Image = Null
    If .DownloadScreenshot() Then
      Software_Screenshot
    Else
      spnScreenshot.Show
      spnScreenshot.Raise
    Endif
  
  End With
  
  dwgStat.Refresh
  
End

Private Sub ToggleSoftwarePanel()

  Dim fTime As Float
  Dim hObs As Observer
  
  If panSoftware.Visible Then
    
    panFarm.Ignore = True
    panSoftware.Ignore = True
    panFarm.Show
    
    fTime = Timer
    While panSoftware.X < Me.ClientW
      panSoftware.X = Min(Me.ClientW, Me.ClientW * (Timer - fTime) * 8)
      panFarm.X = panSoftware.X - panFarm.W
      Wait
    Wend
    
    panSoftware.Hide
    panFarm.Ignore = False
    panSoftware.Ignore = False
    
    $hSoft = Null
    imvScreenshot.Image = Null
    FarmRequestManager.Clear
    
  Else
    
    panFarm.Ignore = True
    panSoftware.Ignore = True
    panSoftware.Move(panFarm.W, panFarm.Y, panFarm.W, panFarm.H)
    panSoftware.Show
    panSoftware.Raise
    
    fTime = Timer
    While panSoftware.X > 0
      panSoftware.X = Max(0, Me.ClientW * (1 - (Timer - fTime) * 8))
      panFarm.X = panSoftware.X - panFarm.W
      Wait
    Wend
    
    panFarm.Hide
    panFarm.Ignore = False
    panSoftware.Ignore = False
    
    If Not $hSoft.Observed Then 
      hObs = New Observer($hSoft) As "Software"
      $hSoft.Observed = True
    Endif
    
    UpdateSoftware
    
    panSoftware.Show
    
  Endif

End

Public Sub Software_Screenshot()
  
  spnScreenshot.Hide
  Try imvScreenshot.Image = $hSoft.Screenshot
  imvScreenshot.ZoomFit
  
End


Public Sub SoftwareBox_Click()
  
  Dim hSoft As CSoftware = Last.Software
  If hSoft.State <> CSoftware.STATE_READY Then Return
  
  $hSoft = hSoft
  ToggleSoftwarePanel
  
End

Public Sub btnGoBack_Click()

  ToggleSoftwarePanel

End

Public Sub panTitle_Arrange()

  picIcon.Resize(picIcon.Parent.H, picIcon.Parent.H)
  dwgStat.Move(dwgStat.Parent.W - dwgStat.W, 0)
  
End

' Public Sub dwgScreenshot_Draw()
' 
'   Dim fScale, W, H As Float
'   
'   If $hScreenshot Then 
'     fScale = Max($hScreenshot.W / dwgScreenshot.W, $hScreenshot.H / dwgScreenshot.H)
'     W = $hScreenshot.W / fScale
'     H = $hScreenshot.H / fScale
'     Paint.DrawImage($hScreenshot, (dwgScreenshot.W - W) / 2, (dwgScreenshot.H - H) / 2, W, H)
'   Endif
' 
' End

Public Sub panDesc_Arrange()

  spnScreenshot.Move(imvScreenshot.X + imvScreenshot.W \ 2 - 16, imvScreenshot.Y + imvScreenshot.H \ 2 - 16, 32, 32)

End

Public Sub Form_Resize()

  If panSoftware.Visible Then imvScreenshot.ZoomFit

End

Public Sub dwgStat_Draw()
  
  If Not $hSoft Then Return
  SoftwareBox.PaintStat($hSoft, True)
  
End

Public Sub btnInstall_Click()

  Dim sName As String = $hSoft.GetTitle()
  Dim sErr As String
  
  If $hSoft.IsInstalled() Then
    If $hSoft.CanUpgrade() Then
      If Message.Question(Subst(("Do you really want to upgrade <b>&1</b>?"), sName), ("Upgrade"), ("Cancel")) = 1 Then
        sErr = $hSoft.Install() 
        If sErr Then
          Message.Error(Subst(("Unable to upgrade <b>&1<b>:"), sName) & "\n\n" & sErr)
        Else
          Message(Subst("<b>&1</b> has been successfully upgraded.", sName))
          Goto REFRESH
        Endif
      Endif
    Else
      If Message.Question(Subst(("Do you really want to uninstall <b>&1</b>?"), sName), ("Uninstall"), ("Cancel")) = 1 Then
        sErr = $hSoft.Uninstall() 
        If sErr Then
          Message.Error(Subst(("Unable to remove <b>&1<b>:"), sName) & "\n\n" & sErr)
        Else
          Message(Subst("<b>&1</b> has been successfully removed.", sName))
          Goto REFRESH
        Endif
      Endif
    Endif
  Else
    If Message.Question(Subst(("Do you really want to install <b>&1</b>?"), sName), ("Install"), ("Cancel")) = 1 Then
      sErr = $hSoft.Install() 
      If sErr Then
        Message.Error(Subst(("Unable to install <b>&1<b>:"), sName) & "\n\n" & sErr)
      Else
        Message(Subst("<b>&1</b> has been successfully installed.", sName))
        Goto REFRESH
      Endif
    Endif
  Endif

  Return
  
REFRESH:

  Reload

End

Public Sub btnVote_Click()

  Dim sErr As String

  sErr = $hSoft.ToggleVote() 
  If sErr Then
    Message.Error(("Unable to modify your vote.") & "\n\n" & sErr)
  Else
    Reload
  Endif

End

Public Sub Software_Change()
  
  UpdateSoftware
  
End

Public Sub dwgShortDesc_Draw()

  Paint.DrawText(Paint.TrimText($sShortDesc, Paint.W), 0, 0, Paint.W, Paint.H, Align.Left)

End
