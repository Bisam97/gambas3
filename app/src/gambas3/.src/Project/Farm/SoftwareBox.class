' Gambas class file

Inherits UserControl

Event Ready
'Event Install
'Event Vote
Event Click

Static Private $hPicVote As Picture
Static Private $hPicVoteOff As Picture
Static Private $hPicInstall As Picture
Static Private $hPicUpgrade As Picture
Static Private $hPicInstallOff As Picture

Property Read Id As Integer
Property Read Software As CSoftware

Private $hDrawingArea As DrawingArea
Private $hSoft As CSoftware
Private $hSpinner As Spinner
Private panAction As Panel
Private btnVote As ToolButton
Private btnInstall As ToolButton
Private $sFarm As String
Private $iId As Integer
Private $bHighlight As Boolean



Public Sub _new(iId As Integer, sFarm As String) ', sLogin As String, sPassword As String)
  
  If Not $hPicVote Then
    $hPicVote = Picture["icon:/22/bookmark"]
    $hPicVoteOff = $hPicVote.Image.Desaturate().Picture
    $hPicInstall = Picture["icon:/22/apply"]
    $hPicInstallOff = $hPicInstall.Image.Desaturate().Picture
    $hPicUpgrade = Picture["icon:/22/up"]
  Endif
  
  Me.Foreground = Color.TextForeground
  
  $sFarm = sFarm
  $iId = iId
  
  $hDrawingArea = New DrawingArea(Me) As "DrawingArea"
  $hDrawingArea.Mouse = Mouse.Pointing
  
  $hSpinner = New Spinner($hDrawingArea)
  $hSpinner.Hide
  
  panAction = New Panel($hDrawingArea)
  panAction.Spacing = True
  panAction.Invert = True
  panAction.Ignore = True
  panAction.ResizeScaled(21, 5)
  panAction.Arrangement = Arrange.Horizontal

  btnInstall = New ToolButton(panAction) As "btnInstall"
  btnInstall.ResizeScaled(10, 5)
  btnInstall.Font.Grade = 1
  btnInstall.AutoResize = True
  
  btnVote = New ToolButton(panAction) As "btnVote"
  btnVote.ResizeScaled(10, 5)
  'btnVote.Font.Bold = True
  btnVote.Font.Grade = 1
  btnVote.AutoResize = True

  $hSoft = CSoftware.Get($sFarm, $iId)
  Object.Attach($hSoft, Me, "Software")
  If $hSoft.State <> CSoftware.STATE_READY Then 
    Reload
  Else
    UpdateButtons
    Raise Ready
  Endif
  
End

Private Sub UpdateButtons()

  If $hSoft.IsInstalled() Then
    If $hSoft.CanUpgrade() Then
      btnInstall.Picture = $hPicUpgrade
    Else
      btnInstall.Picture = $hPicInstall
    Endif
  Else
    btnInstall.Picture = $hPicInstallOff
  Endif

  btnInstall.Text = CStr($hSoft.DownloadCount)
  btnVote.Picture = If($hSoft.YourVote = 1, $hPicVote, $hPicVoteOff)
  btnVote.Text = CStr($hSoft.VoteCount)
  btnVote.Enabled = $hSoft.YourVote >= 0
  
End

Public Sub Software_Change()
  
  $hDrawingArea.Refresh
  
  If $hSoft.IsFinished() Then 
    
    $hSpinner.Hide
    
    If $hSoft.State = CSoftware.STATE_READY Then
      
      UpdateButtons
      
    Endif
    
    Raise Ready
    
  Endif
  
End

Public Sub DrawingArea_Arrange()
  
  $hSpinner.Move($hDrawingArea.W \ 2 - 16, $hDrawingArea.H \ 2 - 16, 32, 32)
  
  panAction.Move($hDrawingArea.W - Desktop.Scale - panAction.W, Desktop.Scale)
  
End

Public Sub DrawingArea_Enter()
  
  $bHighlight = True
  $hDrawingArea.Refresh
  
End

Public Sub DrawingArea_Leave()
  
  $bHighlight = False
  $hDrawingArea.Refresh
  
End


Public Sub DrawingArea_Draw()
  
  Dim X, Y, W, H As Integer
  Dim P As Integer
  Dim iCol As Integer
  Dim sText As String
  
  W = Paint.W
  H = Paint.H
  P = Desktop.Scale
  
  'Paint.Brush = Paint.RadialGradient(X, Y, Desktop.Scale * 24, X, Y, [Color.Merge(Color.LightForeground, Color.TextBackground, 0.6), Color.TextBackground], [0.0, 1.0])
  'Paint.Rectangle(X, Y, W, H)
  'Paint.Fill
  
  'If $hSoft.Background Then
  'Paint.Brush = Paint.Image($hSoft.Background)
  'Else
    Paint.Brush = Paint.RadialGradient(X, Y, Desktop.Scale * 24, X, Y, [Color.Merge(Color.LightForeground, Color.TextBackground, 0.6), Color.TextBackground], [0.0, 1.0])
  'Endif
  Paint.Rectangle(0, 0, W, H)
  Paint.Fill
  
  Paint.AntiAlias = False
  Paint.Rectangle(X + 1, Y + 1, W - 3, H - 3)
  
  If $hDrawingArea.HasFocus Or If $bHighlight Then
  
    Paint.Background = Color.LightBackground
    Paint.LineWidth = 2
  
  Else
    
    Paint.Background = Color.SetAlpha(Color.LightForeground, 160)
    
  Endif
  
  Paint.Stroke
  Paint.AntiAlias = True
  
  If Not $hSoft Or If $hSoft.State < CSoftware.STATE_READY Then Return
  
  X += P
  Y += P
  W -= P * 2
  H -= P * 2
  
  If $hSoft.State = CSoftware.STATE_ERROR Then
    Paint.Font.Italic = True
    Paint.Background = Color.Gray
    Paint.DrawText($hSoft.ErrorText, X, Y, W, H, Align.TopLeft)
    Return
  Endif

  Paint.Save
  
  Paint.Rectangle(X, Y, W, H)
  Paint.Clip
  
  With $hSoft
  
    If .Icon Then Paint.DrawImage(.Icon, X, Y)
    
    'iCol = If($bSelected, Color.SelectedForeground, Color.Foreground)
    iCol = Color.Foreground
    
    X += CSoftware.ICON_SIZE + P
  
    'Paint.Background = If($bSelected, Color.SelectedForeground, Color.Foreground)
    Paint.Background = iCol
    sText = .Name
    Paint.Font = Font["+1"]
    Paint.Background = iCol
    Paint.DrawTextShadow(sText, X, Y, Paint.W, Paint.H, Align.TopLeft)
    Paint.DrawText(sText, X, Y, Paint.W, Paint.H, Align.TopLeft)
    
    Paint.Font.Bold = False
    sText = .Version
    Paint.Background = Color.White
    Paint.DrawTextShadow(sText, X, Y + Paint.Font.Height, Paint.W, Paint.H, Align.TopLeft, 1)
    Paint.Background = iCol
    Paint.DrawText(sText, X, Y + Paint.Font.Height, Paint.W, Paint.H, Align.TopLeft)
    
    X -= CSoftware.ICON_SIZE + P
    
    sText = .Description
    Paint.Font = Font["-1"]
    
    W = Paint.W - X - P * 2
    H = Paint.H - Y - CSoftware.ICON_SIZE - P * 2
    If .URL Then H -= Desktop.Scale
    Paint.DrawText(Paint.TrimText(sText, W, H), X, Y + CSoftware.ICON_SIZE + P, W, H)
    
  End With
    
  Paint.Restore
  
End

Private Function Id_Read() As Integer

  Return $hSoft.Id

End

Public Sub Reload()

  $hSpinner.Show
  $hSoft.Start
  '$hDrawingArea.Refresh

End

Public Sub btnVote_Click()

  Dim hReq As FarmRequest
  
  hReq = New FarmRequest($sFarm)
  hReq.VoteForSoftware($hSoft.Id, If($hSoft.YourVote = 1, 0, 1))
  If Not hReq.WaitFor(, ("Unable to modify the vote."), True) Then
    $hSoft.MustReload
    FSoftwareFarm.OnVote(Me)
  Endif
  
End

Public Sub btnInstall_Click()
  
  DrawingArea_MouseDown
  
End

Public Sub DrawingArea_MouseDown()
  
  Raise Click
  
End

Private Function Software_Read() As CSoftware

  Return $hSoft

End
