' Gambas class file

Public Name As String
Public Path As String
Public NotFound As Boolean
Public Version As String
Public Classes As String[]
Public Libraries As String[]
Public Info As String

Public Sub _new(sPath As String)
  
  Dim hFile As File
  Dim sIcon As String
  Dim sLine As String
  Dim iPos As Integer
  Dim sKey As String
  Dim sVal As String
  Dim sData As String
  Dim aData As String[]
  
  Path = sPath
  Name = File.Name(sPath)
  Classes = New String[]
    
  If Not sPath Or If Not Exist(sPath) Then 
    NotFound = True
    Return
  Endif
  
  Exec [System.Path &/ "bin/gba" & System.Version, "-x", sPath, ".startup"] To sData
  aData = Split(sData, "\n")
  Try Version = aData[4]
  
  Libraries = New String[]
  
  For iPos = 5 To aData.Max
    If aData[iPos] Then Break
  Next
  
  While iPos <= aData.Max
    If Left(aData[iPos]) = "/" Then Libraries.Add(File.Name(aData[iPos]))
    Inc iPos
  Wend
    
  Exec [System.Path &/ "bin/gba" & System.Version, "-x", sPath, ".list"] To sData
  Classes = Split(sData, "\n", "", True)
    
End

Public Sub GetInfo() 
  
  Exec [System.Path &/ "bin/gba" & System.Version, "-x", Path, ".info"] To Info
  
End

Public Sub GetPackageName() As String
  
  Dim sProject As String
  Dim sLine As String
  Dim aLine As String[]
  Dim aVersion As String[]
  
  Exec [System.Path &/ "bin/gba" & System.Version, "-x", Path, ".project"] To sProject
  
  For Each sLine In Split(sProject, "\n")
    aLine = Scan(sLine, "PackageName=*")
    If aLine.Count Then Return aLine[0]
  Next
  
  aVersion = Split(Version, ".")
  Return String.UCase(Name & "-" & aVersion[0] & "." & aVersion[1])
  
End
