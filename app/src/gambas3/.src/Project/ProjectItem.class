' Gambas class file

Inherits UserControl

Event Click

Property ShowPath As Boolean
Property Path As String
Property Highlight As Boolean
Property Background As Integer
Property Read IdealHeight As Integer
Property ShowAuthors As Boolean
Property Read Info As CProjectInfo

Private $hDrawingArea As DrawingArea
Private $sPath As String
Private $hProjectInfo As CProjectInfo
Private $hIcon As Picture
Private $bShowPath As Boolean
Private $bShowAuthors As Boolean

Private Const ICON_SIZE As Integer = 32
Private Const PADDING As Integer = 6

Private $bCanHighlight As Boolean = True
Private $bHighlight As Boolean

Public Sub _new()
  
  $hDrawingArea = New DrawingArea(Me) As "DrawingArea"
  $hDrawingArea.Mouse = Mouse.Pointing
  $hDrawingArea.Focus = True
  
End

  
Private Sub SetPath(sPath As String)
  
  $sPath = sPath
  $hProjectInfo = New CProjectInfo(sPath)
  
  $hDrawingArea.ToolTip = Replace($sPath, System.User.Home, "~")
  Me.H = Me.IdealHeight
  Refresh
  
End


Private Sub GetTitle() As String
  
  Dim sTitle As String
  Dim bSelected As Boolean
  
  bSelected = Me.Background = Color.SelectedBackground

  With $hProjectInfo
    sTitle = .Title
    If Not sTitle Then sTitle = .Name
    sTitle = "<b>" & .Name & "</b>&nbsp;" & .Version
    sTitle &= Subst("<br><font size=\"-1\" color=\"&1\">", If(bSelected, "white", "gray")) & .Title
    If $bShowAuthors And If .Authors And If .Authors.Count Then
      If .Title Then sTitle &= " - "
      sTitle &= "<i>" & If(.Authors.Count = 1, ("Author"), ("Authors")) & " : " & .Authors.Join(", ") & "</i>"
    Endif
    sTitle &= "</font>"
    If $bShowPath Then sTitle &= Subst("<br><font size=\"-1\" color=\"&1\"><b>", If(bSelected, "white", "gray")) & Replace($sPath, System.User.Home, "~") & "</b></font>"
  End With
  
  Return sTitle

End


Public Sub DrawingArea_Draw()
  
  Dim hIcon As Picture
  Dim sTitle As String
  Dim X, W, H As Integer
  Dim sPath As String
  Dim bSelected As Boolean
  
  If Not $hProjectInfo Then Return
  
  bSelected = Me.Background = Color.SelectedBackground
  
  With $hProjectInfo
    
    If Not $hIcon Then
      $hIcon = Project.StretchIcon(.Icon, ICON_SIZE).Picture
    Endif
    
    Draw.Picture($hIcon, PADDING, PADDING)
    sTitle = GetTitle()
    'Draw.Font.Bold = True
    X = ICON_SIZE + PADDING * 2
    W = Min(Me.W - X, Draw.RichTextWidth(sTitle))
    If bSelected Then Draw.Foreground = Color.SelectedForeground
    
    H = Draw.RichTextHeight(sTitle, W)
    Draw.RichText(sTitle, X, PADDING, W, H, Align.TopLeft)
    
  End With
  
  If $hDrawingArea.HasFocus Then
    Draw.Foreground = Color.SelectedBackground
    Draw.LineStyle = Line.Dot
    Draw.Rect(1, 1, Draw.W - 2, Draw.H - 2)
  Endif
  
End

Public Sub DrawingArea_Enter()
  
  If $bCanHighlight Then
    'If not $bHighlight Then 
      $hDrawingArea.Background = Color.LightBackground
      $bHighlight = True
    'Endif
  Endif
  
End

Public Sub DrawingArea_Leave()
  
  If $bHighlight Then $hDrawingArea.Background = Color.Default
  
End

Public Sub DrawingArea_KeyPress()

  If Key.Code = Key.Space Then Raise Click

End

Private Function Background_Read() As Integer

  Return Super.Background

End

Private Sub Background_Write(Value As Integer)

  Super.Background = Value
  $hDrawingArea.Background = Color.Default

End

Private Sub Refresh()
  
  Super.Refresh
  
End


Private Function ShowPath_Read() As Boolean

  Return $bShowPath

End

Private Sub ShowPath_Write(Value As Boolean)

  $bShowPath = True
  Refresh

End

Private Function Path_Read() As String

  Return $sPath

End

Private Sub Path_Write(Value As String)

  SetPath(Value)

End

Private Function Highlight_Read() As Boolean

  Return $bCanHighlight

End

Private Sub Highlight_Write(Value As Boolean)

  $bCanHighlight = Value
  $hDrawingArea.Mouse = If(Value, Mouse.Pointing, Mouse.Default)

End

Private Function IdealHeight_Read() As Integer
  
  Dim X, H As Integer
  Dim sTitle As String

  X = ICON_SIZE + PADDING * 2
  'If $hProjectInfo Then
  '  sTitle = GetTitle()
    'H = $hDrawingArea.Font.RichTextHeight(sTitle, Min(Me.W - X, $hDrawingArea.Font.RichTextWidth(sTitle))) + PADDING * 2
    H = $hDrawingArea.Font.Height * 2 + PADDING * 2
  'Endif

  H = Max(H, X)
  If $bShowPath Then H += Desktop.Scale * 2
  Return H
  
End

Private Function Info_Read() As CProjectInfo

  Return $hProjectInfo

End

Public Sub DrawingArea_MouseDown()
  
  If Mouse.Left Then Raise Click
  
End

Private Function ShowAuthors_Read() As Boolean

  Return $bShowAuthors

End

Private Sub ShowAuthors_Write(Value As Boolean)

  $bShowAuthors = Value
  $hDrawingArea.Refresh

End

Public Sub Match(sFilter As String) As Boolean

  If Not sFilter Then Return True
  With $hProjectInfo
    If .Name Like sFilter Then Return True
    If String.LCase(.Title) Like sFilter Then Return True
    If $bShowAuthors And If String.LCase(.Authors.Join(" ")) Like sFilter Then Return True
  End With
  
End
