' Gambas class file

Inherits CFamily

Public Const Name As String = "Report"
Public Const DropImageClass As String = "ReportImage"
Public Const DropImageProperty As String = "Image"

Static Private Function GetFactor(Unit As String) As Float
  
  Select Case Unit
    Case "cm"
      Return 0.3937
    Case "ft"
      Return 12
    Case "in"
      Return 1
    Case "m"
      Return 39.37
    Case "mm"
      Return 0.03937
    Case "pt"
      Return 1 / 72
    Case Else
      Return 1 / 96 '* (300 / 96) ' Trick to get a 300 DPI like
  End Select
  
End

Static Public Function ToPixel(sSize As String) As Float
  
  Dim fValue As Float
  Dim I As Integer
  Dim sCar As String
  Dim sUnit As String
  'Dim Size As String = Coord
  sSize = Trim(sSize)
  
  If Not sSize Then
    Try sUnit = "px"
    Return
  Endif
  
  For I = 1 To Len(sSize)
    sCar = Mid$(sSize, I, 1)
    If Not IsDigit(sCar) And If sCar <> "." Then Break
  Next
  
  Try fValue = CFloat(Left$(sSize, I - 1))
  Try sUnit = Trim(Mid$(sSize, I))
  
  Return fValue * GetFactor(sUnit) / GetFactor("px")
  
End

Static Private Sub HasBorder(sBorder As String, sSide As String) As Boolean
  
  Dim aBorder As String[] = Split(LCase(sBorder))
  Dim sTest As String
  Dim bBorder As Boolean
  
  
  For Each sTest In ["left", "right", "top", "bottom", "border"]
    If aBorder.Exist(sTest, gb.IgnoreCase) Then
      bBorder = True
      If UCase(sTest) = UCase(sSide) Then Return True
    Endif
  Next
  
  Return Not bBorder
  
End

Static Public Sub PaintBorder(sBorder As String) As Float
  
  Dim sElt As String
  Dim fWidth As Float 
  Dim cBorder As New Collection
  Dim iColor As Integer
  Dim ars, ars2 As String[]

  If Not sBorder Then Return
  
  For Each sElt In Split(LCase(sBorder), ";")
    ars = Scan(sElt, "*:*")
    If ars.Count < 2 Then Return
    ars2 = Split(ars[1], " ")
    ars[0] = Trim(ars[0])
    If Draw.Device Then
      
      Draw.LineStyle = Line.None
      
      If ars[0] = "left" Or If ars[0] = "border" Then 
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
        Try iColor = CReportBrush[ars2[1]]._Color[0]
        Draw.FillRect(0, 0, fWidth, Draw.Height, iColor)
      Endif
      
      If ars[0] = "right" Or If ars[0] = "border" Then 
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
        Try iColor = CReportBrush[ars2[1]]._Color[0]
        Draw.FillRect(Draw.Width - fWidth, 0, fWidth, Draw.Height, iColor)
      Endif
      If ars[0] = "top" Or If ars[0] = "border" Then
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
        Try iColor = CReportBrush[ars2[1]]._Color[0]
        Draw.FillRect(0, 0, Draw.Width, fWidth, iColor)
      Endif
      If ars[0] = "bottom" Or If ars[0] = "border" Then
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
        Try iColor = CReportBrush[ars2[1]]._Color[0]
        Draw.FillRect(0, Draw.Height - fWidth, Draw.Width, fWidth, iColor)
      Endif
      
    Else
      
      'Paint.Brush = Paint.Color(iColor)
      
      If ars[0] = "left" Or If ars[0] = "border" Then 
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
         Try Paint.Brush = CReportBrush[ars2[1]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
        Paint.Rectangle(0, 0, fWidth, Paint.Height)
      Endif
      If ars[0] = "right" Or If ars[0] = "border" Then
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
         Try Paint.Brush = CReportBrush[ars2[1]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
        Paint.Rectangle(Paint.Width - fWidth, 0, fWidth, Paint.Height)
      Endif
      If ars[0] = "top" Or If ars[0] = "border" Then
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
         Try Paint.Brush = CReportBrush[ars2[1]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
        Paint.Rectangle(0, 0, Paint.Width, fWidth)
      Endif
      If ars[0] = "bottom" Or If ars[0] = "border" Then 
        Try fWidth = CFamilyReport.ToPixel(ars2[0])
         Try Paint.Brush = CReportBrush[ars2[1]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
        Paint.Rectangle(0, Paint.Height - fWidth, Paint.Width, fWidth)
      Endif
      
      Paint.Fill
      
    Endif
      If ars[0] = "border" Then Break
    Next
    Return fWidth
    
End

Public Sub _new()
  
  Me.Background = Color.White
  
End

Public Sub IsPainted(hCtrl As CControl) As Boolean
  
  If hCtrl.Kind = "ReportLabel" Then Return True
  'If hCtrl.Kind = "ReportTextLabel" Then Return True
  If hCtrl.Kind = "ReportLine" Then Return True
  
End

Public Sub IsTransparent(hCtrl As CControl) As Boolean
  
  If hCtrl.Kind = "Report" Then Return False
  If hCtrl.Kind = "ReportHBox" Then Return False
  If hCtrl.Kind = "ReportVBox" Then Return False
  Return True
  If hCtrl.Kind = "ReportLabel" Then Return True
  If hCtrl.Kind = "ReportTextLabel" Then Return True
  If hCtrl.Kind = "ReportLine" Then Return True
  
End

Public Sub DrawControl(hCtrl As CControl) As Boolean
  
  Dim sAlign As String
  Dim X, Y, W, H, W2, H2 As Float
  Dim fVal As Float
  Dim sPath As String
  
  X = 0
  Y = 0
  W = hCtrl.Width
  H = hCtrl.Height
  
  If hCtrl["Background"] Then
    
    If Draw.Device Then
      
      Try Draw.FillRect(0, 0, Draw.Width, Draw.Height, CReportBrush[hCtrl["Background"]]._Color[0])
      
    Else
     Paint.Brush = CReportBrush[hCtrl["Background"]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
    Paint.Rectangle(0, 0, Paint.Width, Paint.Height)
    Paint.Fill
    Endif
  Endif
  
  fVal = PaintBorder(hCtrl["Border"])
  
  If Not hCtrl.IsContainer() And If hCtrl["Padding"] Then
    fVal = Max(ToPixel(hCtrl["Padding"]), fVal)
  Endif
  
  If fVal > 0 Then
    X += fVal
    Y += fVal
    W -= fVal * 2
    H -= fVal * 2
  Endif
  
  If W <= 0 Or If H <= 0 Then Return
  
  If hCtrl["Brush"] Then
    Paint.Brush = CReportBrush[hCtrl["Brush"]]._PaintBrush(0, 0, Paint.Width, Paint.Height)
  Endif
  
  Select Case hCtrl.Kind
      
    Case "ReportLabel"
      
      Try Paint.Font = Font[hCtrl["Font"]]
      Paint.Text(hCtrl["Text"], X, Y, W, H, Classes["Align"][hCtrl["Alignment"]].Value)
      Paint.Fill
      
    Case "ReportTextLabel"
      
      Try Draw.Font = Font[hCtrl["Font"]]
      Draw.RichText(hCtrl["Text"], X, Y, W, H, Classes["Align"][hCtrl["Alignment"]].Value)
      'Paint.Fill
      
    Case "ReportLine"
      
      Paint.LineWidth = 1
      Paint.Brush = Paint.Color(Color.Black)
      Try Paint.LineWidth = hCtrl["LineWidth"]
      Try Paint.Brush = Paint.Color(hCtrl.GetPropertyReal("LineColor"))
      X += Paint.LineWidth / 2
      Y += Paint.LineWidth / 2
      W = X + W - Paint.LineWidth
      H = Y + H - Paint.LineWidth
      W2 = (X + W) / 2
      H2 = (Y + H) / 2
      Select Case hCtrl["Direction"]
        Case "TopLeft"
          Paint.MoveTo(W, H)
          Paint.LineTo(X, Y)
        Case "Top"
          Paint.MoveTo(W2, H)
          Paint.LineTo(W2, Y)
        Case "TopRight"
          Paint.MoveTo(X, H)
          Paint.LineTo(W, Y)
        Case "Left"
          Paint.MoveTo(W, H2)
          Paint.LineTo(X, H2)
        Case "Right"
          Paint.MoveTo(X, H2)
          Paint.LineTo(W, H2)
        Case "BottomLeft"
          Paint.MoveTo(W, Y)
          Paint.LineTo(X, H)
        Case "Bottom"
          Paint.MoveTo(W2, Y)
          Paint.LineTo(W2, H)
        Case "BottomRight"
          Paint.MoveTo(X, Y)
          Paint.LineTo(W, H)
      End Select
      Paint.Stroke
      
    Case "ReportHBox"
      
      Draw.Foreground = &HFF8080&
      Draw.LineStyle = Line.Dash
      Draw.Rect(0, 0, hCtrl.W, hCtrl.H)
      
    Case "ReportVBox", "Report"
      
      Draw.Foreground = &HFF8080&
      Draw.LineStyle = Line.Dash
      Draw.Rect(0, 0, hCtrl.W, hCtrl.H)
      
    Case "ReportImage"
      
      sPath = hCtrl["Image"]
      If Not sPath Then Return True
      If hCtrl["#Image"] <> sPath Then
        hCtrl["#Image"] = sPath
        hCtrl["#ImageObject"] = Image.Load(Project.Dir &/ sPath)
      Endif
      Try Draw.Image(hCtrl["#ImageObject"], X, Y, W, H)
      
    Case Else
      
      Return True
      
  End Select
  
End

Public Sub EnterControl(hCont As Container, hCCtrl As CControl)
  
  Dim sImage As String
  
  Select hCCtrl.Kind
      
    Case "ReportHBox"
      sImage = "horizontal"
      
    Case "ReportVBox"
      sImage = "vertical"
      
  End Select
  
  Me.DrawIcon(hCont, hCCtrl, sImage)
  
End
