' Gambas class file

Static Public All As New Collection(gb.IgnoreCase)

Public Const Name As String = ""
Public Background As Integer = Color.Background

Private $hTimer As Timer

Static Public Sub Get(sFamily As String) As CFamily
  
  Dim hFamily As CFamily
  
  hFamily = All[sFamily]
  If Not hFamily Then 
    Try hFamily = Object.New("CFamily" & sFamily)
    If Not hFamily Then 
      Debug "Family "; sFamily; " not implemented: "; Error.Where; ": "; Error.Text
      Return Get("Form")
    Endif
    All[sFamily] = hFamily
  Endif
  Return hFamily
  
End

Static Public Sub Exit()
  
  All = Null
  
End

Public Sub _new()
  
  $hTimer = New Timer As "Timer"
  
End


'' If a control must be drawn with a painted DrawingArea
Public Sub IsPainted(hCtrl As CControl) As Boolean
  
End

'' If a control must be drawn with a transparent DrawingArea
Public Sub IsTransparent(hCtrl As CControl) As Boolean
  
End

'' Draw event implementation of a specific control
'' Return TRUE if the control is not managed: then a default frame with the control icon and the control name will be drawn.
Public Sub DrawControl(hCtrl As CControl) As Boolean

  Return True

End

Private Sub CheckIcon(hCCtrl As CControl)
  
  Dim hCtrl As Control = hCCtrl.Control
  Dim hIcon As Control = hCCtrl["#icon"]
  Dim X, Y As Integer
  
  If Not hIcon Then Return
  
  X = Mouse.ScreenX
  Y = Mouse.ScreenY
  
  If X >= hCtrl.ScreenX And If X < (hCtrl.ScreenX + hCtrl.Width) And If Y >= hCtrl.ScreenY And If Y < (hCtrl.ScreenY + hCtrl.Height) Then Return
  
  hCCtrl["#icon"] = Null
  hIcon.Delete
  
End

Public Sub EnterControl(hCCtrl As CControl)
  
  DrawIcon(hCCtrl, "")  
  
End

Public Sub LeaveControl(hCCtrl As CControl)
  
  CheckIcon(hCCtrl)
  
End

Public Sub DrawIcon(hCCtrl As CControl, sImage As String)
  
  Dim hCtrl As Control = hCCtrl.Control
  Dim hPict As Picture
  Dim hImage As Image
  Dim hIcon As PictureBox
  Dim hComp As Control
  Dim iWidth As Integer
  Dim hCont As Container
  Dim X, Y As Integer
  Dim XI, YI, XC, YC As Integer

  If Not sImage Then
  
    sImage = LCase(hCCtrl["Arrangement"])
    If sImage = "none" Then sImage = ""
    
  Endif
  
  If Not sImage Then Return
  
  If hCCtrl["#icon"] Then hCCtrl["#icon"].Delete
  
  hPict = Picture["$arr-" & sImage]
  If Not hPict Then
    hImage = New Image(15, 15, Color.RGB(0, 0, 0, 128))
    hImage.Draw(Image.Load("img/family" &/ sImage & ".png"), 0, 0)
    hPict = hImage.Picture
    Picture["$arr-" & sImage] = hPict
  Endif
  
  hCont = hCtrl.Window
  
  X = hCtrl.ScreenX + hCtrl.Width - hPict.Width
  Y = hCtrl.ScreenY
  'hIcon.Move(,, hPict.Width, hPict.Height)
  
  If hCCtrl.Parent And If hCCtrl.Parent["#icon"] Then
    hComp = hCCtrl.Parent["#icon"]
    XI = X + hPict.Width / 2
    YI = Y + hPict.Height / 2
    XC = hComp.ScreenX + hComp.Width / 2
    YC = hComp.ScreenY + hComp.Height / 2
    If Abs(XI - XC) < (hPict.Width + 1) And Abs(YI - YC) < (hPict.Height + 1) Then
      If hCtrl.Parent.Width > hCtrl.Parent.Height Then
        X = hComp.ScreenX - hPict.Width - 1
      Else
        Y = hComp.ScreenY + hPict.Height + 1
      Endif
    Endif
  Endif
  
  hIcon = New PictureBox(hCont) As "Icon"
  hCCtrl["#icon"] = hIcon
  hIcon.Ignore = True
  hIcon.Move(X - hCont.ScreenX, Y - hCont.ScreenY, hPict.Width, hPict.Height)
  hIcon.Picture = hPict
  hIcon.Raise
  hIcon.Tag = hCCtrl
  
End

Public Sub Icon_MouseDown()
  
  Last.Hide
  
End

Public Sub Icon_Leave()
  
  CheckIcon(Last.Tag)
  
End
