' Gambas class file

Private $aArg As String[]
Private $aEnv As String[]

Public Sub Run() As Boolean

  Return NOT Me.ShowModal()

End

Public Sub btnOK_Click()

  Dim iInd As Integer
  
  tvwArg.Save
  tvwEnv.Save
  
  While iInd < $aEnv.Count
    If NOT Trim(Scan($aEnv[iInd], "*=*")[0]) Then 
      $aEnv.Remove(iInd)
    Else 
      Inc iInd
    Endif
  Wend

  Project.Arguments = $aArg
  Project.Environment = $aEnv
  Project.WriteProject(True)
  
  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End


Public Sub Form_Open()

  Settings.Read(Me)

  $aArg = Project.Arguments.Copy()
  $aEnv = Project.Environment.Copy()

  tvwArg.Rows.Count = $aArg.Count
  tvwArg.Rows.Resizable = False
  tvwArg.Columns.Count = 1
  tvwArg.Columns.Resizable = True
  'tvwArg.Columns[0].Text = ("Argument")
    
  tvwEnv.Rows.Count = $aEnv.Count
  tvwEnv.Rows.Resizable = False
  tvwEnv.Columns.Count = 2
  tvwEnv.Columns[0].Text = ("Variable")
  tvwEnv.Columns[1].Text = ("Value")
  
  'tabEnv.Index = 0

End

Public Sub tvwArg_Data(Row As Integer, Column As Integer)

  tvwArg.Data.Text = $aArg[Row]  

End

Public Sub btnInsertArg_Click()

  If $aArg.Count >= 255 Then Return
  $aArg.Add("")
  Inc tvwArg.Rows.Count
  tvwArg.MoveTo($aArg.Max, 0)
  tvwArg.Edit  

End

Public Sub btnRemoveArg_Click()
  
  If $aArg.Count = 0 Then Return
  If tvwArg.Row < 0 Then Return
  tvwArg.Save
  $aArg.Remove(tvwArg.Row)
  Dec tvwArg.Rows.Count
  tvwArg.Refresh
  tvwArg.Edit
  
End


Public Sub tvwArg_Save(Row As Integer, Column As Integer, Value As String)

  $aArg[Row] = Value  

End

Public Sub tvwArg_Insert()
  
  btnInsertArg_Click
  
End


Public Sub tvwArg_Click()

  tvwArg.Edit  

End

Public Sub btnMoveUpArg_Click()

  If tvwArg.Row <= 0 Then Return 
  tvwArg.Save
  Swap $aArg[tvwArg.Row], $aArg[tvwArg.Row - 1]
  tvwArg.Refresh
  Dec tvwArg.Row
  tvwArg.Edit  

End

Public Sub btnMoveDownArg_Click()

  If tvwArg.Row >= (tvwArg.Rows.Count - 1) Then Return 
  tvwArg.Save
  Swap $aArg[tvwArg.Row], $aArg[tvwArg.Row + 1]
  tvwArg.Refresh
  Inc tvwArg.Row
  tvwArg.Edit

End

Public Sub Form_Close()

  Settings.Write(Me)  

End

Public Sub tvwEnv_Click()

  tvwEnv.Edit

End

Public Sub tvwEnv_Data(Row As Integer, Column As Integer)

  Dim aEnv As String[] = Scan($aEnv[Row], "*=*")
  
  Try tvwEnv.Data.Text = aEnv[Column]
  
Catch

End

Public Sub tvwEnv_Save(Row As Integer, Column As Integer, Value As String)

  Dim aEnv As String[] = Scan($aEnv[Row], "*=*")
  
  If Column = 0 Then 
    $aEnv[Row] = Trim(Value) & "=" & aEnv[1]
  Else 
    $aEnv[Row] = aEnv[0] & "=" & Value
  Endif
  
End

Public Sub tvwEnv_Insert()
  
  btnInsertEnv_Click
  
End

Public Sub btnInsertEnv_Click()

  If $aEnv.Count >= 255 Then Return
  $aEnv.Add("=")
  Inc tvwEnv.Rows.Count
  tvwEnv.MoveTo($aEnv.Max, 0)
  tvwEnv.Edit      

End

Public Sub btnRemoveEnv_Click()
  
  If $aEnv.Count = 0 Then Return
  If tvwEnv.Row < 0 Then Return
  tvwEnv.Save
  $aEnv.Remove(tvwEnv.Row)
  Dec tvwEnv.Rows.Count
  tvwEnv.Refresh
  
End

