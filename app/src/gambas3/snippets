[Snippets]
Count=37
Snippet[1]="fo\nFor ${1:Var} = ${2:Start} To ${3:End}\n  ${}\nNext"
Snippet[2]="fe\nFor Each ${1:Var} In ${2:Collection}\n  ${}\nNext"
Snippet[3]="if\nIf ${1:Test} Then\n  ${}\nEndif"
Snippet[4]="ie\nIf ${1:Test} Then\n  ${2}\nElse\n  ${3}\nEndif"
Snippet[5]="pps\nPublic Sub ${1:Name}(${2:Arguments})\n\n  ${}\n\nEnd"
Snippet[6]="ppf\nPublic Function ${1:Name}(${2:Arguments}) As ${3:ReturnType}\n\n  ${}\n\nEnd"
Snippet[7]="spps\nStatic Public Sub ${1:Name}(${2:Arguments})\n\n  ${}\n\nEnd"
Snippet[8]="sppf\nStatic Public Function ${1:Name}(${2:Arguments}) As ${3:ReturnType}\n\n  ${}\n\nEnd"
Snippet[9]="ps\nPrivate Sub ${1:Name}(${2:Arguments})\n\n  ${}\n\nEnd"
Snippet[10]="pf\nPrivate Function ${1:Name}(${2:Arguments}) As ${3:ReturnType}\n\n  ${}\n\nEnd"
Snippet[11]="sps\nStatic Private Sub ${1:Name}(${2:Arguments})\n\n  ${}\n\nEnd"
Snippet[12]="spf\nStatic Private Function ${1:Name}(${2:Arguments}) As ${3:ReturnType}\n\n  ${}\n\nEnd"
Snippet[13]="d\nDim ${1:Var} As ${2:Type}"
Snippet[14]="pp\nPublic ${1:Var} As ${2:Type}"
Snippet[15]="p\nPrivate $${1:Var} As ${2:Type}"
Snippet[16]="spp\nStatic Public ${1:Var} As ${2:Type}"
Snippet[17]="sp\nStatic Private $${1:Var} As ${2:Type}"
Snippet[18]="ppc\nPublic Const ${1:Name} As ${2:Type} = ${3:Value}"
Snippet[19]="pc\nPrivate Const ${1:Name} As ${2:Type} = ${3:Value}"
Snippet[20]="pr\nProperty ${1:Name} As ${2:Type}"
Snippet[21]="prr\nProperty Read ${1:Name} As ${2:Type}"
Snippet[22]="spr\nStatic Property ${1:Name} As ${2:Type}"
Snippet[23]="sprr\nStatic Property Read ${1:Name} As ${2:Type}"
Snippet[24]="wh\nWhile ${1:Test}\n  ${}\nWend"
Snippet[25]="re\nRepeat\n  ${}\nUntil ${1:Test}"
Snippet[26]="do\nDo\n  ${}\nLoop"
Snippet[27]="w\nWith ${1:Expression}\n  ${}\nEnd With"
Snippet[28]="op\n${1:File} = Open ${2:Path} For ${3:Mode}"
Snippet[29]="se\nSelect ${1:Expression}\n  Case ${2:Compare}\n    ${3}\n  Case ${4:Compare}\n    ${5}\n  Default\n    ${6}\nEnd Select"
Snippet[30]="_n\nPublic Sub _new(${1:Arguments})\n\n  ${}\n\nEnd"
Snippet[31]="_g\nPublic Function _get(${1:Indexes}) As ${2:Type}\n\n  ${}\n\nEnd"
Snippet[32]="_p\nPublic Sub _put(${1:Value} As ${2:Type}, ${3:Indexes})\n\n  ${}\n\nEnd"
Snippet[33]="_c\nPublic Function _compare(${1:Other} As ${2:Type}) As Integer\n\n  ${}\n\nEnd"
Snippet[34]="ev\nEvent ${1:Name}"
Snippet[35]="gpl\n'\n' Copyright (C) ${1:Developper}\n'\n' This program is free software; you can redistribute it and/or modify\n' it under the terms of the GNU General Public License as published by\n' the Free Software Foundation; either version 2 of the License, or\n' (at your option) any later version.\n'\n' This program is distributed in the hope that it will be useful,\n' but WITHOUT ANY WARRANTY; without even the implied warranty of\n' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n' GNU General Public License for more details.\n'\n' You should have received a copy of the GNU General Public License\n' along with this program; if not, write to the Free Software\n' Foundation, Inc., 51 Franklin St, Fifth Floor, \n' Boston, MA  02110-1301  USA\n'\n"
Snippet[36]="main\nPublic Sub Main()\n\n  ${}\n\nEnd\n"
Snippet[37]="r\nReturn "
