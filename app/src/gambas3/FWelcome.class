' Gambas class file

Static Private $sPath As String

Private btnNew As CCoolButton
Private btnOpen As CCoolButton
Private btnRecent As CCoolButton
Private btnExample As CCoolButton
Private btnQuit As CCoolButton

Private $iRecent As Integer
Private $aExample As String[]
Private $bExample As Boolean
Private $hPicture As Picture

Private Const LIST_NONE As Integer = 0
Private Const LIST_RECENT As Integer = 1
Private Const LIST_EXAMPLE As Integer = 2

Private Const POS_BUTTON As Integer = 0
Private HEIGHT_BUTTON As Integer = Desktop.Scale * 8

'PRIVATE $aExample as String[] = [ ("Automation"),("Basic"),("Database"),
Static Public Function Run() As String

  'DIM hForm AS Form

  $sPath = ""
  'hForm = NEW FWelcome
  FWelcome.ShowModal()
  Return $sPath

End

Public Sub Form_Open()

  Dim W As Integer
  Dim sFont As String

  sFont = "Bold"
  W = panButton.ClientW

  btnNew = New CCoolButton(panButton, 0, POS_BUTTON, W, HEIGHT_BUTTON, ("New project..."), "icon:/large/new", sFont) As "btnNew"
  btnNew.Foreground = Color.SelectedBackground
  btnOpen = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON, W, HEIGHT_BUTTON, ("Open project..."), "icon:/large/open", sFont) As "btnOpen"
  btnOpen.Foreground = Color.SelectedBackground
  btnRecent = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 2, W, HEIGHT_BUTTON, ("Recent projects"), "icon:/large/play", sFont) As "btnRecent"
  btnRecent.Foreground = Color.SelectedBackground
  btnExample = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 3, W, HEIGHT_BUTTON, ("Examples"), "icon:/large/help", sFont) As "btnExample"
  btnExample.Foreground = Color.SelectedBackground
  btnQuit = New CCoolButton(panButton, 0, POS_BUTTON + HEIGHT_BUTTON * 4, W, HEIGHT_BUTTON, ("Quit"), "icon:/large/quit", sFont) As "btnQuit"
  btnQuit.Foreground = Color.SelectedBackground

  ' Fill recent list

  chkSortRecent.Value = Settings["/FWelcome/SortRecent", False]
  FillRecent

  lblVersion.Text = Project.Version
  lblVersion.Move(lblGambas.X + lblGambas.Font.Width(lblGambas.Text) + 4, lblGambas.Y)

  If Project.GetRecentFiles().Count Then
    Toggle(LIST_RECENT)
  Else
    Toggle(LIST_EXAMPLE)
  Endif

  Settings.Read(Me)

End


Public Sub cvwRecent_Click()

  $sPath = Project.Recent[Val(Last.Key)]
  Me.Close

End


' PUBLIC SUB timMessage_Timer()
' 
'   IF System.RightToLeft THEN
'     INC lblMessage.X
'     IF lblMessage.X >= panMessage.W THEN
'       lblMessage.X = - lblMessage.Width
'     ENDIF
'   ELSE
'     DEC lblMessage.X
'     IF lblMessage.X <= (- lblMessage.Width) THEN
'       lblMessage.X = panMessage.Width
'     ENDIF
'   ENDIF
' 
' END


Public Sub btnNew_Click()

  $sPath = FCreateProject.Run()
  If $sPath Then Me.Close

End


Public Sub btnOpen_Click()

  $sPath = FOpenProject.Run()
  If $sPath Then Me.Close

End


Public Sub btnRecent_Click()

  Toggle(LIST_RECENT)

End


Public Sub btnExample_Click()

  Toggle(LIST_EXAMPLE)

End



Public Sub btnQuit_Click()

  $sPath = ""
  Me.Close(True)

End

Private Sub Toggle(iState As Integer)

  'IF iState = $iRecent THEN
  '  $iRecent = LIST_NONE
  'ELSE
    $iRecent = iState
  'ENDIF

  'ME.Border = Window.Resizable

  If $iRecent Then
    'btnQuit.Move(8, 216 + cvwRecent.H + 8)
    'cvwRecent.Move(360 - cvwRecent.W, 216)
    panList.Raise
    svwRecent.Visible = $iRecent = LIST_RECENT
    svwExample.Visible = $iRecent = LIST_EXAMPLE
    panList.Visible = True
    If $iRecent = LIST_RECENT Then
      lblList.Text = ("Recent projects")
      panSort.Show
    Else
      lblList.Text = ("Examples")
      panSort.Hide
    Endif
  Else
    panList.Visible = False
  Endif

  If $iRecent = LIST_EXAMPLE Then 
    FillExample
  Endif
  
End


Public Sub btnOpenRecent_Click()

  $sPath = Last.Tag
  Me.Close

End

Public Sub Form_KeyPress()

  If Key.Code = Key.Esc Then
    btnQuit_Click
  Endif

End

Public Sub Form_Resize()

  Dim hCtrl As Control
  Dim W As Integer
  Dim sMsg As String

  'lblBackground.Width = ME.ClientW
  'imgGambas.X = Max(lblGambas.X + lblGambas.W, ME.ClientW - 24 - imgGambas.Width)
  'lblMessage.Width = ME.ClientW - panMessage.X * 2
  'lblMessage.Move(8, lblMessage.Y, panBackground.W - 16, panBackground.H - lblMessage.Y - 8)
  'panList.Resize(ME.ClientW - panList.X - 8, ME.ClientH - panList.Y - 8)
  'panTitle.W = panBackground.W - 16
  'lblMessage.Adjust
  'panBackground.H = panTitle.H + 16
  'panTitle.Move(8, 8, panTitle.W, panBackground.H - 16)

  'sMsg = lblMessage.Text
  'lblMessage.Text = ""
  'lblMessage.Move(8, lblMessage.Y, panTitle.W - 16, 8)
  'lblMessage.Text = sMsg

  'imgGambas.Move(panBackground.W - imgGambas.W - 8, 0)
  'lblList.Move(4, 4, panList.ClientW - 8, 16)
  'svwExample.Move(4, lblList.Y + lblList.H + 4, panList.ClientW - 8, panList.ClientH - lblList.H - 12)
  'WITH svwExample
  '  svwRecent.Move(.X, .Y, .W, .H)
  'END WITH

'   W = ME.ClientW - 16
'   btnNew.Resize(W, HEIGHT_BUTTON)
'   btnOpen.Resize(W, HEIGHT_BUTTON)
'   btnRecent.Resize(W, HEIGHT_BUTTON)
'   btnExample.Resize(W, HEIGHT_BUTTON)
'   btnQuit.Resize(W, HEIGHT_BUTTON)

End


Private Sub FillExample()

  Dim sLastDir As String
  Dim sDir As String
  Dim hButton As CCoolButton
  'DIM hLabel AS Label
  Dim hDrawingArea As DrawingArea
  Dim iInd As Integer
  Dim sPath As String
  Dim iHeight, X, Y As Integer
  Dim C As Integer
  Dim hImage As Image

  If $bExample Then Return

  Inc Application.Busy

  iHeight = Desktop.Scale * 3

  If Not $hPicture Then 
    hImage = New Image(16, iHeight, True)
    'hImage.Fill(Color.SelectedBackground)
    For Y = 0 To iHeight
      C = Color.SelectedBackground
      C = Color.RGB(Color[C].Red, Color[C].Green, Color[C].Blue, Max(0, 320 * Y / iHeight - 64))
      For X = 0 To 15
        hImage[X, Y] = C
        'hImage[X, iHeight - Y - 1] = C
      Next 
    Next
    $hPicture = hImage.Picture
  Endif

  $aExample = Project.GetExamples()

  sLastDir = ""
  Y = 0

  For iInd = 0 To $aExample.Count - 1
    sPath = $aExample[iInd]
    sDir = File.Dir(sPath)
    If sDir <> sLastDir Then
      sLastDir = sDir
      hDrawingArea = New DrawingArea(svwExample) As "dwgExample"
      'hLabel = NEW Label()
      With hDrawingArea
        .Move(0, Y, 1024, iHeight)
        .Tag = Project.ExampleTitle[sDir]
        .Font = Font["Bold"]
        .Foreground = Color.TextBackground
        '.Background = Color.TextBackground
        Y = Y + .H
      End With
    Endif
    hButton = New CCoolButton(svwExample, 0, Y, svwExample.ClientW, 32, File.Name(sPath), Project.GetIcon(Project.EXAMPLES_DIR &/ sPath, 24)) As "btnOpenRecent"
    Y = Y + 32
    hButton.Tag = Project.EXAMPLES_DIR &/ sPath
  Next

  $bExample = True

Finally

  Dec Application.Busy

End


Public Sub Form_Close()

  Settings.Write(Me)
  Settings["/FWelcome/SortRecent"] = chkSortRecent.Value

End

' PUBLIC SUB dwgRound_Draw()
' 
'   Draw.FillColor = LAST.Foreground
'   Draw.LineStyle = Line.None
'   Draw.FillStyle = Fill.Solid
'   Draw.RoundRect(0, 0, LAST.W, LAST.H)
' 
' END

Public Sub dwgExample_Draw()
  
  Dim hDrawingArea As DrawingArea = Last
  
  With hDrawingArea
    Draw.Font = .Font

    'Draw.Foreground = .Foreground
    'Draw.Line(0, .H / 2 - 2, .W - 1, .H / 2 - 2)
    Draw.Picture($hPicture, 0, 0, .W, .H)
 
    'Draw.FillStyle = Fill.Solid
    'Draw.LineStyle = Line.None
    'Draw.FillColor = .Background
    'Draw.Rect(8, 0, Draw.TextWidth(.Tag) + 8, .H)
    
    Draw.Text(.Tag, 8, 0, .W - 8, .H, Align.Normal)
  
  End With
  
End


Private Sub FillRecent()

  Dim aList As String[]
  Dim hChild As Control
  Dim iInd As Integer
  Dim hButton As CCoolButton

  Inc Application.Busy
  
  aList = Project.GetRecentFiles(chkSortRecent.Value)
  
  svwRecent.Hide
  
  For Each hChild In svwRecent.Children
    hChild.Delete
  Next

  For iInd = 0 To aList.Count - 1
    hButton = New CCoolButton(svwRecent, 0, iInd * 32, svwRecent.ClientW, 32, File.Name(aList[iInd]), Project.GetIcon(aList[iInd], 24)) As "btnOpenRecent"
    hButton.Tag = aList[iInd]
    hButton.ToolTip = File.Dir(aList[iInd])
  Next

  If aList.Count = 0 Then btnRecent.Enabled = False
  
  svwRecent.Show
  
  Dec Application.Busy
  
End

Public Sub chkSortRecent_Click()

  FillRecent  

End

Public Sub panBackground_Arrange()

  panBackground.H = lblMessage.ScreenY - panBackground.ScreenY + lblMessage.H + panBackground.Padding

End

Public Sub lblWebsite_MouseDown()

  lblWebSite.Foreground = Color.LightBackground

End

Public Sub lblWebsite_MouseUp()
  
  lblWebSite.Foreground = Color.TextBackground
  If Mouse.X >= 0 And If Mouse.Y >= 0 And If Mouse.X < lblWebSite.W And If Mouse.Y < lblWebSite.H Then
    Wait
    Desktop.Open(lblWebsite.Text)
  Endif
  
End

