' Gambas class file

Private $aSel As String[]

Public Sub _new()
  
  Me.Buffered = True
  If Session.Id Then Response.AddHeader("Cache-Control", "no-store")
  
End


Private Sub _PrintTitle()

  If Main.Path Then
    Print Html(Main.Path);
  Else
    Print "/";
  Endif

End

Private Sub _PrintLink()

  Dim aPath As String[]
  Dim sElt As String
  Dim sPath As String
  
  aPath = Split(Main.Path, "/", "", True)
  For Each sElt In aPath
    If sPath Then Print "&nbsp;&bull;&nbsp;";
    sPath &= "/" & sElt
    Print "<a href=\""; Application.Root &/ sPath; Main.LinkSuffix; "\">"; sElt; "</a>";
  Next
  
  If Main.Link Then Print "&nbsp;‚ü∂&nbsp;"; Main.Link
  
End

Private Sub GetMaxHistory() As Integer

  Dim sPath As String
  Dim sDir As String

  sPath = Main.SolvePath(Main.Path)
  sDir = File.Dir(Main.GetPagePathFrom(sPath))
  Try Return Dir(sDir, "~page*.*").Count - 1

End

Private Sub CloseSection(aResult As String[])
  
  If aResult[aResult.Max] Begins "[[" Then
    aResult.Remove(aResult.Max)
  Else
    aResult.Add("]]")
  Endif
  
End


Public Sub RewriteExample(sData As String) As String

  Dim aData As String[]
  Dim I As Integer
  Dim sLine As String
  Dim bProcess As Boolean
  Dim sState As String
  Dim aResult As String[]

  If InStr(sData, "\n### Example") = 0 Then Return sData
  If InStr(sData, "\n[[ code gambas") Then Return sData

  aData = Split(sData, "\n")
  aResult = New String[]
  
  For I = 0 To aData.Max
    
    sLine = aData[I]
    
    If sLine Begins "##" Then
      
      If sState Then 
        CloseSection(aResult)
        sState = ""
      Endif
      
      If sLine Begins "### Example" Or If sLine Begins "### [Example" Then
        bProcess = True
      Else
        bProcess = False
      Endif
      
      aResult.Add(sLine)
      
      Continue
    Endif
    
    If Not bProcess Then
      aResult.Add(sLine)
      Continue
    Endif
    
    If sLine Begins "[[ code " Or If sLine Begins "[[ result" Then
      bProcess = False
      aResult.Add(sLine)
      Continue
    Endif
    
    If LTrim(sLine) Begins "---" Then
      If sState = "code" Then CloseSection(aResult)
      aResult.Add("[[ result")
      sState = "result"
      Continue
    Endif
    
    If Not sState Then
      aResult.Add("[[ code gambas")
      sState = "code"
    Endif
    
    If Left(sLine, 4) <> "    " Then
      If sState Then
        CloseSection(aResult)
        sState = ""
      Endif
      aResult.Add(sLine)
      Continue
    Endif
    
    If sState = "code" Then 
      sLine = Mid$(sLine, 5)
      aResult.Add(sLine)
      Continue
    Else If sState = "result" Then
      aResult.Add(sLine)
      Continue
    Endif
    
    aResult.Add(sLine)
    
  Next
  
  Return aResult.Join("\n")

End

Private Sub _PrintPage()

  Dim sPath As String
  Dim sData As String
  Dim iPos As Integer
  Dim aFile As String[]
  Dim sDir As String
  Dim sLine As String
  Dim sColor As String
  Dim sResult As String
  Dim aLine As String[]
  Dim dDate As Date
  Dim sDate As String
  Dim hStat As Stat
  Dim hStatDef As Stat
  Dim hClass As CClassInfo
  Dim sDefaultHelp As String
  Dim nTry As Integer

  If Main.Edit Then
    
    If Session["preview"] Then
      Print Html(Session["preview"]);
      Session["preview"] = ""
      Return
    Endif
    
    sPath = Main.GetPagePath()  
    If Exist(sPath) Then sData = File.Load(sPath)
    ' If Not sData Then
    '   sPath = Main.Path
    '   'sData = OldWiki.GetPage(sPath)
    ' Endif
    If Not sData Then
      If Main.Symbol Then
        sData = "@{syntax}\n@{help}\n" '& Main.GetDefaultPage()
      Else If Main.Class Then
        sData = "@{help}\n@{symbols}\n"
      Endif
    Endif
    ' If Main.Path Begins "/comp/" Or If Main.Path Begins "/lang/" Or If Main.Path Begins "/cat/" Then
    '   sData = RewriteExample(sData)
    ' Endif
    Print Html(sData);
    Return
  Endif

  If Main.Image Then
    Print Main.GetImageHTML(Main.Path);
    Return
  Endif
  
  If Main.Preview Then
    
    sData = Request["page"]
    Print "<div class=\"unknown\">"; Subst(("Warning! This is a preview. Click on the <b>&1</b> button to go back to the edit page."), ("Cancel")); "</div>"
    
  Else
  
    sPath = Main.SolvePath(Main.Path)
    
    If Not Main.ExistPage(sPath) Then
      Main.Lang = Main.DEFAULT_LANG
      sPath = Main.SolvePath(Main.Path)
    Endif

    If Main.Class Then    
  
      If Main.Class Ends "[]" And If Not CComponent.Get(Main.Component)[Main.Class] Then
        Main.SubstClass = Main.Class
        Main.Class = "*[]"
        sPath = Main.SolvePath("/comp/" & LCase(Main.Component &/ Main.Class &/ Main.Symbol))
      Endif
      
    Endif
      
    If Not Main.ExistPage(sPath) And If Not Main.HasDefaultHelp() Then
    
      If Main.Symbol Then
      
        Do
          
          Try hClass = CComponent.Get(Main.Component)[Main.Class]
          If Error Or If Not hClass Or If Not hClass.Parent Then Break
  
          Main.Component = hClass.ParentComponent
          Main.Class = hClass.Parent
  
          sPath = Main.SolvePath("/comp/" & LCase(Main.Component &/ Main.Class &/ Main.Symbol))
          If Main.ExistPage(sPath) Or If Main.HasDefaultHelp() Then Break
          
        Loop
        
      Endif
      
    Endif
    
  TRY_AGAIN:
    
    If Not Main.ExistPage(sPath) Then
      
      If Main.Symbol Or If Main.Class Then
        
        If Main.Lang <> Main.DEFAULT_LANG Then
          Print "<div class=\"unknown\">"; ("This page does not exist in that language."); "</div>"
        Endif

        ' We use an automatic page
        Main.Lang = Main.DEFAULT_LANG
        If Main.Symbol Then
          sDefaultHelp = Main.GetDefaultHelp()
          If sDefaultHelp Begins "-->" Then
            sPath = Main.SolvePath(Main.MakeAbsolute(Trim(Mid$(sDefaultHelp, 4)), sPath))
            Inc nTry
            If nTry < 8 Then Goto TRY_AGAIN
          Else
            sData = "@{syntax}\n\n" & sDefaultHelp
          Endif
        Else If Main.Class Then
          sData = Main.GetDefaultHelp() & "\n@{symbols}\n" 
        Endif
        Goto DISPLAY_PAGE
        
      Else
        
        If Main.Lang = Main.DEFAULT_LANG Then
          Print "<div class=\"unknown\">"; ("This page does not exist."); "</div>"
        Else
          Print "<div class=\"unknown\">"; ("This page does not exist in that language."); "</div>"
        Endif
        If Not Main.ExistPage(sPath, Main.DEFAULT_LANG) Then Return
        Main.Lang = Main.DEFAULT_LANG
        
      Endif
      
    Endif
    
    If Main.History Then
      
      sDir = File.Dir(Main.GetPagePathFrom(sPath))
      aFile = Dir(sDir, "~page.*.*").Sort(gb.Descent)
      If aFile.Count >= 2 Then
        iPos = Min(Main.History - 1, aFile.Max - 1)
        Exec ["diff", "-U", "10000", sDir &/ aFile[iPos + 1], sDir &/ aFile[iPos]] To sResult
        
        sDate = Mid$(aFile[iPos], 7)
        dDate = Date(CInt(Mid$(sDate, 1, 4)), CInt(Mid$(sDate, 5, 2)), CInt(Mid$(sDate, 7, 2)), CInt(Mid$(sDate, 9, 2)), CInt(Mid$(sDate, 11, 2)), CInt(Mid$(sDate, 13, 2)))
        Print "<h3>"; Html(Format(dDate, gb.GeneralDate)); " - "; Html(File.Ext(aFile[iPos])); "</h3>"
        
        If sResult Then
        
          aLine = Split(sResult, "\n")
          aLine.Remove(0, 3)
          
          For Each sLine In aLine
            
            sColor = Left(sLine)
            sLine = Mid$(sLine, 2)
            
            sData &= "<div style=\"background-color:"
            If sColor = " " Then
              sData &= "none"
            Else If sColor = "+" Then
              sData &= "#D8FFD8"
            Else If sColor = "-" Then
              sData &= "#FFD8D8"
            Endif
            sData &= ";\">"
            If sColor = "-" Then sData &= "<s>"
            
            sData &= Html(sLine)
            
            If sColor = "-" Then sData &= "</s>"
            sData &= "</div>"
            If Not sLine Then sData &= "\n"
            
          Next
          
          Print "<div><pre>"; sData; "</pre></div>"
          
        Else
          
          Print "<br><div class=\"unknown\">"; ("No change."); "</div>"
          
        Endif
          
        Return
        
      Endif
      
    Endif
    
    If Main.Lang <> Main.DEFAULT_LANG Then
      hStat = Stat(Main.GetPagePathFrom(Main.Path))
      hStatDef = Stat(Main.GetPagePathFrom(Main.Path, Main.DEFAULT_LANG))
      If hStat And If hStatDef And If hStatDef.LastModified > hStat.LastModified Then
        Print "<div class=\"more-recent\"><i><a target=\"_blank\" href=\"" & Html(URL.UnsetQuery("http://" & Application.Host &/ Application.Root &/ Request.Path & Main.LinkSuffix, "l")) & "\">" & Html(("The english page is more recent.")) & "</a></i></div>"
      Endif
    Endif
    
    sPath = Main.GetPagePathFrom(sPath)
    Main.AddCacheHeaders(Stat(sPath).LastModified)
    sData = LTrim(File.Load(sPath))
    
  Endif
  
DISPLAY_PAGE:
  
  If sData Begins "==>" Then
    iPos = InStr(sData, "\n")
    If iPos Then sData = Left(sData, iPos - 1)
    sData = Trim(Mid$(sData, 4))
    Print "<tt>==>"; Html(sData); "</tt>"
    If Not Session.Id Then
      Response.Cancel
      Response.Redirect(Application.Root &/ sData)
    Endif
    Return
  Endif
  
  If Main.Class Then
    If sData Begins "# " Then
      iPos = InStr(sData, "\n")
      If iPos = 0 Then iPos = Len(sData)
      sData = Mid$(sData, iPos + 1)
    Endif
    'sData = "# <a href=\"" & Application.Root &/ File.Dir(Main.Path) & "\" class=\"symbol\">" & Html(Main.GetSymbolTitle()) & "</a>\n" & sData
    If Main.Symbol Then
      sData = "# " & Main.GetSymbolTitle() & "\n" & sData
    Else
      sData = "# " & Main.GetClassTitle() & "\n" & sData
    Endif
    
    If Main.SubstClass Then
      sData = Replace(sData, "\\*", Left(Main.SubstClass, -2)) 
    Endif
    
  Endif
  
  Print WikiMarkdown.ToHTML(sData)

Catch
  
  Print "<pre>"; Html(Error.Text); " at line #"; WikiMarkdown.Line + 1; ":\n\n"; Html(WikiMarkdown.Current); "\n\nStack backtrace:\n\n"; Error.Backtrace.Join("\n")
  Print Main.Component; " / "; Main.Class; " / "; Main.Symbol
  Print "</pre>";

End

Private Sub _PrintParent()

  Print Html(Application.Root & Main.LinkSuffix);

End

Private Sub _PrintLang()

  Dim sLang As String
  
  If Request.Exist("nl") Then
    
    Print "<input type=\"hidden\" name=\"lang\" value=\""; Html(Main.Lang); "\">"
  
  Else
    
    Print "<select id=\"lang\" name=\"lang\" onchange=\"document.form.submit();\">"
  
    For Each sLang In Main.Languages.Copy().Sort()
      Print "<option value=\""; sLang; "\"";
      If sLang = Main.Lang Then Print " selected";
      Print ">"; Html(sLang); "</option>"
    Next
  
    Print "</select>"  
    
  Endif

End

Private Sub _PrintIndex()

  $aSel = Main.GetSelection()
  PrintIndexPath()
  CComponent.Reset

End

Private Sub PrintIndexPath(Optional sLink As String, Optional iIndent As Integer)

  Dim bCurrent As Boolean
  Dim sTitle As String
  Dim bNoTitle As Boolean
  Dim bImage As Boolean
  Dim aChildren As String[]
  Dim sChild As String
  
  If Not sTitle Then sTitle = Main.GetPageTitle(sLink)
  
  aChildren = Main.GetPageChildren(sLink)

  bNoTitle = Not sTitle
  If bNoTitle And If Session.Id Then 
    sTitle = File.Name(sLink)
    If Main.IsImage(sLink) Then
      bNoTitle = False
      bImage = True
    Endif
  Endif
  
  If sTitle Then
  
    bCurrent = sLink = Main.Path
    
    Print "<div class=\"entry";
    If bCurrent Then Print " current";
    If Main.IsSelected(sLink) Then Print " selected";
    If bNoTitle Then Print " deleted";
    If sLink And If aChildren.Count Then Print " children";
    Print "\" style=\"padding-left:"; CStr(iIndent + 1); "em;\"";
    If bCurrent Then Print " id=\"current-entry\"";
    Print ">";
    Print "<a href=\""; 
    If bCurrent And If Main.Path Then
      Print Html(Application.Root &/ File.Dir(sLink)); 
    Else
      Print Html(Application.Root &/ sLink); 
    Endif
    Print Main.LinkSuffix; "\">";
    If bImage Then Print "‚ñ°&nbsp;";
    Print sTitle; 
    Print "</a></div>"
    
  Endif
  
  If Not sLink Or If Main.Path & "/" Begins sLink & "/" Then
  
    For Each sChild In aChildren
      PrintIndexPath("/" &/ sLink &/ sChild, iIndent + 1)
    Next
    
  Endif
  
End

Private Sub _PrintSelectionCount()

  Dim aSel As String[]

  aSel = Main.GetSelection()
  If aSel.Count = 0 Then Return
  Print " ("; CStr(aSel.Count); ")";

End

Private Sub _PrintSelectionList()

  Dim aSel As String[]

  aSel = Main.GetSelection()
  If aSel.Count = 0 Then Return
  Print Html(aSel.Join("\n"));

End

Private Sub _PrintMessage()

  Dim aMsg As String[]
  Dim sMsg As String

  If Not Session.Id Then Return
  aMsg = Session["message"]
  If Not aMsg Or If aMsg.Count = 0 Then Return

  Print "<div class=\"message\">"
  For Each sMsg In aMsg
    Print "<div>"; sMsg; "</div>"
  Next
  Print "</div>"
  
  Session["message"] = Null

End

Private Sub _PrintLastModified()

  Dim dDate As Date

  dDate = Main.GetPageLastModified()
  If dDate Then Print Html(Format(dDate, gb.GeneralDate));

End
