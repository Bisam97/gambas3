' Gambas module file

Public Result As String

Private $cTool As New Collection

Private _NET_CLIENT_LIST As Integer

Public Sub RunXdgUtil(sProg As String, aArg As String[]) 
  
  Dim sCmd As String
  Dim sPath As String
  Dim sDir As String
  Dim aCmd As String[]
  
  sCmd = $cTool[sProg]
  
  If Not sCmd Then 
    Shell "which " & sProg & " 2>&1" To sCmd
    If Process.LastValue Then 
      sDir = Temp$("xdg-utils")
      sDir = File.Dir(sDir) &/ File.BaseName(sDir)
      Try Mkdir sDir
      sCmd = sDir &/ sProg
      Copy "xdg-utils-1.0.2/scripts" &/ sProg To sCmd
      Shell "chmod a+x " & Quote.Shell(sCmd)
    Endif
    sCmd = Trim(sCmd)
    $cTool[sProg] = sCmd
  Endif
  
  aCmd = [sCmd]
  aCmd.Insert(aArg)
  Exec aCmd To Result 
  
  Select Case Process.LastValue  
    Case 1
      Error.Raise("Syntax error")
    Case 2
      Error.Raise("File does not exist")
    Case 3
      Error.Raise("A required tool could not be found")
    Case 4
      Error.Raise("The action has failed")
    Case 5
      Error.Raise("File access forbidden")
  End Select 
  
End

Public Sub Main()
  
  Dim vVal As Variant
  Dim iInd As Integer
  Dim iAtom As Integer
  
  'Desktop.OpenTerminal("/home/test")
  'Return
  
  'iAtom = _Desktop.InternAtom("_NET_CURRENT_DESKTOP")
  'Print iAtom
  '_Desktop.SetWindowProperty(_Desktop.RootWindow, iAtom, "XA_INTEGER", 1)
  '_Desktop.SendClientMessageToRootWindow(iAtom, [0])
  'Wait 0.5
  'vVal = _Desktop.GetWindowProperty(_Desktop.RootWindow, iAtom)
  
  ' If IsString(vVal) Then
  '   Print vVal
  ' Else If vVal Is Array Then
  '   Print "[";
  '   For iInd = 0 To vVal.Max
  '     If iInd Then Print ", ";
  '     Print vVal[iInd];
  '   Next
  '   Print "]"
  ' Endif

  'WatchWindows
  
End

Private Sub WatchWindows()
  
  Dim aWindow As Integer[]
  Dim hWindow As Integer
  Dim aIcon As Integer[]

  _NET_CLIENT_LIST = _Desktop.InternAtom("_NET_CLIENT_LIST")  
  aWindow = _Desktop.GetWindowProperty(_Desktop.RootWindow, _NET_CLIENT_LIST)
  For Each hWindow In aWindow
    Print hWindow;;
    aIcon = _Desktop.GetWindowProperty(hWindow, "_NET_WM_ICON")
    If aIcon Then Print aIcon[0];; aIcon[1];
    Print
  Next
  
End

Public Sub Desktop_Change(Window As Integer, Atom As Integer)
  
  Debug Window;; _Desktop.GetAtomName(Atom)
  
  If Window = _Desktop.RootWindow And If Atom = _NET_CLIENT_LIST Then
    WatchWindows
  Endif
  
End

Public Sub Desktop_Window(Window As Integer, X As Integer, Y As Integer, W As Integer, H As Integer)
  
  Debug Window;; X;; Y;; W;; H
  
End

