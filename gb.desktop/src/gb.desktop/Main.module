' Gambas module file

Public Result As String

Private $cTool As New Collection

Public Sub RunXdgUtil(sProg As String, aArg As String[]) 
  
  Dim sCmd As String
  Dim sPath As String
  Dim sDir As String
  Dim aCmd As String[]
  
  sCmd = $cTool[sProg]
  
  If Not sCmd Then 
    Shell "which " & sProg & " 2>&1" To sCmd
    If Process.LastValue Then 
      sDir = Temp$("xdg-utils")
      sDir = File.Dir(sDir) &/ File.BaseName(sDir)
      Try Mkdir sDir
      sCmd = sDir &/ sProg
      Copy "xdg-utils-1.0.2/scripts" &/ sProg To sCmd
      Shell "chmod a+x " & Quote.Shell(sCmd)
    Endif
    sCmd = Trim(sCmd)
    $cTool[sProg] = sCmd
  Endif
  
  aCmd = [sCmd]
  aCmd.Insert(aArg)
  Exec aCmd To Result 
  
  Select Case Process.LastValue  
    Case 1
      Error.Raise("Syntax error")
    Case 2
      Error.Raise("File does not exist")
    Case 3
      Error.Raise("A required tool could not be found")
    Case 4
      Error.Raise("The action has failed")
    Case 5
      Error.Raise("File access forbidden")
  End Select 
  
End

Public Sub Main()
  
  Dim vVal As Variant
  Dim iInd As Integer
  Dim iAtom As Integer
  
  'Desktop.OpenTerminal("/home/test")
  'Return
  
  iAtom = _Desktop.InternAtom("_NET_CURRENT_DESKTOP")
  Print iAtom
  '_Desktop.SetWindowProperty(_Desktop.RootWindow, iAtom, "XA_INTEGER", 1)
  _Desktop.SendClientMessageToRootWindow("_NET_CURRENT_DESKTOP", [0])
  Wait 0.5
  vVal = _Desktop.GetWindowProperty(_Desktop.RootWindow, iAtom)
  
  If IsString(vVal) Then
    Print vVal
  Else If vVal Is Array Then
    Print "[";
    For iInd = 0 To vVal.Max
      If iInd Then Print ", ";
      Print vVal[iInd];
    Next
    Print "]"
  Endif
  
End
