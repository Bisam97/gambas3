' Gambas class file

Export 

Class _Desktop

'STATIC PROPERTY READ Menus AS _DesktopMenus
'STATIC PROPERTY READ Icons AS _DesktopIcons
Static Property Read ScreenSaver As _DesktopScreenSaver
Static Property Read Type As String

Static Private $sDesktop As String

Static Public Sub SendMail({To} As String[], Optional Cc As String[], Optional Bcc As String[], Optional Subject As String, Optional Body As String, Optional Attachment As String)
  
  Dim aArg As String[]
  'xdg-email [--utf8] [--cc address] [--bcc address] [--subject text] [--body text
  ' ] [--attach file] { mailto-uri | address(es) }
  
  aArg = ["--utf8"]
  If CC And If CC.Count Then 
    aArg.Add("--cc")
    aArg.Insert(CC)
  Endif
  If BCC And If BCC.Count Then 
    aArg.Add("--bcc")
    aArg.Insert(BCC)
  Endif
  If Subject Then 
    aArg.Add("--subject")
    aArg.Add(Subject)
  Endif 
  If Body Then 
    aArg.Add("--body")
    aArg.Add(Body)
  Endif
  If Attachment Then 
    aArg.Add("--attach")
    aArg.Add(Attachment)
  Endif 
  
  If {To} And If To.Count Then 
    aArg.Insert({To})
  Endif
  
  Main.RunXdgUtil("xdg-email", aArg)
  
End

Static Public Sub {Open}(URL As String)
  
  Main.RunXdgUtil("xdg-open", [URL])
  
End

Static Private Function Menus_Read() As _DesktopMenus

  Return _DesktopMenus  

End


Static Private Function Icons_Read() As _DesktopIcons

  Return _DesktopIcons

End

Static Private Function ScreenSaver_Read() As _DesktopScreenSaver

  Return _DesktopScreenSaver

End

'  GB_STATIC_METHOD("Find", "Integer[]", CDESKTOP_find, "[(Title)s(Application)s(Role)s]"),

Static Public Sub FindWindow(Optional Title As String, Application As String, Role As String) As Integer[]
  
  Return _Desktop.FindWindow(Title, Application, Role)
  
End

' STATIC PRIVATE SUB InitKeys()
'   
'   $cKeys = NEW Collection
'   $cKeys["Ã©"] = "eacute"
'   
' END

Static Public Sub SendKeys(Keys As String)
  
  Dim iInd As Integer
  Dim sCar As String
  Dim iPos As Integer
  Dim aRelease As New String[]
  Dim bHold As Boolean
  Dim sErr As String
  Dim iLen As Integer = String.Len(Keys)
  
  Do
  
    Inc iInd
    If iInd > iLen Then Break
    
    sCar = String.Mid$(Keys, iInd, 1)
    
    If sCar = "[" Then 
      iPos = String.InStr(Keys, "]", iInd)
      If iPos = 0 Then Break
      sCar = String.Mid$(Keys, iInd + 1, iPos - iInd - 1)
      iInd = iPos
      If Not sCar Then Continue
    Else If sCar = "{" And If Not bHold Then
      bHold = True
      Continue
    Else If sCar = "}" And If bHold Then 
      bHold = False
      aRelease.Reverse
      For Each sCar In aRelease
        'DEBUG sCar;; FALSE
        _Desktop.SendKey(sCar, False)
      Next
      aRelease.Clear
      Continue
    Endif
    
    If Len(sCar) >= 2 Then 
      Try sCar = Conv(sCar, "UTF-8", "LATIN1")
    Endif
    
    If bHold Then
      'DEBUG sCar;; TRUE
      _Desktop.SendKey(sCar, True)
      aRelease.Add(sCar)
    Else
      'DEBUG sCar;; TRUE
      _Desktop.SendKey(sCar, True)
      'DEBUG sCar;; FALSE
      _Desktop.SendKey(sCar, False)
    Endif
    
  Loop 
  
Catch 

  sErr = Error.Text & ": '" & sCar & "'"
  
  For Each sCar In aRelease
    _Desktop.SendKey(sCar, False)
  Next

  Error.Raise(sErr)
  
End

Static Private Sub GetDesktop() As String
  
  If Not $sDesktop Then
    ' If [x "$KDE_FULL_SESSION" = x "true"]; Then DE = kde;
    ' elif[x "$GNOME_DESKTOP_SESSION_ID"! = x ""]; Then DE = gnome;
    ' elif xprop - root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
    ' fi
    
    If Application.Env["KDE_FULL_SESSION"] Then
      $sDesktop = "KDE"
    Else If Application.Env["GNOME_DESKTOP_SESSION_ID"] Then
      $sDesktop = "GNOME"
    Else If InStr(_Desktop.GetWindowProperty(_Desktop.RootWindow, "_DT_SAVE_MODE"), "xfce4") Then
      $sDesktop = "XFCE"
    Else
      $sDesktop = "?"
    Endif
    
  Endif
  
  Return $sDesktop
  
End


Static Public Sub OpenTerminal(Optional {Dir} As String)
  
  Dim sExec As String
  Dim sCmd As String
  
  Select Case GetDesktop()
  
    Case "KDE"
      sExec = "konsole"
    Case "GNOME"
      sExec = "gnome-terminal"
    Case "XFCE"
      sExec = "Terminal"
    Case Else
      sExec = "xterm"
  
  End Select
  
  If {Dir} Then
    sCmd = "(cd " & Quote.Shell({Dir}) & "; " & sExec & ")"
  Else
    sCmd = sExec
  Endif
  
  Shell sCmd
  
End


Static Private Function Type_Read() As String

  Return GetDesktop()  

End
